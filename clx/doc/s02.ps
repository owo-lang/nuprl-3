%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 9 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps10i /ILtimsi 10 map
	/timsps8i /ILtimsi 8 map
	/timsps18b /ILtimsb 18 map
	/timsps10b /ILtimsb 10 map
	/timsps12b /ILtimsb 12 map
	/symbb8 /ILsymbb 8 map
	/courps8 /ILcourps 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
/Courier /ILcourps ILEncoding ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 9 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Displays) 28237  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(2\03630) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(close\036display) 49908  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 50550  -64.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 58702  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 27297.0 m
(Closes) 60358  0.00 -1 s
( the connection to the X server for the specified ) 113574  -117.00 32 s
4 sf
(display) 121726  0.00 -1 s
3 sf
(. It destroys all server re\036) 149352  -116.60 32 s
52832.0 30457.0 m
(sources) 61295  0.00 -1 s
( \() 62644  -296.00 32 s
2 sf
(window) 72051  0.00 -1 s
3 sf
(, ) 73167  -296.00 32 s
2 sf
(font) 78025  0.00 -1 s
3 sf
(, ) 79141  -296.00 32 s
2 sf
(pixmap) 88235  0.00 -1 s
3 sf
(, ) 89351  -296.00 32 s
2 sf
(colormap) 100793  0.00 -1 s
3 sf
(, ) 101909  -296.00 32 s
2 sf
(cursor) 109746  0.00 -1 s
3 sf
(, and ) 115348  -295.50 32 s
2 sf
(gcontext) 125534  0.00 -1 s
3 sf
(\), that the client appli\036) 149352  -295.50 32 s
52832.0 33618.0 m
(cation) 59728  0.00 -1 s
( has created on this display, unless the close down mode) 120975  -232.00 32 s
( of the server resource has) 149352  -232.60 32 s
52832.0 36779.0 m
(been) 58160  0.00 -1 s
( changed \(see ) 75040  272.00 32 s
2 sf
(set\036close\036down\036mode) 100115  0.00 -1 s
3 sf
(\). Therefore, these server resources should) 149352  272.20 32 s
52832.0 39940.0 m
(never) 59099  0.00 -1 s
( be referenced again. In addition,) 96570  50.00 32 s
( this function discards any output requests that) 149352  49.43 32 s
52832.0 43101.0 m
(have) 58160  0.00 -1 s
( been buffered but have not yet been sent.) 104972  -36.00 32 s
( ) 105641  -37.00 32 s
4 sf
52832.0 49378.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
139531.0 7925.0 m
(Displays) 147448  0.00 -1 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(2\03629) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(with\036display) 49438  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 50093  -51.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 58245  0.00 -1 s
3 sf
( &body ) 67395  -50.50 32 s
4 sf
(body) 72881  0.00 -1 s
2 sf
142014.0 h
3 sf
(Macro) 149379  0.00 -1 s
2 sf
3 sf
52832.0 27297.0 m
(This) 57849  0.00 -1 s
( macro is for use in a multi\036process environment. ) 112905  -117.67 32 s
2 sf
(with\036display) 127799  0.00 -1 s
3 sf
( provides exclusive) 149352  -117.50 32 s
52832.0 30457.0 m
(access) 60040  0.00 -1 s
( to the local ) 74222  57.50 32 s
2 sf
(display) 82848  0.00 -1 s
3 sf
( object for multiple request generation. It need not provide) 149352  57.44 32 s
52832.0 33618.0 m
(immediate) 64744  0.00 -1 s
( exclusive access for replies. That is, if another process) 125764  -125.00 32 s
( is waiting for a reply) 149352  -125.60 32 s
52832.0 36779.0 m
(\(while) 60040  0.00 -1 s
( not in a ) 69986  17.00 32 s
2 sf
(with\036display) 84880  0.00 -1 s
3 sf
(\), then) 92107  17.00 32 s
( synchronization need not \(but can\) occur immedi\036) 149352  16.43 32 s
52832.0 39940.0 m
(ately.) 59023  0.00 -1 s
( Except where noted, all routines effectively contain an implicit ) 134458  294.40 32 s
2 sf
(with\036display) 149352  0.00 -1 s
3 sf
52832.0 43101.0 m
(where) 59725  0.00 -1 s
( needed, so that correct synchronization is always provided at the interface level) 149352  -60.75 32 s
52832.0 46262.0 m
(on) 55654  0.00 -1 s
( a per\036call basis. Nested uses of) 90675  -80.00 32 s
( this macro work correctly. This macro does not pre\036) 149352  -80.56 32 s
52832.0 49423.0 m
(vent) 57691  0.00 -1 s
( concurrent event processing) 89923  -44.00 32 s
( \(see ) 95789  -44.50 32 s
2 sf
(with\036event\036queue) 116634  0.00 -1 s
3 sf
(\). ) 118940  -45.00 32 s
4 sf
52832.0 55699.0 m
(display) 60984  0.00 -1 s
( \037) 64178  -21.00 32 s
( ) 64862  -22.00 32 s
3 sf
(A ) 67584  -21.00 32 s
2 sf
(display) 76210  0.00 -1 s
3 sf
(. ) 77600  -22.00 32 s
20320.0 61208.0 m
0.0 0.0 m
newpath
20455 59584 av
148878 59582 as
[] 0 setdash
dp
149352.0 61208.0 m
/timsps12b 5 declareFont
5 sf
20320.0 64595.0 m
(Managing) 34995  0.00 -1 s
( the) 40368  13.00 32 s
( ) 41227  12.00 32 s
52832.0 h
2 sf
(2.4) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(Most) 64357  0.00 -1 s
( CLX functions cause output requests to be generated to an X) 149352  1421.27 32 s
5 sf
20320.0 67982.0 m
(Output) 30857  0.00 -1 s
( Buffer) 41114  8.00 32 s
52832.0 h
3 sf
(server.) 60431  0.00 -1 s
( Output requests) 78538  -195.00 32 s
( are not transmitted immediately but instead are stored in an ) 144807  -195.55 32 s
4 sf
(out\036) 149352  0.00 -1 s
52832.0 71143.0 m
(put) 56438  0.00 -1 s
( buffer) 63943  58.00 32 s
3 sf
( for) 67996  58.00 32 s
( the appropriate display. Requests in the output buffer are typically sent) 149352  57.45 32 s
52832.0 74303.0 m
(only) 57849  0.00 -1 s
( when the buffer is filled. Alternatively, buffered requests can be sent prior to proc\036) 149352  -180.86 32 s
52832.0 77464.0 m
(essing) 59887  0.00 -1 s
( an event in the input event queue \(see paragraph 12.3,) 122907  142.00 32 s
( Processing Events\). In) 149352  141.33 32 s
52832.0 80625.0 m
(either) 59256  0.00 -1 s
( case, CLX sends the output buffer automatically without explicit instructions) 149352  239.30 32 s
52832.0 83786.0 m
(from) 58316  0.00 -1 s
( the client application.) 83312  -28.00 32 s
( ) 83989  -29.00 32 s
52832.0 90063.0 m
(However,) 63879  0.00 -1 s
( in some cases, explicit control over the output buffer is needed, typically to) 149352  -14.69 32 s
52832.0 93224.0 m
(ensure) 60197  0.00 -1 s
( that the X server is in a consistent state before proceeding) 125159  -86.00 32 s
( further. The ) 139787  -86.67 32 s
2 sf
(display\036) 149352  0.00 -1 s
52832.0 96385.0 m
(force\036output) 67876  0.00 -1 s
3 sf
( and ) 73337  -13.00 32 s
2 sf
(display\036finish\036output) 98580  0.00 -1 s
3 sf
( functions allow a client program to synchro\036) 149352  -12.86 32 s
52832.0 99545.0 m
(nize) 57533  0.00 -1 s
( with buffered output requests.) 91959  -33.75 32 s
2 sf
34544.0 105822.0 m
(display\036after\036function) 60876  0.00 -1 s
( ) 61500  -82.00 32 s
4 sf
(display) 69652  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 108983.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 112144.0 m
(  after\036function ) 70399  -23.00 32 s
3 sf
(\037 Type) 79703  -23.00 32 s
( ) 80385  -24.00 32 s
2 sf
(function) 90418  0.00 -1 s
3 sf
( or ) 94133  -23.50 32 s
2 sf
(null) 98839  0.00 -1 s
3 sf
(.) 99545  0.00 -1 s
52832.0 116930.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73533  -75.00 32 s
2 sf
(setf) 77762  0.00 -1 s
3 sf
(\) sets the ) 88275  -75.00 32 s
4 sf
(after\036function) 103793  0.00 -1 s
3 sf
( for the given ) 119324  -75.00 32 s
4 sf
(display) 127476  0.00 -1 s
3 sf
(. If ) 131322  -75.00 32 s
4 sf
(after\036function) 146840  0.00 -1 s
3 sf
( is) 149352  -76.00 32 s
52832.0 120091.0 m
(non\036) 58004  0.00 -1 s
2 sf
(nil) 61141  0.00 -1 s
3 sf
(,) 61847  0.00 -1 s
( it is a function that is called after every protocol) 114125  -258.00 32 s
( request is generated, even those) 149352  -258.60 32 s
52832.0 123252.0 m
(inside) 59573  0.00 -1 s
( an explicit ) 73470  217.00 32 s
2 sf
(with\036display) 88364  0.00 -1 s
3 sf
(, but never called from inside the ) 127817  217.29 32 s
4 sf
(after\036function) 143335  0.00 -1 s
3 sf
(. The) 149352  217.00 32 s
52832.0 126413.0 m
(function) 62236  0.00 -1 s
( is called inside the effective ) 95096  -9.00 32 s
2 sf
(with\036display) 109990  0.00 -1 s
3 sf
( for the associated request. The) 145053  -9.00 32 s
( de\036) 149352  -10.00 32 s
52832.0 129574.0 m
(fault) 58003  0.00 -1 s
( value is ) 67635  -160.00 32 s
2 sf
(nil) 70772  0.00 -1 s
3 sf
(. This can be set, for example, to #') 109385  -160.00 32 s
2 sf
(display\036force\036output) 133994  0.00 -1 s
3 sf
( or #') 139787  -159.50 32 s
2 sf
(display\036) 149352  0.00 -1 s
52832.0 132735.0 m
(finish\036outpu) 67571  0.00 -1 s
3 sf
(t.) 69061  0.00 -1 s
( ) 69743  -24.00 32 s
4 sf
52832.0 139011.0 m
(display) 60984  0.00 -1 s
( ) 61661  -29.00 32 s
3 sf
(\037 A ) 67875  -28.50 32 s
2 sf
(display) 76501  0.00 -1 s
3 sf
( object.) 84780  -29.00 32 s
2 sf
34544.0 143798.0 m
(display\036force\036output) 59153  0.00 -1 s
3 sf
( ) 59762  -97.00 32 s
4 sf
(display) 67914  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 148517.0 m
(Forces) 60355  0.00 -1 s
( any buffered output to be sent to the X server.) 112686  -25.60 32 s
4 sf
52832.0 154793.0 m
(display) 60984  0.00 -1 s
( ) 61661  -29.00 32 s
3 sf
(\037 A ) 67875  -28.50 32 s
2 sf
(display) 76501  0.00 -1 s
3 sf
( object.) 84780  -29.00 32 s
2 sf
34544.0 159580.0 m
(display\036finish\036output) 59787  0.00 -1 s
3 sf
( ) 60439  -54.00 32 s
4 sf
(display) 68591  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 164298.0 m
(Forces) 60355  0.00 -1 s
( any buffered output to be sent to the X) 105060  47.00 32 s
( server and then waits until all requests) 149352  46.43 32 s
52832.0 167459.0 m
(have) 58160  0.00 -1 s
( been) 63930  -264.00 32 s
( received and processed. Any errors generated are read and handled by the dis\036) 149352  -264.54 32 s
52832.0 170620.0 m
(play) 57691  0.00 -1 s
( error) 63871  -7.00 32 s
( handler. Any events generated by output requests are read and stored in the) 149352  -7.54 32 s
52832.0 173781.0 m
(event) 58944  0.00 -1 s
( queue.) 66988  -107.00 32 s
4 sf
52832.0 180058.0 m
(display) 60984  0.00 -1 s
( ) 61661  -29.00 32 s
3 sf
(\037 A ) 67875  -28.50 32 s
2 sf
(display) 76501  0.00 -1 s
3 sf
( object.) 84780  -29.00 32 s
20320.0 185567.0 m
0.0 0.0 m
newpath
20455 183943 av
148878 183941 as
[] 0 setdash
dp
149352.0 185567.0 m
5 sf
20320.0 188953.0 m
(Closing) 31233  0.00 -1 s
( the) 36599  6.00 32 s
52832.0 h
2 sf
(2.5) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(To) 61690  0.00 -1 s
( close or disconnect a display from the) 104998  -27.00 32 s
( X server, use ) 121110  -27.50 32 s
2 sf
(close\036display) 136474  0.00 -1 s
3 sf
(. ) 137858  -28.00 32 s
2 sf
() 137858  0.00 -1 s
140208.0 h
() 140208  0.00 -1 s
5 sf
20320.0 192340.0 m
(Display) 31233  0.00 -1 s
52832.0 h
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Displays) 28237  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(2\03628) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(display\036resource\036id\036mask ) 65700  -117.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 73852  0.00 -1 s
2 sf
139373.0 h
/timsps10 3 declareFont
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  resource\036id\036mask ) 74604  -31.00 32 s
3 sf
(\037 Type ) 84575  -31.00 32 s
2 sf
(resource\036id) 98210  0.00 -1 s
3 sf
(. ) 99591  -31.00 32 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the ) 65966  -252.00 32 s
4 sf
(resource\036id\036mask) 85713  0.00 -1 s
3 sf
( that was returned from the server during connection setup) 149352  -251.89 32 s
52832.0 36779.0 m
(for) 56121  0.00 -1 s
( the specified ) 71570  -101.00 32 s
4 sf
(display) 79722  0.00 -1 s
3 sf
(. The ) 86026  -101.00 32 s
4 sf
(resource\036id\036mask) 105773  0.00 -1 s
3 sf
( contains a single contiguous) 137977  -101.00 32 s
( set of bits) 149352  -101.67 32 s
52832.0 39940.0 m
(\(at) 55808  0.00 -1 s
( least 18\) which the client uses to allocate resource IDs for) 121474  -36.00 32 s
( types ) 128770  -36.50 32 s
2 sf
(window) 138177  0.00 -1 s
3 sf
(, ) 139552  -37.00 32 s
2 sf
(pixmap) 148646  0.00 -1 s
3 sf
(,) 149352  0.00 -1 s
52832.0 43101.0 m
2 sf
(cursor) 60669  0.00 -1 s
3 sf
(,) 61375  0.00 -1 s
( ) 62018  -63.00 32 s
2 sf
(font) 66876  0.00 -1 s
3 sf
(, ) 68225  -63.00 32 s
2 sf
(gcontext) 78411  0.00 -1 s
3 sf
(, and ) 84478  -63.00 32 s
2 sf
(colormap) 95920  0.00 -1 s
3 sf
( by choosing a value with \(only\) some subset of) 149352  -63.56 32 s
52832.0 46262.0 m
(these) 58631  0.00 -1 s
( bits set, and ) 72272  -294.00 32 s
2 sf
(or) 74936  0.00 -1 s
3 sf
(ing it with the ) 90222  -294.00 32 s
4 sf
(resource\036id\036base) 109343  0.00 -1 s
3 sf
(. Only) 116104  -294.00 32 s
( values constructed in this way) 149352  -294.60 32 s
52832.0 49423.0 m
(can) 56749  0.00 -1 s
( be used to name newly created server resources over this connection. Server re\036) 149352  155.15 32 s
52832.0 52584.0 m
(source) 60197  0.00 -1 s
( IDs never have the top three bits set. The client is not) 119859  -103.00 32 s
( restricted to linear or con\036) 149352  -103.60 32 s
52832.0 55745.0 m
(tiguous) 61142  0.00 -1 s
( allocation of server resource IDs. Once an ID has been freed, it can be reused,) 149352  -32.87 32 s
52832.0 58905.0 m
(but) 56438  0.00 -1 s
( this) 61195  -26.00 32 s
( should not be necessary. ) 90063  -26.60 32 s
52832.0 65182.0 m
(An) 56280  0.00 -1 s
( ID must be unique with respect to the) 97899  -186.00 32 s
( IDs of all other server resources, not just other) 149352  -186.56 32 s
52832.0 68343.0 m
(server) 59725  0.00 -1 s
( resources of the same type. However, note) 106423  -281.00 32 s
( that the value spaces of server resource) 149352  -281.57 32 s
52832.0 71504.0 m
(identifiers,) 64978  0.00 -1 s
( atoms, visualids, and keysyms are) 103422  -134.00 32 s
( distinguished by context, and as such are) 149352  -134.57 32 s
52832.0 74665.0 m
(not) 56438  0.00 -1 s
( required to be disjoint \(for example,) 98321  71.00 32 s
( a given numeric value might be both a valid) 149352  70.44 32 s
52832.0 77826.0 m
(window) 61923  0.00 -1 s
( ID,) 66280  -31.00 32 s
( a valid atom, and a valid keysym.\)) 105641  -31.57 32 s
4 sf
52832.0 84102.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 88889.0 m
(display\036roots) 50221  0.00 -1 s
3 sf
( ) 50866  -61.00 32 s
4 sf
(display) 59018  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 92050.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 95210.0 m
(  roots ) 60732  -6.67 32 s
3 sf
(\037 A list of screens. ) 83899  -6.60 32 s
52832.0 99929.0 m
(Returns) 61610  0.00 -1 s
( a list of all the ) 79043  -20.83 32 s
2 sf
(screen) 86722  0.00 -1 s
3 sf
( structures available for the given ) 124998  -20.50 32 s
4 sf
(display) 133150  0.00 -1 s
3 sf
(. ) 134541  -21.00 32 s
4 sf
52832.0 106206.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 110992.0 m
(display\036vendor) 52575  0.00 -1 s
( ) 53169  -112.00 32 s
4 sf
(display) 61321  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 114153.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 117314.0 m
(  vendor\036name) 69048  -42.00 32 s
3 sf
(, ) 70418  -42.00 32 s
4 sf
(release\036number ) 88792  -42.00 32 s
3 sf
(\037 Type ) 98741  -42.00 32 s
2 sf
(card32) 107049  0.00 -1 s
3 sf
(.) 107755  0.00 -1 s
( ) 108418  -43.00 32 s
52832.0 122033.0 m
(Returns) 61610  0.00 -1 s
( ) 62155  -161.00 32 s
4 sf
(vendor\036name) 77043  0.00 -1 s
3 sf
( and ) 82208  -161.00 32 s
4 sf
(release\036number) 99918  0.00 -1 s
3 sf
( as multiple values.) 121226  -161.00 32 s
( See the ) 130382  -161.67 32 s
2 sf
(display\036vendor\036) 149352  0.00 -1 s
52832.0 125194.0 m
(name) 59415  0.00 -1 s
3 sf
( and ) 64802  -50.00 32 s
2 sf
(display\036release\036number) 93174  0.00 -1 s
3 sf
( functions for additional) 120219  -50.00 32 s
( information.) 134902  -51.00 32 s
4 sf
52832.0 131470.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 136257.0 m
(display\036vendor\036name) 60097  0.00 -1 s
( ) 60665  -138.00 32 s
4 sf
(display) 68817  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 139418.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 142579.0 m
( ) 53510  -28.00 32 s
( vendor\036name ) 69753  -28.50 32 s
3 sf
(\037 Type ) 79729  -28.50 32 s
2 sf
(string) 86783  0.00 -1 s
3 sf
(. ) 88166  -29.00 32 s
52832.0 147297.0 m
(Returns) 61610  0.00 -1 s
( a string that provides some vendor identification of the X server implementa\036) 149352  -15.75 32 s
52832.0 150458.0 m
(tion) 57222  0.00 -1 s
( associated with the specified ) 90866  -26.80 32 s
4 sf
(display) 99018  0.00 -1 s
3 sf
(. ) 100403  -27.00 32 s
4 sf
52832.0 156735.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 161521.0 m
(display\036version\036number) 63390  0.00 -1 s
( ) 63961  -135.00 32 s
4 sf
(display) 72113  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 164682.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 167843.0 m
(  version\036number ) 72716  -34.00 32 s
3 sf
(\037 Type ) 82681  -34.00 32 s
2 sf
(card16) 90989  0.00 -1 s
3 sf
(.) 91695  0.00 -1 s
( ) 92366  -35.00 32 s
52832.0 172562.0 m
(Returns) 61610  0.00 -1 s
( the X protocol version number for this implementation of CLX. ) 134699  -24.64 32 s
4 sf
52832.0 178839.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 183625.0 m
(display\036xid) 47873  0.00 -1 s
( ) 48518  -61.00 32 s
4 sf
(display) 56670  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 186786.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 189947.0 m
(  resource\036allocator ) 76028  -27.67 32 s
3 sf
(\037 Type ) 86006  -27.50 32 s
2 sf
(function) 96039  0.00 -1 s
3 sf
(. ) 97423  -28.00 32 s
52832.0 194666.0 m
(Returns) 61610  0.00 -1 s
( the function that is used to allocate server resource IDs for this ) 133553  -18.00 32 s
4 sf
(display) 141705  0.00 -1 s
3 sf
(.) 142411  0.00 -1 s
( ) 143098  -19.00 32 s
4 sf
52832.0 200942.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
139531.0 7925.0 m
(Displays) 147448  0.00 -1 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(2\03627) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(display\036plist) 49283  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 49963  -26.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 58115  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  plist ) 59793  -6.00 32 s
3 sf
(\037) 62615  0.00 -1 s
( Type ) 69813  -6.50 32 s
2 sf
(list) 73418  0.00 -1 s
3 sf
(. ) 74823  -7.00 32 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73131  -209.00 32 s
2 sf
(setf) 77360  0.00 -1 s
3 sf
(\)) 78299  0.00 -1 s
( sets the property list for the specified ) 119884  -209.50 32 s
4 sf
(display) 128036  0.00 -1 s
3 sf
(. This function pro\036) 149352  -209.67 32 s
52832.0 36779.0 m
(vides) 58789  0.00 -1 s
( a hook where extensions can add data.) 102548  -40.86 32 s
4 sf
52832.0 43056.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 47842.0 m
(display\036protocol\036major\036version) 72161  0.00 -1 s
( ) 72722  -145.00 32 s
4 sf
(display) 80874  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 51003.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 54164.0 m
(  protocol\036major\036version ) 81338  -34.00 32 s
3 sf
(\037 Type ) 91304  -33.50 32 s
2 sf
(card16) 99612  0.00 -1 s
3 sf
(. ) 100990  -34.00 32 s
52832.0 58883.0 m
(Returns) 61610  0.00 -1 s
( the major version number of the X protocol associated with the specified ) 145120  -8.62 32 s
4 sf
(dis\036) 149352  0.00 -1 s
52832.0 62044.0 m
(play) 57691  0.00 -1 s
3 sf
(.) 58397  0.00 -1 s
( In general, the major version would increment for incompatible changes. The) 145590  -74.00 32 s
( re\036) 149352  -75.00 32 s
52832.0 65205.0 m
(turned) 60041  0.00 -1 s
( protocol version number indicates the protocol the server actually supports. This) 149352  -202.64 32 s
52832.0 68366.0 m
(might) 59417  0.00 -1 s
( not equal the version supported by the client. The server can \(but need not\) refuse) 149352  -200.73 32 s
52832.0 71526.0 m
(connections) 66312  0.00 -1 s
( from clients that offer a different version than the server supports. A server) 149352  -182.62 32 s
52832.0 74687.0 m
(can) 56749  0.00 -1 s
( \(but need not\) support more than one) 99082  -32.00 32 s
( version simultaneously. ) 127203  -32.67 32 s
4 sf
52832.0 80964.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 85750.0 m
(display\036protocol\036minor\036version) 72164  0.00 -1 s
( ) 72722  -148.00 32 s
4 sf
(display) 80874  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 88911.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 92072.0 m
(  protocol\036minor\036version ) 81338  -34.00 32 s
3 sf
(\037 Type ) 91304  -33.50 32 s
2 sf
(card16) 99612  0.00 -1 s
3 sf
(. ) 100990  -34.00 32 s
52832.0 96791.0 m
(Returns) 61610  0.00 -1 s
( the minor protocol revision) 93561  111.00 32 s
( number associated with the specified ) 137328  110.50 32 s
4 sf
(display) 145480  0.00 -1 s
3 sf
(. In) 149352  110.00 32 s
52832.0 99952.0 m
(general,) 61842  0.00 -1 s
( the minor version would increment for small) 111311  -244.00 32 s
( upward compatible changes in the) 149352  -244.60 32 s
52832.0 103113.0 m
(X) 54869  0.00 -1 s
( protocol.) 65657  -28.00 32 s
( ) 66334  -29.00 32 s
4 sf
52832.0 109389.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 114176.0 m
(display\036protocol\036version) 63858  0.00 -1 s
( ) 64436  -128.00 32 s
4 sf
(display) 72588  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 117337.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
52832.0 120498.0 m
(  ) 54168  -38.00 32 s
4 sf
(protocol\036major\036version) 80658  0.00 -1 s
3 sf
(,) 81364  0.00 -1 s
4 sf
( protocol\036minor\036version ) 109190  -38.00 32 s
3 sf
(\037 Type ) 119147  -38.00 32 s
2 sf
(card16) 127455  0.00 -1 s
3 sf
(. ) 128829  -38.00 32 s
52832.0 125216.0 m
(Returns) 61610  0.00 -1 s
( ) 62046  -270.00 32 s
4 sf
(protocol\036major\036version ) 88972  -270.00 32 s
3 sf
(and ) 93484  -269.00 32 s
4 sf
(protocol\036minor\036version) 119974  0.00 -1 s
3 sf
( as multiple values. See the) 149352  -269.60 32 s
52832.0 128377.0 m
2 sf
(display\036protocol\036major\036version) 90449  0.00 -1 s
3 sf
( and ) 96232  148.00 32 s
2 sf
(display\036protocol\036minor\036version) 133852  0.00 -1 s
3 sf
( functions for) 149352  148.50 32 s
52832.0 131538.0 m
(additional) 64118  0.00 -1 s
( information.) 78774  -78.00 32 s
4 sf
52832.0 137815.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 142601.0 m
(display\036resource\036id\036base) 64014  0.00 -1 s
( ) 64594  -126.00 32 s
4 sf
(display) 72746  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 145762.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 148923.0 m
(  resource\036id\036base ) 73975  -32.00 32 s
3 sf
(\037 Type ) 83944  -32.00 32 s
2 sf
(resource\036id) 97579  0.00 -1 s
3 sf
(.) 98285  0.00 -1 s
( ) 98958  -33.00 32 s
52832.0 153642.0 m
(Returns) 61610  0.00 -1 s
( the ) 66052  -209.00 32 s
4 sf
(resource\036id\036base) 85173  0.00 -1 s
3 sf
( value that was returned from the server during) 136474  -209.00 32 s
( connection) 149352  -210.00 32 s
52832.0 156803.0 m
(setup) 58789  0.00 -1 s
( for the specified ) 77560  -244.00 32 s
4 sf
(display) 85712  0.00 -1 s
3 sf
(.) 86418  0.00 -1 s
( This is used in combination with the ) 126949  -244.50 32 s
4 sf
(resource\036id\036mask) 146696  0.00 -1 s
3 sf
( to) 149352  -245.00 32 s
52832.0 159964.0 m
(construct) 63176  0.00 -1 s
( valid IDs for this connection. ) 97446  -22.83 32 s
4 sf
52832.0 166240.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Displays) 28237  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(2\03626) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10i 4 declareFont
4 sf
52832.0 22578.0 m
(display \037 ) 64855  -25.00 32 s
/timsps10 3 declareFont
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 27364.0 m
(display\036max\036keycode) 59939  0.00 -1 s
( ) 60507  -138.00 32 s
4 sf
(display) 68659  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 30525.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 33686.0 m
( ) 53499  -39.00 32 s
( max\036keycode ) 69559  -39.50 32 s
3 sf
(\037 Type ) 79513  -39.50 32 s
2 sf
(card8) 86410  0.00 -1 s
3 sf
(. ) 87782  -40.00 32 s
52832.0 38405.0 m
(Returns) 61610  0.00 -1 s
( the maximum keycode value for the specified ) 117124  317.00 32 s
4 sf
(display) 125276  0.00 -1 s
3 sf
(. This value is never) 149352  317.00 32 s
52832.0 41566.0 m
(greater) 60664  0.00 -1 s
( than 255. Not all keycodes in the allowed range are required) 126930  -231.00 32 s
( to have correspond\036) 149352  -231.67 32 s
52832.0 44727.0 m
(ing) 56438  0.00 -1 s
( keys. ) 63669  -30.00 32 s
4 sf
52832.0 51003.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 55790.0 m
(display\036max\036request\036length) 67618  0.00 -1 s
( ) 68206  -118.00 32 s
4 sf
(display) 76358  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 58951.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 62111.0 m
(  max\036request\036length ) 76784  -35.67 32 s
3 sf
(\037 Type ) 86746  -35.50 32 s
2 sf
(card16) 95054  0.00 -1 s
3 sf
(. ) 96430  -36.00 32 s
52832.0 66830.0 m
(Returns) 61610  0.00 -1 s
( the maximum length of a request, in four\036byte units, that is accepted by the) 149352  165.14 32 s
52832.0 69991.0 m
(specified) 63018  0.00 -1 s
( ) 63704  -20.00 32 s
4 sf
(display) 71856  0.00 -1 s
3 sf
(. Requests larger than this generate a length) 120933  -20.00 32 s
( error, and the server will) 149352  -20.60 32 s
52832.0 73152.0 m
(read) 57688  0.00 -1 s
( and simply discard the) 83879  3.00 32 s
( entire request. This length is always at least 4096 \(that is,) 149352  2.45 32 s
52832.0 76313.0 m
(requests) 62079  0.00 -1 s
( of length up to and including 16384 bytes are accepted by all servers\).) 141608  -31.69 32 s
4 sf
52832.0 82590.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 87376.0 m
(display\036min\036keycode) 59470  0.00 -1 s
3 sf
( ) 60055  -121.00 32 s
4 sf
(display) 68207  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 90537.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 93698.0 m
( ) 53502  -36.00 32 s
( min\036keycode ) 69099  -36.50 32 s
3 sf
(\037 Type ) 79059  -36.50 32 s
2 sf
(card8) 85956  0.00 -1 s
3 sf
(. ) 87331  -37.00 32 s
52832.0 98417.0 m
(Returns) 61610  0.00 -1 s
( the minimum keycode value for the specified ) 113711  -51.00 32 s
4 sf
(display) 121863  0.00 -1 s
3 sf
(.) 122569  0.00 -1 s
( This value is never less) 149352  -51.60 32 s
52832.0 101577.0 m
(than) 57691  0.00 -1 s
( eight. Not all keycodes in the allowed range are required to have corresponding) 149352  94.23 32 s
52832.0 104738.0 m
(keys.) 58711  0.00 -1 s
( ) 59380  -37.00 32 s
4 sf
52832.0 111015.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 115801.0 m
(display\036motion\036buffer\036size) 66361  0.00 -1 s
/courps8 6 declareFont
6 sf
( ) 67642  -76.00 32 s
4 sf
(display) 75794  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 118962.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 122123.0 m
(  motion\036buffer\036size ) 75560  -26.67 32 s
3 sf
(\037 Type ) 85540  -26.50 32 s
2 sf
(card32) 93848  0.00 -1 s
3 sf
(. ) 95233  -27.00 32 s
52832.0 126842.0 m
(Returns) 61610  0.00 -1 s
( the approximate size of the motion buffer for the specified ) 127974  -86.55 32 s
4 sf
(display) 136126  0.00 -1 s
3 sf
(. The server) 149352  -86.50 32 s
52832.0 130003.0 m
(can) 56749  0.00 -1 s
( retain the recent history of pointer motion at) 106904  -59.00 32 s
( a finer granularity than is reported by) 149352  -59.57 32 s
52832.0 133164.0 m
2 sf
(:motion\036notify) 70227  0.00 -1 s
3 sf
( events. Such history is available) 106893  -66.00 32 s
( through the ) 121037  -66.67 32 s
2 sf
(motion\036events) 137963  0.00 -1 s
3 sf
( function. ) 149352  -66.50 32 s
4 sf
52832.0 139440.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 144227.0 m
(display\036p) 45678  0.00 -1 s
3 sf
( ) 46328  -56.00 32 s
4 sf
(display) 54480  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 147388.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 150549.0 m
(  display\036p ) 65353  -33.00 32 s
3 sf
(\037 Type ) 75320  -33.00 32 s
2 sf
(boolean) 84728  0.00 -1 s
3 sf
(.) 85434  0.00 -1 s
52832.0 155267.0 m
(Returns) 61610  0.00 -1 s
( non\036) 67470  -18.00 32 s
2 sf
(nil) 70607  0.00 -1 s
3 sf
( if ) 73706  -18.00 32 s
4 sf
(display) 81858  0.00 -1 s
3 sf
( is a ) 87059  -17.33 32 s
2 sf
(display) 95685  0.00 -1 s
3 sf
( object; otherwise, returns ) 125630  -17.50 32 s
2 sf
(nil) 128767  0.00 -1 s
3 sf
(. ) 130161  -18.00 32 s
2 sf
34544.0 161544.0 m
(display\036pixmap\036formats) 63543  0.00 -1 s
3 sf
( ) 64165  -84.00 32 s
4 sf
(display) 72317  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 164705.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 167866.0 m
(  pixmap\036formats ) 72771  -16.00 32 s
3 sf
(\037 Type) 82082  -16.00 32 s
( ) 82771  -17.00 32 s
2 sf
(list) 86376  0.00 -1 s
3 sf
(.) 87082  0.00 -1 s
52832.0 172585.0 m
(Returns) 61610  0.00 -1 s
( the list of ) 73670  -3.00 32 s
2 sf
(pixmap\036format) 92006  0.00 -1 s
4 sf
( ) 92709  -3.00 32 s
3 sf
(values for the given) 115035  -3.00 32 s
( ) 115737  -4.00 32 s
4 sf
(display) 123889  0.00 -1 s
3 sf
(. This list contains one) 149352  -3.50 32 s
52832.0 175745.0 m
(entry) 58630  0.00 -1 s
( for each depth value. The entry describes the format used to represent images of) 149352  -29.79 32 s
52832.0 178906.0 m
(that) 57064  0.00 -1 s
( depth. An entry for a depth is included if any screen supports that depth, and all) 149352  105.38 32 s
52832.0 182067.0 m
(screens) 61137  0.00 -1 s
( supporting that depth must support \(only\) the format for that depth. ) 138221  -22.92 32 s
4 sf
52832.0 188344.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
139531.0 7925.0 m
(Displays) 147448  0.00 -1 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(2\03625) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(display\036error\036handler) 60879  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 61433  -152.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 69585  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  error\036handler ) 70540  -28.67 32 s
3 sf
(\037 Type ) 80516  -28.50 32 s
2 sf
(function) 90549  0.00 -1 s
3 sf
( or ) 94254  -28.50 32 s
2 sf
(sequence) 105071  0.00 -1 s
3 sf
(. ) 106454  -29.00 32 s
52832.0 33686.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73278  -160.00 32 s
2 sf
(setf) 77507  0.00 -1 s
3 sf
(\) sets the ) 87767  -159.33 32 s
4 sf
(error\036handler) 103443  0.00 -1 s
3 sf
( function for the given ) 128586  -159.60 32 s
4 sf
(display) 136738  0.00 -1 s
3 sf
(. CLX calls) 149352  -159.50 32 s
52832.0 36847.0 m
(\(one) 57846  0.00 -1 s
( of\) the display error handler functions to handle server errors returned to the con\036) 149352  -68.57 32 s
52832.0 40008.0 m
(nection.) 61845  0.00 -1 s
( The default error handler, ) 92577  66.00 32 s
2 sf
(default\036error\036handler) 118750  0.00 -1 s
3 sf
(, signals conditions as they) 149352  66.25 32 s
52832.0 43169.0 m
(occur.) 59805  0.00 -1 s
( See Section 16, Errors, for a list of the conditions that CLX can signal. For more) 149352  -129.81 32 s
52832.0 46330.0 m
(information) 66154  0.00 -1 s
( about errors and error handling, refer to the section entitled Common Lisp) 149352  -100.58 32 s
52832.0 49490.0 m
(Condition) 64121  0.00 -1 s
( System in the ) 80734  -41.00 32 s
4 sf
(Lisp Reference) 97544  -40.00 32 s
3 sf
( manual.) 107222  -41.00 32 s
52832.0 55767.0 m
(If) 54710  0.00 -1 s
( the value of ) 69226  -54.50 32 s
4 sf
(error\036handler) 84902  0.00 -1 s
3 sf
( is a sequence, it is expected to contain a handler function) 149352  -54.55 32 s
52832.0 58928.0 m
(for) 56121  0.00 -1 s
( each specific error. The error code is used as an index into the sequence to fetch the) 149352  -112.00 32 s
52832.0 62089.0 m
(appropriate) 65681  0.00 -1 s
( handler function. If this element is a function, it is called for all errors. Any) 149352  -137.73 32 s
52832.0 65250.0 m
(results) 60199  0.00 -1 s
( returned by the handler are ignored since it is assumed the) 126557  -2.00 32 s
( handler either takes) 149352  -2.67 32 s
52832.0 68411.0 m
(care) 57530  0.00 -1 s
( of the error) 70738  -63.00 32 s
( completely or else signals. The arguments passed to the handler func\036) 149352  -63.55 32 s
52832.0 71572.0 m
(tion) 57222  0.00 -1 s
( are the ) 66461  76.00 32 s
2 sf
(display) 75087  0.00 -1 s
3 sf
( object, a symbol naming the type of error, and a set of keyword\036) 149352  76.00 32 s
52832.0 74732.0 m
(value) 58944  0.00 -1 s
( argument pairs that vary depending on the type of error. For all core errors, the) 149352  45.27 32 s
52832.0 77893.0 m
(keyword\036value) 69756  0.00 -1 s
( argument pairs are: ) 92795  -39.00 32 s
2 sf
52832.0 84170.0 m
(:current\036sequence) 74616  0.00 -1 s
3 sf
83312.0 h
2 sf
(card16) 91620  0.00 -1 s
3 sf
52832.0 87331.0 m
2 sf
(:major) 61135  0.00 -1 s
3 sf
83312.0 h
2 sf
(card8) 90209  0.00 -1 s
3 sf
52832.0 90492.0 m
2 sf
(:minor) 61138  0.00 -1 s
3 sf
83312.0 h
2 sf
(card16) 91620  0.00 -1 s
3 sf
52832.0 93653.0 m
2 sf
(:sequence) 64588  0.00 -1 s
3 sf
83312.0 h
2 sf
(card16) 91620  0.00 -1 s
3 sf
( ) 92253  -73.00 32 s
52832.0 99929.0 m
(For) 56751  0.00 -1 s
( ) 57304  -153.00 32 s
2 sf
(colormap) 68746  0.00 -1 s
3 sf
(, ) 70005  -153.00 32 s
2 sf
(cursor) 77842  0.00 -1 s
3 sf
(, ) 79101  -153.00 32 s
2 sf
(drawable) 90388  0.00 -1 s
3 sf
(, ) 91647  -153.00 32 s
2 sf
(font) 96505  0.00 -1 s
3 sf
(, ) 97764  -153.00 32 s
2 sf
(gcontext) 107950  0.00 -1 s
3 sf
(,) 108656  0.00 -1 s
( ) 109208  -154.00 32 s
2 sf
(id\036choice) 120023  0.00 -1 s
3 sf
(, ) 121282  -153.00 32 s
2 sf
(pixmap) 130376  0.00 -1 s
3 sf
(, and ) 136262  -153.50 32 s
2 sf
(window) 145669  0.00 -1 s
3 sf
( er\036) 149352  -154.00 32 s
52832.0 103090.0 m
(rors,) 57925  0.00 -1 s
( the keyword\036value pairs are the core error pairs plus: ) 118849  -19.60 32 s
2 sf
52832.0 109367.0 m
(:resource\036id) 67406  0.00 -1 s
3 sf
83312.0 h
2 sf
(card32) 91620  0.00 -1 s
( ) 92253  -73.00 32 s
3 sf
52832.0 115643.0 m
(For) 56751  0.00 -1 s
( ) 57438  -19.00 32 s
2 sf
(:atom) 64488  0.00 -1 s
3 sf
( errors, the keyword\036value pairs are the core error pairs plus: ) 133390  -19.00 32 s
2 sf
52832.0 121920.0 m
(:atom\036id) 63174  0.00 -1 s
3 sf
83312.0 h
2 sf
(card32) 91620  0.00 -1 s
( ) 92253  -73.00 32 s
3 sf
52832.0 128197.0 m
(For) 56751  0.00 -1 s
( ) 57436  -21.00 32 s
2 sf
(:value) 64803  0.00 -1 s
3 sf
( errors, the keyword\036value pairs are the core error pairs plus: ) 133683  -21.00 32 s
2 sf
52832.0 134473.0 m
(:value) 60199  0.00 -1 s
3 sf
83312.0 h
2 sf
(card32) 91620  0.00 -1 s
3 sf
( ) 92253  -73.00 32 s
4 sf
52832.0 140750.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 145536.0 m
(display\036image\036lsb\036first\036p) 64168  0.00 -1 s
3 sf
( ) 64842  -32.00 32 s
4 sf
(display) 72994  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 148697.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 151858.0 m
(  image\036lsb\036first\036p ) 73852  -21.00 32 s
3 sf
(\037) 76674  0.00 -1 s
( Type ) 83842  -21.50 32 s
2 sf
(boolean) 93250  0.00 -1 s
3 sf
(.  ) 95346  -11.00 32 s
52832.0 156577.0 m
(Although) 63492  0.00 -1 s
( the server is generally responsible for byte swapping communication data to) 149352  -81.55 32 s
52832.0 159738.0 m
(match) 59728  0.00 -1 s
( the client, images \(pixmaps/bitmaps\) are always) 113869  -159.00 32 s
( transmitted and received in for\036) 149352  -159.60 32 s
52832.0 162899.0 m
(mats) 58162  0.00 -1 s
( \(including byte order\) specified by) 98400  70.00 32 s
( the server. Within images for each scan\036line) 149352  69.43 32 s
52832.0 166060.0 m
(unit) 57222  0.00 -1 s
( in bitmaps or for each pixel value in pixmaps, the leftmost bit in the image as dis\036) 149352  -48.71 32 s
52832.0 169220.0 m
(played) 60355  0.00 -1 s
( on the screen is either the least or most significant bit in) 123794  -30.00 32 s
( the unit. For the given) 149352  -30.60 32 s
52832.0 172381.0 m
4 sf
(display) 60984  0.00 -1 s
3 sf
(,) 61690  0.00 -1 s
( ) 62221  -175.00 32 s
2 sf
(display\036image\036lsb\036first\036p) 91845  0.00 -1 s
3 sf
( returns non\036) 105914  -175.00 32 s
2 sf
(nil) 109051  0.00 -1 s
3 sf
( if the leftmost bit is the least signifi\036) 149352  -174.63 32 s
52832.0 175542.0 m
(cant) 57533  0.00 -1 s
( bit;) 61990  -12.00 32 s
( otherwise, it returns ) 85843  -12.50 32 s
2 sf
(nil) 88980  0.00 -1 s
3 sf
(. ) 90379  -13.00 32 s
4 sf
52832.0 181819.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 186605.0 m
(display\036keycode\036range) 61664  0.00 -1 s
( ) 62200  -170.00 32 s
4 sf
(display) 70352  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 189766.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 192927.0 m
(  min\036keycode) 68408  -47.00 32 s
3 sf
(, ) 69773  -47.00 32 s
4 sf
(max\036keycode ) 85159  -47.00 32 s
3 sf
(\037 Type ) 95099  -46.50 32 s
2 sf
(card8) 101996  0.00 -1 s
3 sf
(. ) 103361  -47.00 32 s
52832.0 197646.0 m
(Returns) 61610  0.00 -1 s
( ) 62922  606.00 32 s
4 sf
(min\036keycode) 77180  0.00 -1 s
3 sf
( and ) 83879  606.00 32 s
4 sf
(max\036keycode) 98606  0.00 -1 s
3 sf
( as multiple values. See the ) 133676  606.33 32 s
2 sf
(display\036max\036) 149352  0.00 -1 s
52832.0 200807.0 m
(keycode) 62551  0.00 -1 s
3 sf
( and ) 67928  -55.00 32 s
2 sf
(display\036min\036keycode) 92854  0.00 -1 s
3 sf
( functions for additional information.) 134564  -54.75 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Displays) 28237  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(2\03624) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 3 declareFont
3 sf
20320.0 23300.0 m
0.0 0.0 m
newpath
20455 21676 av
148878 21674 as
[] 0 setdash
dp
149352.0 23300.0 m
/timsps12b 5 declareFont
5 sf
20320.0 26687.0 m
(Display ) 32083  3.00 32 s
52832.0 h
2 sf
(2.3) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(The) 62943  0.00 -1 s
( complete set of display attributes is discussed in the following) 149352  1555.30 32 s
2 sf
5 sf
20320.0 30074.0 m
(Attributes) 35176  0.00 -1 s
52832.0 h
3 sf
(paragraphs.) 65917  0.00 -1 s
2 sf
34544.0 36350.0 m
(display\036authorization\036data) 66681  0.00 -1 s
3 sf
( ) 67258  -129.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 75410  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 39511.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 42672.0 m
(  authorization\036data ) 76040  -25.00 32 s
3 sf
(\037 Type ) 86024  -24.50 32 s
2 sf
(string) 93078  0.00 -1 s
3 sf
(. ) 94465  -25.00 32 s
52832.0 47391.0 m
(Returns) 61610  0.00 -1 s
( the authorization data string for ) 99056  76.00 32 s
4 sf
(display) 107208  0.00 -1 s
3 sf
( that was transmitted to the server by) 149352  75.43 32 s
52832.0 50552.0 m
2 sf
(open\036display) 68199  0.00 -1 s
3 sf
( during connection setup. The data is) 109458  -60.00 32 s
( specific to the particular authoriza\036) 149352  -60.60 32 s
52832.0 53713.0 m
(tion) 57222  0.00 -1 s
( protocol that was used. The ) 88549  -200.00 32 s
2 sf
(display\036authorization\036name) 121939  0.00 -1 s
3 sf
( function returns the pro\036) 149352  -199.50 32 s
52832.0 56873.0 m
(tocol) 58475  0.00 -1 s
( used.) 65028  -32.00 32 s
( ) 65701  -33.00 32 s
4 sf
52832.0 63150.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 67937.0 m
(display\036authorization\036name) 67934  0.00 -1 s
3 sf
( ) 68500  -140.00 32 s
4 sf
(display) 76652  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 71097.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 74258.0 m
(  authorization\036name ) 77130  -26.67 32 s
3 sf
(\037 Type ) 87110  -26.50 32 s
2 sf
(string) 94164  0.00 -1 s
3 sf
(. ) 95549  -27.00 32 s
52832.0 78977.0 m
(Returns) 61610  0.00 -1 s
( the authorization protocol namestring for ) 107984  -238.50 32 s
4 sf
(display) 116136  0.00 -1 s
3 sf
( that was transmitted by ) 142611  -238.60 32 s
2 sf
(open\036) 149352  0.00 -1 s
52832.0 82138.0 m
(display) 61458  0.00 -1 s
3 sf
( to the server during connection setup. The ) 110219  -27.88 32 s
4 sf
(authorization\036name) 132479  0.00 -1 s
3 sf
( indicates what) 149352  -27.50 32 s
52832.0 85299.0 m
(authorization) 67721  0.00 -1 s
( protocol the client expects the server to) 110893  -270.00 32 s
( use. Specification of valid authori\036) 149352  -270.60 32 s
52832.0 88460.0 m
(zation) 59728  0.00 -1 s
( mechanisms is not part of the X protocol. A server that implements a different) 149352  48.07 32 s
52832.0 91621.0 m
(protocol) 62236  0.00 -1 s
( than the) 71565  -195.00 32 s
( client expects, or a server that only implements the host\036based mecha\036) 149352  -195.55 32 s
52832.0 94782.0 m
(nism,) 59026  0.00 -1 s
( can simply ignore this information. If) 100596  -243.00 32 s
( both name and data strings are empty, this is) 149352  -243.56 32 s
52832.0 97942.0 m
(to) 55027  0.00 -1 s
( be interpreted as \177no explicit) 88148  -37.00 32 s
( authorization.") 105664  -38.00 32 s
4 sf
52832.0 104219.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 109006.0 m
(display\036bitmap\036format) 61973  0.00 -1 s
/courps8 6 declareFont
6 sf
( ) 63262  -68.00 32 s
4 sf
(display) 71414  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 112166.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 115327.0 m
( ) 53516  -22.00 32 s
( bitmap\036format ) 71185  -22.50 32 s
3 sf
(\037 Type ) 81173  -22.50 32 s
2 sf
(bitmap\036format) 99037  0.00 -1 s
3 sf
(. ) 100426  -23.00 32 s
52832.0 120046.0 m
(Returns) 61610  0.00 -1 s
( the ) 66416  -27.00 32 s
4 sf
(bitmap\036format) 82718  0.00 -1 s
3 sf
( information for the specified ) 116358  -27.00 32 s
4 sf
(display) 124510  0.00 -1 s
3 sf
(.) 125216  0.00 -1 s
4 sf
52832.0 126323.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
3 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
3 sf
( object.) 84463  -30.00 32 s
2 sf
34544.0 131109.0 m
(display\036byte\036order) 56959  0.00 -1 s
3 sf
( ) 57549  -116.00 32 s
4 sf
(display) 65701  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 134270.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 137431.0 m
(  byte\036order ) 66846  -5.00 32 s
3 sf
(\037 Either ) 77965  -5.00 32 s
2 sf
(:lsbfirst) 87368  0.00 -1 s
3 sf
( or ) 91121  -4.50 32 s
2 sf
(:msbfirst) 102090  0.00 -1 s
3 sf
(. ) 103497  -5.00 32 s
52832.0 142150.0 m
(Returns) 61610  0.00 -1 s
( the ) 66332  -69.00 32 s
4 sf
(byte\036order) 78243  0.00 -1 s
3 sf
( to be employed in communication with the server for the) 142446  -69.00 32 s
( given) 149352  -70.00 32 s
52832.0 145311.0 m
4 sf
(display) 60984  0.00 -1 s
3 sf
(.) 61690  0.00 -1 s
( The possible values are) 88719  -22.00 32 s
( as follows: ) 102368  -22.67 32 s
/symbb8 7 declareFont
7 sf
52832.0 151858.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:lsbfirst) 67315  0.00 -1 s
3 sf
( \037) 70835  -8.00 32 s
( Values are transmitted least significant byte first.) 126887  -8.57 32 s
7 sf
52832.0 158406.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:msbfirst) 68881  0.00 -1 s
3 sf
( \037) 72400  -9.00 32 s
( Values are transmitted most significant byte first.) 128761  -9.57 32 s
52832.0 164682.0 m
(Except) 60668  0.00 -1 s
( where explicitly noted in the protocol, all 16\036bit and 32\036bit quantities sent by the) 149352  -210.00 32 s
52832.0 167843.0 m
(client) 59101  0.00 -1 s
( must be transmitted with this ) 93260  -3.00 32 s
4 sf
(byte\036order) 105171  0.00 -1 s
3 sf
(, and all 16\036bit and 32\036bit quantities) 145519  -3.00 32 s
( re\036) 149352  -4.00 32 s
52832.0 171004.0 m
(turned) 60041  0.00 -1 s
( by the server are transmitted with this ) 103922  -20.50 32 s
4 sf
(byte\036order) 115833  0.00 -1 s
3 sf
(. ) 117224  -21.00 32 s
4 sf
52832.0 177281.0 m
(display) 60984  0.00 -1 s
( \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
2 sf
34544.0 182067.0 m
(display\036display) 52735  0.00 -1 s
3 sf
( ) 53372  -69.00 32 s
4 sf
(display) 61524  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 185228.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 188389.0 m
(  display\036number ) 72572  -30.00 32 s
3 sf
(\037 Type ) 82545  -30.00 32 s
2 sf
(integer) 91007  0.00 -1 s
3 sf
(.) 91713  0.00 -1 s
( ) 92388  -31.00 32 s
52832.0 193108.0 m
(Returns) 61610  0.00 -1 s
( the ) 66418  -26.00 32 s
4 sf
(display\036number) 84130  0.00 -1 s
3 sf
( for the host associated with ) 116265  -26.00 32 s
4 sf
(display) 124417  0.00 -1 s
3 sf
(. ) 125803  -26.00 32 s
4 sf
52832.0 199384.0 m
(display \037 ) 64855  -25.00 32 s
3 sf
(A ) 67573  -25.00 32 s
2 sf
(display) 76199  0.00 -1 s
3 sf
( object. ) 85163  -25.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(2\03623) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 8 declareFont
8 sf
20410.0 39376.0 m
90762.0 39466.0 m
(DISPLAYS) 115878  0.00 -1 s
115846.0 45065.0 m
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
146023 39315 av
146023 36265 as
139178 36265 as
146023 30545 as
146023 25588 as
143285 23300 as
136897 23300 as
134159 25588 as
134159 27876 as
138266 27876 as
138266 26351 as
141916 26351 as
141916 29783 as
134159 36265 as
134159 39315 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
133703 43891 av
133703 43891 as
newpath
133703 23300 av
133703 23300 as
newpath
146935 23300 av
146935 23300 as
newpath
146935 43891 av
146935 43891 as
149351.0 39376.0 m
8 sf
/timsps10 3 declareFont
3 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 5 declareFont
5 sf
20320.0 46871.0 m
(Introduction) 38756  0.00 -1 s
52832.0 h
2 sf
(2.1) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(A particular X server, together with its screens and input devices, is called a ) 145120  3.29 32 s
/timsps10i 4 declareFont
4 sf
(dis\036) 149352  0.00 -1 s
52832.0 50032.0 m
(play) 57691  0.00 -1 s
3 sf
(.) 58397  0.00 -1 s
( The CLX ) 70360  -62.00 32 s
2 sf
(display) 78986  0.00 -1 s
3 sf
( object contains all the) 104132  -62.00 32 s
( information about the particular display) 149352  -62.60 32 s
52832.0 53193.0 m
(and) 56907  0.00 -1 s
( its screens, as well as the state that is needed to communicate with the display over a) 149352  -223.59 32 s
52832.0 56354.0 m
(particular) 63643  0.00 -1 s
( connection.) 77327  -110.00 32 s
2 sf
() 77327  0.00 -1 s
79677.0 h
() 79677  0.00 -1 s
3 sf
52832.0 62631.0 m
(Before) 60509  0.00 -1 s
( your program can use a display, you must establish a) 119560  -138.00 32 s
( connection to the X server) 149352  -138.60 32 s
52832.0 65792.0 m
(driving) 60983  0.00 -1 s
( your display. Once you have established a connection, you then can use the CLX) 149352  -271.64 32 s
52832.0 68953.0 m
(macros) 60981  0.00 -1 s
( and functions discussed in this section to) 107435  -49.00 32 s
( return information about the display.) 149352  -49.60 32 s
52832.0 72113.0 m
(This) 57849  0.00 -1 s
( section discusses how to:) 86937  -18.00 32 s
( ) 87624  -19.00 32 s
/symbb8 7 declareFont
7 sf
52832.0 78661.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Open) 64024  0.00 -1 s
( \(connect\) a display) 86096  -35.00 32 s
( ) 86766  -36.00 32 s
7 sf
52832.0 85209.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Obtain) 65592  0.00 -1 s
( information about a display ) 97965  -30.80 32 s
7 sf
52832.0 91756.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Access) 65904  0.00 -1 s
( and change display attributes ) 99974  -36.00 32 s
7 sf
52832.0 98304.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Close) 64340  0.00 -1 s
( \(disconnect\) a display ) 90401  -28.75 32 s
20320.0 105303.0 m
0.0 0.0 m
newpath
20455 103679 av
148878 103677 as
[] 0 setdash
dp
149352.0 105303.0 m
5 sf
20320.0 108689.0 m
(Opening) 32740  0.00 -1 s
( the) 38111  11.00 32 s
52832.0 h
2 sf
(2.2) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(The) 62943  0.00 -1 s
( ) 63614  -35.00 32 s
2 sf
(open\036display) 78981  0.00 -1 s
3 sf
( function is used to) 100319  -35.00 32 s
( open a connection to an X server.) 138628  -35.57 32 s
5 sf
20320.0 112076.0 m
(Display) 31233  0.00 -1 s
52832.0 h
3 sf
( ) 53532  -6.00 32 s
2 sf
34544.0 118353.0 m
(open\036display) 49911  0.00 -1 s
( ) 50570  -47.00 32 s
4 sf
(host &) 58128  -47.00 32 s
3 sf
(key ) 62863  -46.00 32 s
2 sf
(:display) 72428  0.00 -1 s
3 sf
( ) 73087  -47.00 32 s
2 sf
(:protocol) 84057  0.00 -1 s
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 121514.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 124674.0 m
(  display ) 63036  -22.00 32 s
3 sf
(\037 Type ) 73025  -22.00 32 s
2 sf
(display) 81651  0.00 -1 s
3 sf
(. ) 83041  -22.00 32 s
52832.0 129393.0 m
(Returns) 61610  0.00 -1 s
( a ) 63819  -228.00 32 s
2 sf
(display) 72445  0.00 -1 s
3 sf
( that serves as the connection to the X server and contains all the infor\036) 149352  -227.64 32 s
52832.0 132554.0 m
(mation) 60670  0.00 -1 s
( about that X server. ) 84215  -24.60 32 s
4 sf
52832.0 138831.0 m
(host) 57536  0.00 -1 s
( \037 ) 61431  -13.00 32 s
3 sf
(Specifies the name of the ) 90598  -13.00 32 s
4 sf
(host) 95302  0.00 -1 s
3 sf
( machine on which the server executes. A string) 149352  -12.88 32 s
57912.0 141992.0 m
(must) 63400  0.00 -1 s
( be acceptable as a ) 85066  -8.00 32 s
4 sf
(host) 89770  0.00 -1 s
3 sf
(, but otherwise the possible types are not constrained) 149352  -7.75 32 s
57912.0 145153.0 m
(and) 61987  0.00 -1 s
( will likely be very system dependent.) 104674  -31.00 32 s
( ) 105348  -32.00 32 s
2 sf
52832.0 149939.0 m
(:display) 62397  0.00 -1 s
3 sf
( \037 An integer that specifies which display device on the ) 124207  -259.00 32 s
4 sf
(host) 128911  0.00 -1 s
3 sf
( should be used for) 149352  -258.75 32 s
57912.0 153100.0 m
(this) 61989  0.00 -1 s
( connection. This) 81032  -237.00 32 s
( is needed since multiple displays can be controlled by a single) 149352  -237.55 32 s
57912.0 156261.0 m
(X) 59949  0.00 -1 s
( server. The default is display 0 \(zero\).) 103465  -19.00 32 s
( ) 104151  -20.00 32 s
2 sf
52832.0 162537.0 m
(:protocol) 63802  0.00 -1 s
( ) 64231  -277.00 32 s
3 sf
(\037) 67053  0.00 -1 s
2 sf
( ) 67482  -277.00 32 s
3 sf
(A keyword argument that specifies which network protocol should be) 143751  -277.00 32 s
( used) 149352  -278.00 32 s
57912.0 165698.0 m
(for) 61201  0.00 -1 s
( connecting to the server \(for example, ) 103784  -253.00 32 s
2 sf
(:tcp) 108484  0.00 -1 s
3 sf
(, ) 109643  -253.00 32 s
2 sf
(:dna) 115131  0.00 -1 s
3 sf
(, or ) 119093  -253.00 32 s
2 sf
(:chaos) 126774  0.00 -1 s
3 sf
(\). The) 133260  -253.00 32 s
( set of possible) 149352  -253.67 32 s
57912.0 168859.0 m
(values) 65122  0.00 -1 s
( and the default value are) 93392  -35.00 32 s
( implementation specific. ) 122597  -35.67 32 s
52832.0 175136.0 m
(Authorization,) 69211  0.00 -1 s
( if any, is assumed to come) 98833  -171.00 32 s
( from the environment. After a successful call) 149352  -171.57 32 s
52832.0 178297.0 m
(to) 55027  0.00 -1 s
( ) 55702  -31.00 32 s
2 sf
(open\036display) 71069  0.00 -1 s
3 sf
(, all screens on the display can be used by the client application. ) 143640  -30.69 32 s
eop
initialstate restore
