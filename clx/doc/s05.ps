%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 9 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps10i /ILtimsi 10 map
	/timsps8i /ILtimsi 8 map
	/timsps18b /ILtimsb 18 map
	/timsps10b /ILtimsb 10 map
	/timsps12b /ILtimsb 12 map
	/symbb8 /ILsymbb 8 map
	/courps8 /ILcourps 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
/Courier /ILcourps ILEncoding ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 9 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03668) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10i 3 declareFont
3 sf
52832.0 22578.0 m
(destination) 65374  0.00 -1 s
( ) 66036  -44.00 32 s
/timsps10 4 declareFont
4 sf
(\037 The destination) 86954  -44.00 32 s
( ) 87615  -45.00 32 s
2 sf
(gcontext) 97801  0.00 -1 s
4 sf
(.) 98507  0.00 -1 s
2 sf
34544.0 27364.0 m
(copy\036gcontext\036components) 66674  0.00 -1 s
4 sf
( ) 67320  -60.00 32 s
3 sf
(source destination ) 88678  -60.00 32 s
4 sf
(&rest) 94947  0.00 -1 s
( ) 95592  -61.00 32 s
3 sf
(keys) 100449  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
52832.0 32083.0 m
(Copies) 60671  0.00 -1 s
( the values of the specified attributes of) 103132  -282.00 32 s
( the source graphics context to the destina\036) 149352  -282.57 32 s
52832.0 35244.0 m
(tion) 57222  0.00 -1 s
( graphics context. The source and destination graphics contexts must have the same) 149352  -179.58 32 s
52832.0 38405.0 m
(root) 57377  0.00 -1 s
( and) 62110  -48.00 32 s
( depth.) 69743  -49.00 32 s
3 sf
52832.0 44004.0 m
(source) 60356  0.00 -1 s
( ) 61021  -41.00 32 s
4 sf
(\037 The source) 76926  -41.00 32 s
( ) 77590  -42.00 32 s
2 sf
(gcontext) 87776  0.00 -1 s
4 sf
(.) 88482  0.00 -1 s
3 sf
52832.0 48791.0 m
(destination) 65374  0.00 -1 s
( ) 66036  -44.00 32 s
4 sf
(\037 The destination) 86954  -44.00 32 s
( ) 87615  -45.00 32 s
2 sf
(gcontext) 97801  0.00 -1 s
4 sf
(.) 98507  0.00 -1 s
3 sf
52832.0 53577.0 m
(keys) 57689  0.00 -1 s
( ) 58400  5.00 32 s
4 sf
(\037 The remaining arguments) 90939  5.00 32 s
( are keywords, of type ) 116822  4.40 32 s
2 sf
(gcontext\036key) 132180  0.00 -1 s
4 sf
(, which specify) 149352  4.50 32 s
57912.0 56738.0 m
(which) 64808  0.00 -1 s
( attributes of the graphics context are to be) 112678  -31.00 32 s
( copied.) 121581  -32.00 32 s
20320.0 62247.0 m
0.0 0.0 m
newpath
20455 60623 av
148878 60621 as
[] 0 setdash
dp
149352.0 62247.0 m
/timsps12b 5 declareFont
5 sf
20320.0 65634.0 m
(Destroying) 36118  0.00 -1 s
52832.0 h
2 sf
(5.5) 56360  0.00 -1 s
58710.0 h
() 58710  0.00 -1 s
4 sf
(To) 61845  0.00 -1 s
( destroy a graphics) 82942  -47.00 32 s
( context, use) 97034  -47.50 32 s
2 sf
( free\036gcontext.) 114221  -48.00 32 s
5 sf
20320.0 69020.0 m
(Graphics) 33677  0.00 -1 s
2 sf
52832.0 h
5 sf
20320.0 72407.0 m
(Contexts) 33108  0.00 -1 s
( ) 33957  2.00 32 s
4 sf
52832.0 h
2 sf
34544.0 76584.0 m
(free\036gcontext) 50367  0.00 -1 s
( ) 50948  -125.00 32 s
3 sf
(gcontext) 60508  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
52832.0 81303.0 m
(Deletes) 61294  0.00 -1 s
( the association between the assigned resource) 114700  176.00 32 s
( ID and the specified graphics) 149352  175.40 32 s
52832.0 84463.0 m
(context,) 61845  0.00 -1 s
( and then destroys the graphics context.) 106183  -43.00 32 s
3 sf
52832.0 90063.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
20320.0 95572.0 m
0.0 0.0 m
newpath
20455 93948 av
148878 93946 as
[] 0 setdash
dp
149352.0 95572.0 m
5 sf
20320.0 98958.0 m
(Graphics) 33677  0.00 -1 s
52832.0 h
2 sf
(5.6) 56360  0.00 -1 s
4 sf
() 56360  0.00 -1 s
58555.0 h
(CLX) 64198  0.00 -1 s
( provides a set of functions to control the automatic graphics) 149352  1681.20 32 s
5 sf
20320.0 102345.0 m
(Context) 31791  0.00 -1 s
2 sf
52832.0 h
4 sf
(context) 61139  0.00 -1 s
( caching mechanism.) 84712  -87.00 32 s
5 sf
20320.0 105732.0 m
(Cache) 29347  0.00 -1 s
52832.0 h
2 sf
34544.0 109909.0 m
(force\036gcontext\036changes) 62281  0.00 -1 s
4 sf
( ) 62802  -185.00 32 s
3 sf
(gcontext) 72362  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
52832.0 114627.0 m
(Forces) 60355  0.00 -1 s
( any delayed changes to the specified graphics context to be) 125591  -232.00 32 s
( sent out to the server.) 149352  -232.60 32 s
52832.0 117788.0 m
(Note) 58317  0.00 -1 s
( that ) 63893  -34.00 32 s
2 sf
(force\036gcontext\036changes) 91630  0.00 -1 s
4 sf
( is called by all of the graphics functions.) 137837  -33.75 32 s
3 sf
52832.0 123388.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 128174.0 m
(with\036gcontext) 50998  0.00 -1 s
4 sf
( ) 51647  -57.00 32 s
3 sf
(gcontext) 61207  0.00 -1 s
2 sf
( ) 61856  -57.00 32 s
4 sf
(&key) 68126  0.00 -1 s
2 sf
( :arc\036mode) 81153  -57.00 32 s
( :background :cap\036style :clip\036mask) 122913  -57.67 32 s
142014.0 h
4 sf
(Macro) 149379  0.00 -1 s
52832.0 131335.0 m
2 sf
(:clip\036ordering) 69603  0.00 -1 s
( :clip\036x :clip\036y :dashes :dash\036offset :exposures) 124246  -28.00 32 s
( ) 124923  -29.00 32 s
52832.0 134496.0 m
(:fill\036rule) 62860  0.00 -1 s
( :fill\036style :font :foreground :function :join\036style) 120411  -9.00 32 s
( ) 121107  -10.00 32 s
52832.0 137657.0 m
(:line\036style) 64585  0.00 -1 s
( :line\036width :plane\036mask) 94007  -24.00 32 s
( :stipple :subwindow\036mode ) 127090  -24.67 32 s
52832.0 140818.0 m
(:tile) 57531  0.00 -1 s
( :ts\036x :ts\036y) 69555  -20.00 32 s
4 sf
( &allow\036other\036keys &body ) 100765  -20.00 32 s
3 sf
(body) 106251  0.00 -1 s
4 sf
52832.0 145536.0 m
(Changes) 62551  0.00 -1 s
( the indicated graphics context components to the specified values only within) 149352  -139.00 32 s
52832.0 148697.0 m
(the) 56280  0.00 -1 s
( dynamic extent of the body.) 87862  -142.00 32 s
( ) 88425  -143.00 32 s
2 sf
(with\036gcontext) 104879  0.00 -1 s
4 sf
( works on a per\036process basis in a multi\036) 149352  -142.50 32 s
52832.0 151858.0 m
(processing) 64901  0.00 -1 s
( environment. The ) 85842  -178.00 32 s
3 sf
(body) 91328  0.00 -1 s
4 sf
( is not surrounded by a ) 116754  -178.00 32 s
2 sf
(with\036display) 131648  0.00 -1 s
4 sf
( form. If there is) 149352  -177.50 32 s
52832.0 155019.0 m
(no) 55654  0.00 -1 s
( local cache for the specified graphics context, or if some of the component states are) 149352  -158.60 32 s
52832.0 158180.0 m
(unknown,) 64041  0.00 -1 s
( ) 64873  126.00 32 s
2 sf
(with\036gcontext) 81327  0.00 -1 s
4 sf
( does the save and restore by creating) 124449  126.00 32 s
( a temporary graphics) 149352  125.33 32 s
52832.0 161341.0 m
(context) 61139  0.00 -1 s
( and copying components to and from it using ) 113287  -49.78 32 s
2 sf
(copy\036gcontext\036components) 145417  0.00 -1 s
4 sf
(.) 146123  0.00 -1 s
3 sf
52832.0 166940.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
52832.0 171727.0 m
(:arc\036mode,) 65916  0.00 -1 s
4 sf
( ) 67125  503.00 32 s
2 sf
(:background) 82648  0.00 -1 s
4 sf
(, ) 84563  503.00 32 s
2 sf
(:cap\036style) 96159  0.00 -1 s
4 sf
(, ) 98075  504.00 32 s
2 sf
(:clip\036mask) 110771  0.00 -1 s
4 sf
(, ) 112686  503.00 32 s
2 sf
(:clip\036ordering) 129457  0.00 -1 s
4 sf
(, ) 131373  504.00 32 s
2 sf
(:clip\036x) 139052  0.00 -1 s
4 sf
(, ) 140967  503.00 32 s
2 sf
(:clip\036y) 148646  0.00 -1 s
4 sf
(,) 149352  0.00 -1 s
57912.0 174887.0 m
2 sf
(:dashes) 66849  0.00 -1 s
4 sf
(,) 67555  0.00 -1 s
( ) 69146  885.00 32 s
2 sf
(:dash\036offset) 83250  0.00 -1 s
4 sf
(, ) 85547  885.00 32 s
2 sf
(:exposures) 98401  0.00 -1 s
4 sf
(, ) 100698  885.00 32 s
2 sf
(:fill\036rule) 110726  0.00 -1 s
4 sf
(, ) 113023  885.00 32 s
2 sf
(:fill\036style) 123677  0.00 -1 s
4 sf
(, ) 125975  886.00 32 s
2 sf
(:font) 131772  0.00 -1 s
4 sf
(, ) 134069  885.00 32 s
2 sf
(:foreground) 148646  0.00 -1 s
4 sf
(,) 149352  0.00 -1 s
57912.0 178048.0 m
2 sf
(:function) 68884  0.00 -1 s
4 sf
(,) 69590  0.00 -1 s
( ) 70409  113.00 32 s
2 sf
(:join\036style) 82475  0.00 -1 s
4 sf
(, ) 84000  113.00 32 s
2 sf
(:line\036style) 95753  0.00 -1 s
4 sf
(, ) 97279  114.00 32 s
2 sf
(:line\036width) 110445  0.00 -1 s
4 sf
(, ) 111970  113.00 32 s
2 sf
(:plane\036mask) 126862  0.00 -1 s
4 sf
(, ) 128388  114.00 32 s
2 sf
(:stipple) 137323  0.00 -1 s
4 sf
(, ) 138848  113.00 32 s
2 sf
(:subwin\036) 149352  0.00 -1 s
57912.0 181209.0 m
(dow\036mode) 70451  0.00 -1 s
4 sf
(,) 71157  0.00 -1 s
( ) 71975  112.00 32 s
2 sf
(:tile) 76674  0.00 -1 s
4 sf
(, ) 78198  112.00 32 s
2 sf
(:ts\036x) 83524  0.00 -1 s
4 sf
(, ) 85048  112.00 32 s
2 sf
(:ts\036y ) 91192  112.00 32 s
4 sf
(\037These keyword arguments) 124017  112.00 32 s
( and associated values) 149352  111.33 32 s
57912.0 184370.0 m
(specify) 66061  0.00 -1 s
( which graphics context components) 106054  -308.00 32 s
( are to be changed. Any components not) 149352  -308.57 32 s
57912.0 187531.0 m
(specified) 68098  0.00 -1 s
( are left unmodified. See paragraph 5.2, Creating Graphics Contexts, for) 149352  -24.90 32 s
57912.0 190692.0 m
(more) 63710  0.00 -1 s
( information.) 78390  -54.00 32 s
3 sf
52832.0 195478.0 m
(body) 58318  0.00 -1 s
( ) 58990  -34.00 32 s
4 sf
(\037 The body of code which will have access to the altered graphics context.) 143978  -33.54 32 s
52832.0 200265.0 m
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03667) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(gcontext\036ts\036x) 50056  0.00 -1 s
/timsps10i 3 declareFont
3 sf
( gcontext) 60238  -84.00 32 s
2 sf
139373.0 h
/timsps10 4 declareFont
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 28900.0 m
( ) 53521  -17.00 32 s
( ts\036x) 58285  -16.00 32 s
( ) 58974  -17.00 32 s
4 sf
(\037 Type ) 68974  -16.50 32 s
2 sf
(int16) 75088  0.00 -1 s
4 sf
(.) 75794  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the ) 66422  -24.00 32 s
3 sf
(ts\036x) 70496  0.00 -1 s
4 sf
( attribute of the specified graphics context. ) 119233  -23.57 32 s
52832.0 39895.0 m
(The) 57220  0.00 -1 s
( ts\036x and ts\036y attributes of a graphics context are the coordinates of the origin for tile) 149352  -187.94 32 s
52832.0 43056.0 m
(pixmaps) 62395  0.00 -1 s
( and the stipple.) 80151  -38.67 32 s
3 sf
52832.0 49332.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 54119.0 m
(gcontext\036ts\036y) 50056  0.00 -1 s
3 sf
( gcontext) 60238  -84.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 57280.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 60441.0 m
( ) 53521  -17.00 32 s
( ts\036y) 58285  -16.00 32 s
( ) 58974  -17.00 32 s
4 sf
(\037 Type ) 68974  -16.50 32 s
2 sf
(int16) 75088  0.00 -1 s
4 sf
(.) 75794  0.00 -1 s
52832.0 65159.0 m
(Returns) 61610  0.00 -1 s
( the ) 66422  -24.00 32 s
3 sf
(ts\036y) 70496  0.00 -1 s
4 sf
( attribute of the specified graphics context. ) 119233  -23.57 32 s
52832.0 71436.0 m
(The) 57220  0.00 -1 s
( ts\036x and ts\036y attributes of a graphics context are the coordinates of the origin for tile) 149352  -187.94 32 s
52832.0 74597.0 m
(pixmaps) 62395  0.00 -1 s
( and the stipple.) 80151  -38.67 32 s
3 sf
52832.0 80874.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 85660.0 m
(query\036best\036stipple) 56332  0.00 -1 s
4 sf
( ) 56983  -55.00 32 s
3 sf
(width height drawable) 82273  -54.50 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 88821.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 91982.0 m
(  best\036width) 65933  -34.00 32 s
4 sf
(,) 66639  0.00 -1 s
3 sf
( best\036height ) 80522  -34.00 32 s
4 sf
(\037 Type) 89815  -34.00 32 s
( ) 90486  -35.00 32 s
2 sf
(card16) 98794  0.00 -1 s
4 sf
(.) 99500  0.00 -1 s
52832.0 96701.0 m
(Returns) 61610  0.00 -1 s
( the ) 66410  -30.00 32 s
3 sf
(best\036width) 78167  0.00 -1 s
4 sf
( and) 82918  -30.00 32 s
( ) 83593  -31.00 32 s
3 sf
(best\036height) 96132  0.00 -1 s
4 sf
( for stipple pixmaps on the ) 126832  -30.50 32 s
3 sf
(drawable) 137493  0.00 -1 s
4 sf
(.) 138199  0.00 -1 s
52832.0 102977.0 m
(The) 57220  0.00 -1 s
( ) 57718  -208.00 32 s
3 sf
(drawable) 68379  0.00 -1 s
4 sf
( indicates the screen and possibly) 105038  -208.00 32 s
( the window class and depth. An ) 141044  -208.57 32 s
2 sf
(:input\036) 149352  0.00 -1 s
52832.0 106138.0 m
(only) 58007  0.00 -1 s
4 sf
( window cannot be specified as the ) 99171  137.00 32 s
3 sf
(drawable) 109832  0.00 -1 s
4 sf
(. The size is returned as width and) 149352  137.14 32 s
52832.0 109299.0 m
(height) 59886  0.00 -1 s
( values.) 68433  -75.00 32 s
3 sf
52832.0 115576.0 m
(width) 59104  0.00 -1 s
4 sf
(,) 59810  0.00 -1 s
( ) 60489  -27.00 32 s
3 sf
(height ) 68222  -27.00 32 s
4 sf
(\037 Specifies the width and height) 105787  -27.00 32 s
( of the desired stipple pattern.) 139192  -27.60 32 s
3 sf
52832.0 120362.0 m
(drawable) 63493  0.00 -1 s
( ) 64151  -48.00 32 s
4 sf
(\037 A ) 70326  -48.00 32 s
2 sf
(drawable) 81613  0.00 -1 s
4 sf
(.) 82319  0.00 -1 s
2 sf
34544.0 125149.0 m
(query\036best\036tile) 52096  0.00 -1 s
4 sf
( ) 52752  -50.00 32 s
3 sf
(width height drawable) 78051  -50.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 128310.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 131470.0 m
(  best\036width) 65933  -34.00 32 s
4 sf
(,) 66639  0.00 -1 s
3 sf
( best\036height ) 80522  -34.00 32 s
4 sf
(\037 Type) 89815  -34.00 32 s
( ) 90486  -35.00 32 s
2 sf
(card16) 98794  0.00 -1 s
4 sf
(.) 99500  0.00 -1 s
52832.0 136189.0 m
(Returns) 61610  0.00 -1 s
( the ) 66412  -29.00 32 s
3 sf
(best\036width) 78169  0.00 -1 s
4 sf
( and ) 83598  -29.00 32 s
3 sf
(best\036height) 96137  0.00 -1 s
4 sf
( for tile pixmaps on the ) 122926  -29.00 32 s
3 sf
(drawable) 133587  0.00 -1 s
4 sf
(.) 134293  0.00 -1 s
52832.0 142466.0 m
(The) 57220  0.00 -1 s
( ) 57718  -208.00 32 s
3 sf
(drawable) 68379  0.00 -1 s
4 sf
( indicates the screen and possibly) 105038  -208.00 32 s
( the window class and depth. An ) 141044  -208.57 32 s
2 sf
(:input\036) 149352  0.00 -1 s
52832.0 145627.0 m
(only) 58007  0.00 -1 s
4 sf
( window cannot be specified as the ) 99171  137.00 32 s
3 sf
(drawable) 109832  0.00 -1 s
4 sf
(. The size is returned as width and) 149352  137.14 32 s
52832.0 148788.0 m
(height) 59886  0.00 -1 s
( values.) 68433  -75.00 32 s
3 sf
52832.0 155064.0 m
(width) 59104  0.00 -1 s
4 sf
(,) 59810  0.00 -1 s
( ) 60490  -26.00 32 s
3 sf
(height ) 68224  -26.00 32 s
4 sf
(\037 Specifies the width and height of the desired tile) 126066  -26.00 32 s
( pattern.) 135286  -27.00 32 s
3 sf
52832.0 159851.0 m
(drawable) 63493  0.00 -1 s
( ) 64151  -48.00 32 s
4 sf
(\037 A ) 70326  -48.00 32 s
2 sf
(drawable) 81613  0.00 -1 s
4 sf
(.) 82319  0.00 -1 s
20320.0 165360.0 m
0.0 0.0 m
newpath
20455 163736 av
148878 163734 as
[] 0 setdash
dp
149352.0 165360.0 m
/timsps12b 5 declareFont
5 sf
20320.0 168746.0 m
(Copying) 32551  0.00 -1 s
( ) 33393  -5.00 32 s
52832.0 h
2 sf
(5.3) 56360  0.00 -1 s
4 sf
() 56360  0.00 -1 s
58555.0 h
(CLX) 64198  0.00 -1 s
( provides functions to copy some or all) 120048  1697.00 32 s
( attribute values from) 149352  1696.33 32 s
5 sf
20320.0 172133.0 m
(Graphics) 33677  0.00 -1 s
2 sf
52832.0 h
4 sf
(one) 56907  0.00 -1 s
( graphics context to another. These functions are generally more efficient) 149352  977.20 32 s
5 sf
20320.0 175520.0 m
(Contexts) 33108  0.00 -1 s
( ) 33957  2.00 32 s
52832.0 h
4 sf
(than) 57691  0.00 -1 s
( using ) 65154  -32.00 32 s
2 sf
(setf) 69383  0.00 -1 s
4 sf
( to copy ) 79084  -32.67 32 s
2 sf
(gcontext) 89270  0.00 -1 s
4 sf
( attributes individually.) 115463  -32.50 32 s
2 sf
34544.0 181796.0 m
(copy\036gcontext) 51313  0.00 -1 s
4 sf
( ) 51940  -79.00 32 s
3 sf
(source destination) 72633  -79.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
52832.0 186515.0 m
(Copies) 60671  0.00 -1 s
( all) 64039  -159.00 32 s
( the values of the attributes of the source graphics context into the destination) 149352  -159.54 32 s
52832.0 189676.0 m
(graphics) 62392  0.00 -1 s
( context.) 71919  -192.00 32 s
( The source and destination graphics contexts must have the same root) 149352  -192.55 32 s
52832.0 192837.0 m
(and) 56907  0.00 -1 s
( depth.) 64505  -84.00 32 s
52832.0 199113.0 m
( ) 53504  -34.00 32 s
3 sf
(source ) 61700  -34.00 32 s
4 sf
(\037 The source) 77619  -34.00 32 s
( ) 78290  -35.00 32 s
2 sf
(gcontext) 88476  0.00 -1 s
4 sf
(.) 89182  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03666) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(gcontext\036subwindow\036mode) 66834  0.00 -1 s
( ) 67362  -178.00 32 s
/timsps10i 3 declareFont
3 sf
(gcontext) 76922  0.00 -1 s
2 sf
139373.0 h
/timsps10 4 declareFont
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 28900.0 m
(  subwindow\036mode ) 74597  -35.00 32 s
4 sf
(\037 One of) 85812  -35.00 32 s
( ) 86482  -36.00 32 s
2 sf
(:clip\036by\036children) 106703  0.00 -1 s
4 sf
( or ) 110394  -35.50 32 s
2 sf
(:include\036inferiors) 131397  0.00 -1 s
4 sf
(.) 132103  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 72960  -266.00 32 s
2 sf
(setf) 77189  0.00 -1 s
4 sf
(\) changes the subwindow\036mode attribute of the specified) 139353  -266.00 32 s
( graphics) 149352  -267.00 32 s
52832.0 36779.0 m
(context.) 61845  0.00 -1 s
52832.0 43056.0 m
(The) 57220  0.00 -1 s
( subwindow\036mode attribute of a graphics context specifies) 121133  -285.00 32 s
( whether subwindows ob\036) 149352  -285.67 32 s
52832.0 46217.0 m
(scure) 58786  0.00 -1 s
( the contents of their parent) 90096  71.00 32 s
( window during a graphics operation. For a value of) 149352  70.44 32 s
52832.0 49378.0 m
2 sf
(:clip\036by\036children) 73053  0.00 -1 s
4 sf
(,) 73759  0.00 -1 s
( both source and destination windows are clipped by all viewable) 144690  -274.00 32 s
( ) 145121  -275.00 32 s
2 sf
(:in\036) 149352  0.00 -1 s
52832.0 52538.0 m
(put\036output) 65844  0.00 -1 s
4 sf
( class children. This clipping is in addition to the clipping provided by the) 149352  8.23 32 s
52832.0 55699.0 m
(clip\036mode) 64273  0.00 -1 s
( attribute. For a value of ) 90653  -266.50 32 s
2 sf
(:include\036inferiors) 111656  0.00 -1 s
4 sf
(, neither the source nor destination) 149352  -266.60 32 s
52832.0 58860.0 m
(window is clipped by its inferiors. This results in the inclusion of subwindow contents in) 149352  -266.50 32 s
52832.0 62021.0 m
(the) 56280  0.00 -1 s
( source and the drawing through of subwindow boundaries) 120247  -292.00 32 s
( of the destination. The use) 149352  -292.60 32 s
52832.0 65182.0 m
(of) 55182  0.00 -1 s
( ) 55590  -298.00 32 s
2 sf
(:include\036inferiors) 76593  0.00 -1 s
4 sf
( on a window of one depth with mapped inferiors of differing depth) 149352  -297.75 32 s
52832.0 68343.0 m
(is) 54714  0.00 -1 s
( not illegal, but the semantics) 87662  -26.00 32 s
( are not defined by the core protocol.) 129167  -26.57 32 s
3 sf
52832.0 74620.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 79406.0 m
(gcontext\036tile) 49429  0.00 -1 s
3 sf
( gcontext) 59605  -90.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 82567.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 85728.0 m
(  tile ) 58489  -22.00 32 s
4 sf
(\037 Type) 67794  -22.00 32 s
( ) 68477  -23.00 32 s
2 sf
(pixmap) 77571  0.00 -1 s
4 sf
(.) 78277  0.00 -1 s
52832.0 90447.0 m
(Returns) 61610  0.00 -1 s
( the ) 66420  -25.00 32 s
3 sf
(tile) 70025  0.00 -1 s
4 sf
( of the specified graphics context.) 107987  -25.00 32 s
( ) 108667  -26.00 32 s
52832.0 96723.0 m
(The) 57220  0.00 -1 s
( tile attribute is a pixmap used to fill in areas for graphics operations. It is so) 141246  -122.00 32 s
( named) 149352  -123.00 32 s
52832.0 99884.0 m
(because) 61764  0.00 -1 s
( copies of it are laid out side by side to fill the area. ) 120046  -18.93 32 s
52832.0 106161.0 m
(The) 57220  0.00 -1 s
( stipple and tile have the same origin. This origin point is interpreted relative to the) 149352  -96.67 32 s
52832.0 109322.0 m
(origin) 59572  0.00 -1 s
( of whatever destination drawable is specified in a graphics request. The stipple) 149352  4.00 32 s
52832.0 112482.0 m
(pixmap) 61297  0.00 -1 s
( must have depth one and must have the same root as the graphics context. The) 149352  -75.93 32 s
52832.0 115643.0 m
(tile) 56437  0.00 -1 s
( pixmap must have the same root) 92102  -274.00 32 s
( and depth as the graphics context. For stipple opera\036) 149352  -274.56 32 s
52832.0 118804.0 m
(tions) 58320  0.00 -1 s
( where) 65883  -36.00 32 s
( the fill\036style is ) 83451  -36.50 32 s
2 sf
(:stippled) 93955  0.00 -1 s
4 sf
( \(but not ) 104114  -36.67 32 s
2 sf
(:opaque\036stippled) 124339  0.00 -1 s
4 sf
(\), the stipple pattern is) 149352  -36.50 32 s
52832.0 121965.0 m
(tiled) 57848  0.00 -1 s
( in a) 62224  -242.00 32 s
( single plane and acts as an additional clip mask to be ) 120451  -242.50 32 s
2 sf
(and) 125000  0.00 -1 s
4 sf
(ed with the clip\036mask.) 149352  -242.67 32 s
52832.0 125126.0 m
(Any) 57691  0.00 -1 s
( size pixmap can be used for stipple or tile, although some sizes) 127104  -205.00 32 s
( may be faster to use) 149352  -205.60 32 s
52832.0 128287.0 m
(than) 57691  0.00 -1 s
( others.) 65950  -49.00 32 s
52832.0 134564.0 m
(Specifying) 65058  0.00 -1 s
( a pixmap for stipple or tile in a graphics context might or might not result in) 147650  -256.00 32 s
( a) 149352  -257.00 32 s
52832.0 137724.0 m
(copy) 58318  0.00 -1 s
( being made. If the) 78984  -143.00 32 s
( pixmap is later used as the destination for a graphics operation,) 149352  -143.55 32 s
52832.0 140885.0 m
(the) 56280  0.00 -1 s
( change might or might not be reflected in the graphics context. If the pixmap is used) 149352  -183.56 32 s
52832.0 144046.0 m
(both) 57849  0.00 -1 s
( as the destination for a graphics operation and as a stipple or tile, the results are not) 149352  -186.59 32 s
52832.0 147207.0 m
(defined.) 62000  0.00 -1 s
52832.0 153484.0 m
(Some) 59260  0.00 -1 s
( displays have hardware support for) 100258  128.00 32 s
( tiling or stippling with patterns of specific) 149352  127.43 32 s
52832.0 156645.0 m
(sizes.) 59024  0.00 -1 s
( Tiling and stippling operations that restrict themselves to those) 132533  199.00 32 s
( sizes may run) 149352  198.33 32 s
52832.0 159806.0 m
(much) 59102  0.00 -1 s
( faster than such) 76747  -257.00 32 s
( operations with arbitrary size patterns. CLX provides functions to) 149352  -257.56 32 s
52832.0 162966.0 m
(determine) 64115  0.00 -1 s
( the best size for stipple or tile \(see ) 103113  -116.67 32 s
2 sf
(query\036best\036stipple) 124901  0.00 -1 s
4 sf
( and ) 130155  -116.50 32 s
2 sf
(query\036best\036tile) 147707  0.00 -1 s
4 sf
(\).) 149352  0.00 -1 s
3 sf
52832.0 169243.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03665) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(The) 57220  0.00 -1 s
( plane\036mask attribute of a graphics context specifies which bit planes of the destina\036) 149352  -201.23 32 s
52832.0 25739.0 m
(tion) 57222  0.00 -1 s
( drawable are modified during a graphic operation. The plane\036mask is a pixel value) 149352  -134.85 32 s
52832.0 28900.0 m
(in) 55027  0.00 -1 s
( which a 1 bit means that the corresponding bit plane will be modified and a 0 bit means) 149352  -289.72 32 s
52832.0 32060.0 m
(that) 57064  0.00 -1 s
( the corresponding bit plane will not be affected during a graphic operations. Thus,) 149352  -93.00 32 s
52832.0 35221.0 m
(the) 56280  0.00 -1 s
( actual result of a graphic operation) 95075  -195.00 32 s
( depends on both the function and plane\036mask at\036) 149352  -171.13 32 s
52832.0 38382.0 m
(tributes) 61296  0.00 -1 s
( of) 64322  -30.00 32 s
( the graphics context and is given by the following expression:) 134744  -27.50 32 s
/courps8 6 declareFont
6 sf
52832.0 44659.0 m
(\(logior) 62331  0.00 -1 s
( \(logand ) 74507  -18.50 32 s
52832.0 47820.0 m
(          \(boole function source) 96160  -8.00 32 s
( destination\)) 113792  -9.00 32 s
52832.0 50981.0 m
(          plane\036mask\)) 81280  -4.90 32 s
52832.0 54142.0 m
(       ) 62317  -2.00 32 s
(         ) 74507  -2.56 32 s
52832.0 57302.0 m
(        \(logandc2) 75861  -5.00 32 s
52832.0 60463.0 m
(          destination) 81280  -4.90 32 s
52832.0 63624.0 m
(           plane\036mask\)\)) 83989  -4.91 32 s
/timsps10i 3 declareFont
3 sf
52832.0 69901.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 74687.0 m
(gcontext\036plist) 50843  0.00 -1 s
( ) 51468  -81.00 32 s
3 sf
(gcontext) 61028  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 77848.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 81009.0 m
(  gcontext\036p ) 66797  -21.00 32 s
4 sf
(\037 Type ) 76788  -21.00 32 s
2 sf
(list) 80393  0.00 -1 s
4 sf
(.) 81099  0.00 -1 s
52832.0 85728.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 74004  82.00 32 s
2 sf
(setf) 78233  0.00 -1 s
4 sf
(\) sets the property list for the specified ) 123089  82.00 32 s
3 sf
(gcontext) 132649  0.00 -1 s
4 sf
(. This function) 149352  82.00 32 s
52832.0 88889.0 m
(provides) 62550  0.00 -1 s
( a hook where extensions can add data.) 106296  -42.71 32 s
3 sf
52832.0 95165.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 99952.0 m
(gcontext\036stipple) 53665  0.00 -1 s
3 sf
( gcontext) 63827  -104.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 103113.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 106274.0 m
(  stipple ) 62400  -25.00 32 s
4 sf
(\037 Type ) 72383  -25.00 32 s
2 sf
(pixmap) 81477  0.00 -1 s
4 sf
(.) 82183  0.00 -1 s
52832.0 110992.0 m
(Returns) 61610  0.00 -1 s
( the ) 66416  -27.00 32 s
3 sf
(stipple) 73941  0.00 -1 s
4 sf
( of the specified graphics context. ) 112573  -26.83 32 s
52832.0 117269.0 m
(The) 57220  0.00 -1 s
( stipple attribute of a graphics context is a bitmap used to prevent certain pixels in the) 149352  -276.63 32 s
52832.0 120430.0 m
(destination) 65216  0.00 -1 s
( of graphics operations from being affected by tiling.) 124607  -30.88 32 s
52832.0 126706.0 m
(The) 57220  0.00 -1 s
( stipple and tile have the same origin. This origin point is interpreted relative to the) 149352  -96.67 32 s
52832.0 129867.0 m
(origin) 59572  0.00 -1 s
( of whatever destination drawable is specified in a graphics request. The stipple) 149352  4.00 32 s
52832.0 133028.0 m
(pixmap) 61297  0.00 -1 s
( must have depth one and must have the same root as the graphics context. The) 149352  -75.93 32 s
52832.0 136189.0 m
(tile) 56437  0.00 -1 s
( pixmap must have the same root) 92102  -274.00 32 s
( and depth as the graphics context. For stipple opera\036) 149352  -274.56 32 s
52832.0 139350.0 m
(tions) 58320  0.00 -1 s
( where) 65883  -36.00 32 s
( the fill\036style is ) 83451  -36.50 32 s
2 sf
(:stippled) 93955  0.00 -1 s
4 sf
( \(but not ) 104114  -36.67 32 s
2 sf
(:opaque\036stippled) 124339  0.00 -1 s
4 sf
(\), the stipple pattern is) 149352  -36.50 32 s
52832.0 142511.0 m
(tiled) 57848  0.00 -1 s
( in a) 62224  -242.00 32 s
( single plane and acts as an additional clip mask to be ) 120451  -242.50 32 s
2 sf
(and) 125000  0.00 -1 s
4 sf
(ed with the clip\036mask.) 149352  -242.67 32 s
52832.0 145672.0 m
(Any) 57691  0.00 -1 s
( size pixmap can be used for stipple or tile, although some sizes) 127104  -205.00 32 s
( may be faster to use) 149352  -205.60 32 s
52832.0 148833.0 m
(than) 57691  0.00 -1 s
( others.) 65950  -49.00 32 s
52832.0 155109.0 m
(Specifying) 65058  0.00 -1 s
( a pixmap for stipple or tile in a graphics context might or might not result in) 147650  -256.00 32 s
( a) 149352  -257.00 32 s
52832.0 158270.0 m
(copy) 58318  0.00 -1 s
( being made. If the) 78984  -143.00 32 s
( pixmap is later used as the destination for a graphics operation,) 149352  -143.55 32 s
52832.0 161431.0 m
(the) 56280  0.00 -1 s
( change might or might not be reflected in the graphics context. If the pixmap is used) 149352  -183.56 32 s
52832.0 164592.0 m
(both) 57849  0.00 -1 s
( as the destination for a graphics operation and as a stipple or tile, the results are not) 149352  -186.59 32 s
52832.0 167753.0 m
(defined.) 62000  0.00 -1 s
52832.0 174030.0 m
(Some) 59260  0.00 -1 s
( displays have hardware support for) 100258  128.00 32 s
( tiling or stippling with patterns of specific) 149352  127.43 32 s
52832.0 177190.0 m
(sizes.) 59024  0.00 -1 s
( Tiling and stippling operations that restrict themselves to those) 132533  199.00 32 s
( sizes may run) 149352  198.33 32 s
52832.0 180351.0 m
(much) 59102  0.00 -1 s
( faster than such) 76747  -257.00 32 s
( operations with arbitrary size patterns. CLX provides functions to) 149352  -257.56 32 s
52832.0 183512.0 m
(determine) 64115  0.00 -1 s
( the best size for stipple or tile \(see ) 103113  -116.67 32 s
2 sf
(query\036best\036stipple) 124901  0.00 -1 s
4 sf
( and ) 130155  -116.50 32 s
2 sf
(query\036best\036tile) 147707  0.00 -1 s
4 sf
(\).) 149352  0.00 -1 s
3 sf
52832.0 189789.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03664) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(Wide) 58944  0.00 -1 s
( lines are drawn centered on the path described by the graphics operation. Unless) 149352  -74.54 32 s
52832.0 25739.0 m
(otherwise) 63802  0.00 -1 s
( specified by the join\036style or cap\036style, the bounding box of a wide line with) 149352  -97.79 32 s
52832.0 28900.0 m
(end) 56907  0.00 -1 s
( points [x1, y1], [x2, y2], and width w) 97597  -283.00 32 s
( is a rectangle with vertices at the following real) 149352  -283.56 32 s
52832.0 32060.0 m
(coordinates:) 66624  0.00 -1 s
( ) 67282  -48.00 32 s
52832.0 38337.0 m
([x1) 56593  0.00 -1 s
( - \(w*) 63771  -16.00 32 s
/timsps10i 3 declareFont
3 sf
(sin) 67064  0.00 -1 s
4 sf
(/2\), y1 +  \(w*) 82465  -16.00 32 s
3 sf
(cos) 86227  0.00 -1 s
4 sf
(/2\)], [x1+ \(w*) 102126  -16.00 32 s
3 sf
(sin) 105419  0.00 -1 s
4 sf
(/2\),) 109259  0.00 -1 s
3 sf
( ) 109949  -16.00 32 s
4 sf
(y1 - \(w*) 119949  -16.00 32 s
3 sf
(cos) 123711  0.00 -1 s
4 sf
(/2\)],) 128490  0.00 -1 s
52832.0 41498.0 m
([x2 - \(w*) 63773  -15.00 32 s
3 sf
(sin) 67066  0.00 -1 s
4 sf
(/2\), y2 +) 76702  -15.00 32 s
( \(w*) 81781  -14.00 32 s
3 sf
(cos) 85543  0.00 -1 s
4 sf
(/2\)],) 90322  0.00 -1 s
( [x2 + \(w*) 102136  -14.67 32 s
3 sf
(sin) 105429  0.00 -1 s
4 sf
(/2\),) 109269  0.00 -1 s
3 sf
( ) 109961  -14.00 32 s
4 sf
(y2 - \(w*) 119964  -14.50 32 s
3 sf
(cos) 123726  0.00 -1 s
4 sf
(/2\)] ) 128490  -15.00 32 s
52832.0 47775.0 m
(where) 59725  0.00 -1 s
( ) 60155  -276.00 32 s
3 sf
(sin) 63448  0.00 -1 s
4 sf
( is the sine of the angle of the line and ) 104069  -276.00 32 s
3 sf
(cos ) 108261  -276.00 32 s
4 sf
(is the cosine of the angle of) 137641  -276.00 32 s
( the line. A) 149352  -276.67 32 s
52832.0 50935.0 m
(pixel) 58475  0.00 -1 s
( is part of the line and, hence, is drawn if the center of the pixel is fully inside) 145238  -39.00 32 s
( the) 149352  -40.00 32 s
52832.0 54096.0 m
(bounding) 63493  0.00 -1 s
( box \(which is viewed as having infinitely thin edges\). If the center of the pixel) 149352  -221.87 32 s
52832.0 57257.0 m
(is) 54714  0.00 -1 s
( exactly on the bounding) 81818  -200.00 32 s
( box, it is part of the line if, and only if, the interior is immedi\036) 149352  -200.53 32 s
52832.0 60418.0 m
(ately) 58317  0.00 -1 s
( to its right \(x increasing direction\).) 98041  -54.00 32 s
( Pixels with centers on a horizontal edge are a) 149352  -54.56 32 s
52832.0 63579.0 m
(special) 60668  0.00 -1 s
( case and are part of the line if, and only if, the interior is immediately below \(y) 149352  -61.76 32 s
52832.0 66740.0 m
(increasing) 64429  0.00 -1 s
( direction\).) 76742  -68.00 32 s
52832.0 73017.0 m
(Thin) 58162  0.00 -1 s
( lines \(zero line\036width\) are) 87169  -231.00 32 s
( always one pixel wide lines drawn using an unspecified,) 149352  -231.56 32 s
52832.0 76177.0 m
(device) 60197  0.00 -1 s
( dependent algorithm. There are only two constraints on this algorithm.) 140253  -35.70 32 s
52832.0 82454.0 m
(1.) 54949  0.00 -1 s
57912.0 h
(If) 59790  0.00 -1 s
( a line is drawn unclipped from [x1,y1] to [x2,y2] and if another line is drawn un\036) 149352  -162.63 32 s
57912.0 85615.0 m
(clipped) 66219  0.00 -1 s
( from [x1+dx,y1+dy] to [x2+dx,y2+dy], a point [x,y] is touched by drawing) 149352  -224.91 32 s
57912.0 88776.0 m
(the) 61360  0.00 -1 s
( first line if, and) 78672  -198.00 32 s
( only if ,the point [x+dx,y+dy] is touched by drawing the second) 149352  -198.55 32 s
57912.0 91937.0 m
(line.) 62850  0.00 -1 s
52832.0 98213.0 m
(2.) 54949  0.00 -1 s
57912.0 h
(The) 62300  0.00 -1 s
( effective set of points comprising a line cannot be affected by clipping. That is,) 149352  -219.71 32 s
57912.0 101374.0 m
(a) 59165  0.00 -1 s
( point is touched in a clipped) 91431  -57.00 32 s
( line if, and only if, the point lies inside the clipping) 149352  -57.55 32 s
57912.0 104535.0 m
(region) 65121  0.00 -1 s
( and the point would be touched by the line when drawn unclipped.) 140592  -39.75 32 s
52832.0 110812.0 m
(A) 54869  0.00 -1 s
( wide line drawn from [x1,y1] to [x2,y2] always draws the same pixels as a wide line) 149352  -99.94 32 s
52832.0 113973.0 m
(drawn) 59883  0.00 -1 s
( from [x2,y2] to [x1,y1], not counting cap\036style and join\036style. Implementors are) 149352  -124.00 32 s
52832.0 117134.0 m
(encouraged) 65838  0.00 -1 s
( to make this property true for thin) 102787  -286.00 32 s
( lines, but it is not required. A line\036width of) 149352  -286.56 32 s
52832.0 120294.0 m
(zero) 57688  0.00 -1 s
( may differ from a line\036width of one in which pixels are drawn. This permits the use) 149352  -202.56 32 s
52832.0 123455.0 m
(of) 55182  0.00 -1 s
( many manufacturer's line drawing hardware, which may run much faster than the) 149352  109.25 32 s
52832.0 126616.0 m
(more) 58630  0.00 -1 s
( precisely specified wide lines.) 93224  -30.75 32 s
52832.0 132893.0 m
(In) 55182  0.00 -1 s
( general, drawing a thin line is faster than drawing a wide line of width one. However,) 149352  -192.81 32 s
52832.0 136054.0 m
(because) 61764  0.00 -1 s
( of their different drawing algorithms, thin lines may not mix well, aesthetically) 149352  -198.67 32 s
52832.0 139215.0 m
(speaking,) 63570  0.00 -1 s
( with wide lines. If it is desirable to obtain precise and uniform results across) 149352  -69.79 32 s
52832.0 142375.0 m
(all) 55653  0.00 -1 s
( displays, a client should always use a line\036width of one, rather than a line\036width of) 149352  -7.60 32 s
52832.0 145536.0 m
(zero.) 58394  0.00 -1 s
3 sf
52832.0 151813.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 156599.0 m
(gcontext\036p) 47238  0.00 -1 s
( ) 47833  -111.00 32 s
3 sf
(gcontext) 57393  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 159760.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 162921.0 m
(  gcontext ) 64393  -39.00 32 s
4 sf
(\037 Type ) 74349  -38.50 32 s
2 sf
(boolean) 83757  0.00 -1 s
4 sf
(.) 84463  0.00 -1 s
52832.0 167640.0 m
(Returns) 61610  0.00 -1 s
( non\036) 67462  -26.00 32 s
2 sf
(nil) 70599  0.00 -1 s
4 sf
( if the argument is a graphics context and ) 117626  -25.78 32 s
2 sf
(nil) 120763  0.00 -1 s
4 sf
( otherwise.) 133119  -26.00 32 s
2 sf
34544.0 173917.0 m
(gcontext\036plane\036mask) 59622  0.00 -1 s
3 sf
( gcontext) 69743  -145.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 177078.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 180238.0 m
(  plane\036mask ) 67842  -38.67 32 s
4 sf
(\037 Type ) 77798  -38.50 32 s
2 sf
(card32) 86106  0.00 -1 s
4 sf
(.) 86812  0.00 -1 s
52832.0 184957.0 m
(Returns) 61610  0.00 -1 s
( the ) 66406  -32.00 32 s
3 sf
(plane\036mask) 79414  0.00 -1 s
4 sf
( of the specified graphics context.) 117341  -32.00 32 s
( ) 118014  -33.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03663) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(The) 57220  0.00 -1 s
( join\036style attribute of a graphics context defines how the segment intersections) 145322  -120.00 32 s
( are) 149352  -121.00 32 s
52832.0 25739.0 m
(drawn) 59883  0.00 -1 s
( for wide polylines. The possible values and their interpretations are as follows: ) 149352  -74.85 32 s
2 sf
52832.0 31744.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
4 17 fillpatset
newpath
52832 30919 av
149352 30919 as
149352 31154 as
52832 31154 as
closepath
fp
/drawmode PL_SET def
52832.0 34905.0 m
(Join\036Style) 64902  0.00 -1 s
79248.0 h
85344.0 h
(Interpretation) 102584  0.00 -1 s
52832.0 38066.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 37241 av
149352 37241 as
149352 37476 as
52832 37476 as
closepath
fp
/drawmode PL_SET def
52832.0 41227.0 m
(:bevel) 60041  0.00 -1 s
4 sf
85344.0 h
(Uses) 90830  0.00 -1 s
( ) 91515  -21.00 32 s
2 sf
(:butt) 97470  0.00 -1 s
4 sf
( end point styles with the triangular notch) 144272  -21.00 32 s
85344.0 44388.0 m
(filled.) 92005  0.00 -1 s
85344.0 47549.0 m
2 sf
52832.0 50710.0 m
(:miter) 60350  0.00 -1 s
4 sf
85344.0 h
(The) 89732  0.00 -1 s
( outer edges of two lines extend to meet at an angle.) 148042  -28.55 32 s
85344.0 53871.0 m
2 sf
52832.0 57031.0 m
(:round) 61142  0.00 -1 s
4 sf
85344.0 h
(A) 87381  0.00 -1 s
( circular arc with diameter equal) 123852  -24.00 32 s
( to the line\036width,) 143843  -24.67 32 s
85344.0 60192.0 m
(centered) 94901  0.00 -1 s
( on the join point.) 114740  -38.00 32 s
52832.0 63353.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 62528 av
149352 62528 as
149352 62646 as
52832 62646 as
closepath
fp
/drawmode PL_SET def
52832.0 69359.0 m
(When) 59571  0.00 -1 s
( the end points of a polyline segment are identical,) 116058  -46.00 32 s
( the effect is as if the segment) 149352  -46.57 32 s
52832.0 72520.0 m
(was) 57220  0.00 -1 s
( removed from the polyline. When a polyline is a single point, the effect) 136584  -159.00 32 s
( is the same) 149352  -159.67 32 s
52832.0 75681.0 m
(as) 55183  0.00 -1 s
( when the cap\036style is applied at both end points.) 109954  -28.00 32 s
/timsps10i 3 declareFont
3 sf
52832.0 81686.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 86473.0 m
(gcontext\036line\036style) 56483  0.00 -1 s
( ) 57090  -99.00 32 s
3 sf
(gcontext) 66650  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 89634.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 92795.0 m
(  line\036style ) 65236  -19.00 32 s
4 sf
(\037 One of ) 77170  -19.00 32 s
2 sf
(:dash) 83756  0.00 -1 s
4 sf
(, ) 85149  -19.00 32 s
2 sf
(:double\036dash) 100829  0.00 -1 s
4 sf
(, or ) 105259  -19.00 32 s
2 sf
(:solid) 111844  0.00 -1 s
4 sf
(.) 112550  0.00 -1 s
52832.0 97513.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73026  -244.00 32 s
2 sf
(setf) 77255  0.00 -1 s
4 sf
(\) changes the line\036style attribute of the specified graphics context.) 149352  -243.89 32 s
52832.0 103790.0 m
(The) 57220  0.00 -1 s
( line\036style attribute of a graphics context specifies how \(which sections of\) lines are) 149352  -164.85 32 s
52832.0 106951.0 m
(drawn) 59883  0.00 -1 s
( for a path in graphics operations. The possible values and their meanings are as) 149352  -52.71 32 s
52832.0 110112.0 m
(follows:) 62080  0.00 -1 s
( ) 62789  3.00 32 s
2 sf
52832.0 116388.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 115563 av
149352 115563 as
149352 115798 as
52832 115798 as
closepath
fp
/drawmode PL_SET def
52832.0 119549.0 m
(Line\036Style) 65215  0.00 -1 s
79248.0 h
85344.0 h
(Meaning) 96005  0.00 -1 s
52832.0 122710.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 121885 av
149352 121885 as
149352 122120 as
52832 122120 as
closepath
fp
/drawmode PL_SET def
52832.0 125871.0 m
(:solid) 59417  0.00 -1 s
4 sf
85344.0 h
(The) 89732  0.00 -1 s
( full path is) 102440  -23.00 32 s
( drawn.) 110879  -24.00 32 s
85344.0 129032.0 m
2 sf
52832.0 132193.0 m
(:double\036dash) 68512  0.00 -1 s
4 sf
85344.0 h
(The full path is drawn, but the even) 125304  -24.00 32 s
( dashes are filled) 144272  -24.67 32 s
85344.0 135354.0 m
(differently than the odd) 111838  -24.00 32 s
( dashes.) 120751  -23.00 32 s
( The ) 126504  -23.50 32 s
2 sf
(:butt ) 133141  -24.00 32 s
4 sf
(style is used) 146891  -23.50 32 s
85344.0 138515.0 m
(where) 92237  0.00 -1 s
( even) 98227  -44.00 32 s
( and odd dashes meet \(see paragraph 5.4.7,) 146349  -44.57 32 s
85344.0 141676.0 m
(Fill\036Rule) 95534  0.00 -1 s
( and Fill\036Style\).) 113273  -27.00 32 s
85344.0 144836.0 m
2 sf
52832.0 147997.0 m
(:on\036off\036dash) 67565  0.00 -1 s
4 sf
85344.0 h
(Only) 90987  0.00 -1 s
( the even dashes are drawn, with cap\036style) 138388  -35.00 32 s
( applied) 147365  -36.00 32 s
85344.0 151158.0 m
(to) 87539  0.00 -1 s
( all internal ends of the individual dashes, except) 142398  -29.88 32 s
85344.0 154319.0 m
2 sf
(:not\036last) 95373  0.00 -1 s
4 sf
( is) 97957  -4.00 32 s
( treated as ) 110089  -4.67 32 s
2 sf
(:butt) 116044  0.00 -1 s
4 sf
(.) 116750  0.00 -1 s
52832.0 157480.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 156655 av
149352 156655 as
149352 156773 as
52832 156773 as
closepath
fp
/drawmode PL_SET def
3 sf
52832.0 163689.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 168475.0 m
(gcontext\036line\036width) 57896  0.00 -1 s
3 sf
( gcontext) 68049  -113.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 171636.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 174797.0 m
(  line\036width ) 66294  -33.00 32 s
4 sf
(\037 Type ) 76262  -32.50 32 s
2 sf
(card16) 84570  0.00 -1 s
4 sf
(.) 85276  0.00 -1 s
52832.0 179516.0 m
(Returns) 61610  0.00 -1 s
( the ) 66414  -28.00 32 s
3 sf
(line\036width) 77857  0.00 -1 s
4 sf
( of) 80885  -28.00 32 s
( the specified graphics context. ) 116479  -28.60 32 s
52832.0 185793.0 m
(The) 57220  0.00 -1 s
( line\036width is measured in pixels and can be greater than or) 122493  -129.00 32 s
( equal to one \(wide line\)) 149352  -129.60 32 s
52832.0 188953.0 m
(or) 55182  0.00 -1 s
( can be the special value zero \(thin) 94097  -27.00 32 s
( line\).) 100652  -28.00 32 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03662) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
52832.0 22578.0 m
83312.0 h
99568.0 h
123952.0 h
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
/timsps10 4 declareFont
4 17 fillpatset
newpath
52832 21753 av
149352 21753 as
149352 21988 as
52832 21988 as
closepath
fp
/drawmode PL_SET def
52832.0 25739.0 m
(Symbol) 61926  0.00 -1 s
83312.0 h
(Result) 90992  0.00 -1 s
52832.0 28900.0 m
83312.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 28075 av
149352 28075 as
149352 28310 as
52832 28310 as
closepath
fp
/drawmode PL_SET def
52832.0 32060.0 m
(boole\0361) 61610  0.00 -1 s
4 sf
83312.0 h
/timsps10i 3 declareFont
3 sf
(S) 84723  0.00 -1 s
2 sf
52832.0 35221.0 m
(boole\0362) 61610  0.00 -1 s
4 sf
83312.0 h
3 sf
(D) 85349  0.00 -1 s
2 sf
52832.0 38382.0 m
(boole\036andc1) 67412  0.00 -1 s
4 sf
83312.0 h
(\(logandc1) 94596  0.00 -1 s
( ) 95261  -41.00 32 s
3 sf
(S) 96672  0.00 -1 s
4 sf
( ) 97337  -41.00 32 s
3 sf
(D) 99374  0.00 -1 s
4 sf
(\)) 100313  0.00 -1 s
2 sf
52832.0 41543.0 m
(boole\036andc2) 67412  0.00 -1 s
( ) 68027  -91.00 32 s
4 sf
83312.0 h
(\(logandc2) 94596  0.00 -1 s
( ) 95261  -41.00 32 s
3 sf
(S D) 99374  -41.00 32 s
4 sf
(\)) 100313  0.00 -1 s
2 sf
52832.0 44704.0 m
(boole\036and) 64748  0.00 -1 s
4 sf
83312.0 h
(\(logand) 91932  0.00 -1 s
( ) 92608  -30.00 32 s
3 sf
(S D) 96732  -30.00 32 s
4 sf
(\)) 97671  0.00 -1 s
2 sf
52832.0 47865.0 m
(boole\036c1) 62863  0.00 -1 s
4 sf
83312.0 h
(\(lognot) 91463  0.00 -1 s
( ) 92151  -18.00 32 s
3 sf
( S) 94249  -19.00 32 s
4 sf
(\)) 95188  0.00 -1 s
2 sf
52832.0 51026.0 m
(boole\036c2) 62863  0.00 -1 s
4 sf
83312.0 h
(\(lognot) 91463  0.00 -1 s
( ) 92154  -15.00 32 s
( ) 92844  -16.00 32 s
3 sf
(D) 94881  0.00 -1 s
4 sf
(\)) 95820  0.00 -1 s
2 sf
52832.0 54187.0 m
(boole\036clr) 63489  0.00 -1 s
( ) 64143  -52.00 32 s
4 sf
83312.0 h
(0) 84723  0.00 -1 s
2 sf
52832.0 57348.0 m
(boole\036eqv) 64432  0.00 -1 s
4 sf
83312.0 h
(\(logeqv) 91932  0.00 -1 s
( ) 92608  -30.00 32 s
3 sf
(S D) 96732  -30.00 32 s
4 sf
(\)) 97671  0.00 -1 s
2 sf
52832.0 60508.0 m
(boole\036ior) 63647  0.00 -1 s
4 sf
83312.0 h
(\(logior) 90991  0.00 -1 s
( ) 91686  -11.00 32 s
3 sf
(S D) 95829  -11.00 32 s
4 sf
(\)) 96768  0.00 -1 s
2 sf
52832.0 63669.0 m
(boole\036nand) 66317  0.00 -1 s
4 sf
83312.0 h
(\(lognand) 93343  0.00 -1 s
( ) 94014  -35.00 32 s
3 sf
(S) 95425  0.00 -1 s
( D) 98132  -36.00 32 s
4 sf
(\)) 99071  0.00 -1 s
2 sf
52832.0 66830.0 m
(boole\036nor) 64432  0.00 -1 s
4 sf
83312.0 h
(\(lognor) 91618  0.00 -1 s
( ) 92305  -19.00 32 s
3 sf
(S) 93716  0.00 -1 s
( D) 96439  -20.00 32 s
4 sf
(\)) 97378  0.00 -1 s
2 sf
52832.0 69991.0 m
(boole\036orc1) 65527  0.00 -1 s
4 sf
83312.0 h
(\(logorc1) 92871  0.00 -1 s
( ) 93552  -25.00 32 s
3 sf
(S D) 97681  -25.00 32 s
4 sf
(\)) 98620  0.00 -1 s
2 sf
52832.0 73152.0 m
(boole\036orc2) 65527  0.00 -1 s
4 sf
83312.0 h
(\(logorc2 ) 93552  -25.00 32 s
3 sf
(S D) 97681  -25.00 32 s
4 sf
(\)) 98620  0.00 -1 s
2 sf
52832.0 76313.0 m
(boole\036set) 63489  0.00 -1 s
4 sf
83312.0 h
(1) 84723  0.00 -1 s
2 sf
52832.0 79474.0 m
(boole\036xor) 64274  0.00 -1 s
4 sf
83312.0 h
(\(logxor) 91618  0.00 -1 s
3 sf
( S) 93716  -19.00 32 s
( D) 96439  -20.00 32 s
4 sf
(\)) 97378  0.00 -1 s
2 sf
52832.0 82635.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 81810 av
149352 81810 as
149352 82045 as
52832 82045 as
closepath
fp
/drawmode PL_SET def
3 sf
52832.0 88844.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 93630.0 m
(gcontext\036id) 48022  0.00 -1 s
( ) 48623  -105.00 32 s
3 sf
(gcontext) 58183  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 96791.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 99952.0 m
(  id ) 57055  -30.00 32 s
4 sf
(\037 Type ) 67029  -29.50 32 s
2 sf
(resource\036id) 80664  0.00 -1 s
4 sf
(.) 81370  0.00 -1 s
52832.0 104671.0 m
(Returns) 61610  0.00 -1 s
( the unique ID that has been assigned to the specified graphics context.) 141247  -31.92 32 s
3 sf
52832.0 110947.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 115734.0 m
(gcontext\036join\036style) 56796  0.00 -1 s
( ) 57406  -96.00 32 s
3 sf
(gcontext) 66966  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 118895.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 122055.0 m
(  join\036style ) 65391  -20.00 32 s
4 sf
(\037 One of ) 77322  -20.00 32 s
2 sf
(:bevel) 84531  0.00 -1 s
4 sf
(,) 85237  0.00 -1 s
( ) 85922  -21.00 32 s
2 sf
(:miter) 93440  0.00 -1 s
4 sf
(, or ) 97867  -20.50 32 s
2 sf
(:round) 106177  0.00 -1 s
4 sf
(.) 106883  0.00 -1 s
52832.0 126774.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 72987  -257.00 32 s
2 sf
(setf) 77216  0.00 -1 s
4 sf
(\) changes the join\036style attribute of the specified graphics) 139891  -257.00 32 s
( context.) 149352  -258.00 32 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03661) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10i 3 declareFont
3 sf
52832.0 22578.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
/timsps10 4 declareFont
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 27364.0 m
(gcontext\036font) 50527  0.00 -1 s
( ) 51180  -53.00 32 s
3 sf
(gcontext ) 61393  -53.00 32 s
4 sf
(&optional ) 73490  -53.00 32 s
3 sf
(metrics\036p) 84147  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 30525.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63088  -12.00 32 s
3 sf
( ) 63782  -12.00 32 s
52832.0 33686.0 m
(  font ) 59290  -16.67 32 s
4 sf
(\037 Type ) 69290  -16.50 32 s
2 sf
(font) 74148  0.00 -1 s
4 sf
( or ) 77877  -16.50 32 s
2 sf
(null) 82583  0.00 -1 s
4 sf
(.) 83289  0.00 -1 s
52832.0 38405.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 72996  -254.00 32 s
2 sf
(setf) 77225  0.00 -1 s
4 sf
(\) changes the ) 92058  -254.00 32 s
3 sf
(font) 96448  0.00 -1 s
4 sf
( attribute of the specified graphics context. If the) 149352  -253.75 32 s
52832.0 41566.0 m
(stored) 59728  0.00 -1 s
( font is known, it is returned. If it) 96289  -113.00 32 s
( is not known and the ) 120536  -113.50 32 s
3 sf
(metrics\036p) 131193  0.00 -1 s
4 sf
( argument is ) 145509  -113.67 32 s
2 sf
(nil) 148646  0.00 -1 s
4 sf
(,) 149352  0.00 -1 s
52832.0 44727.0 m
(then) 57691  0.00 -1 s
( ) 58298  -99.00 32 s
2 sf
(nil) 61435  0.00 -1 s
4 sf
( is returned. If the font is not known and) 106002  -99.00 32 s
( ) 106608  -100.00 32 s
3 sf
(metrics\036p) 117265  0.00 -1 s
4 sf
( is true, then a pseudo\036font is) 149352  -99.50 32 s
52832.0 47887.0 m
(constructed) 65840  0.00 -1 s
( and returned. For a) 87298  -180.00 32 s
( constructed pseudo\036font, full metric and property infor\036) 149352  -180.57 32 s
52832.0 51048.0 m
(mation) 60670  0.00 -1 s
( can) 65065  -228.00 32 s
( be obtained, but it does not have a name or a resource ID, and attempts to use) 149352  -228.53 32 s
52832.0 54209.0 m
(it) 54400  0.00 -1 s
( where a resource ID is required results in an invalid\036font error.) 125690  -15.73 32 s
52832.0 60486.0 m
(The) 57220  0.00 -1 s
( font attribute in a graphics context defines the default text font used in text) 139586  -185.00 32 s
( drawing) 149352  -186.00 32 s
52832.0 63647.0 m
(operations.) 65293  0.00 -1 s
( When setting the value) 92373  108.00 32 s
( of the font attribute, either a ) 126196  107.43 32 s
2 sf
(font) 131054  0.00 -1 s
4 sf
( object or a font) 149352  107.50 32 s
52832.0 66808.0 m
(name) 58944  0.00 -1 s
( can be used. If) 74974  -283.00 32 s
( a font name is passed, ) 99531  -283.50 32 s
2 sf
(open\036font) 111130  0.00 -1 s
4 sf
( is call automatically to get the ) 144494  -283.57 32 s
2 sf
(font) 149352  0.00 -1 s
4 sf
52832.0 69969.0 m
(object.) 60434  0.00 -1 s
3 sf
52832.0 76245.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
3 sf
52832.0 81032.0 m
(metrics\036p) 63489  0.00 -1 s
( ) 63969  -226.00 32 s
4 sf
(\037 Specifies whether a pseudo\036font is returned when the real font stored in the) 149352  -225.92 32 s
57912.0 84193.0 m
(graphics) 67472  0.00 -1 s
( context is not known. The default is) 110374  239.00 32 s
( ) 111318  238.00 32 s
2 sf
(nil) 114455  0.00 -1 s
4 sf
(, which means do not return a) 149352  238.50 32 s
57912.0 87353.0 m
(pseudo\036font.) 72097  0.00 -1 s
2 sf
34544.0 92140.0 m
(gcontext\036foreground) 59307  0.00 -1 s
4 sf
( ) 59822  -191.00 32 s
3 sf
(gcontext) 69382  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 95301.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 98462.0 m
(  foreground ) 67529  -40.00 32 s
4 sf
(\037 Type) 76816  -40.00 32 s
( ) 77481  -41.00 32 s
2 sf
(card32) 85789  0.00 -1 s
4 sf
(.) 86495  0.00 -1 s
52832.0 103180.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73518  -80.00 32 s
2 sf
(setf) 77747  0.00 -1 s
4 sf
(\) changes the foreground attribute) 115667  -80.00 32 s
( of the specified graphics con\036) 149352  -80.60 32 s
52832.0 106341.0 m
(text.) 57770  0.00 -1 s
52832.0 112618.0 m
(The) 57220  0.00 -1 s
( foreground attribute of a graphics context specifies the pixel value drawn for set bits) 149352  -270.64 32 s
52832.0 115779.0 m
(in) 55027  0.00 -1 s
( a bitmap and for bits set by a graphics operation. ) 111218  -21.82 32 s
3 sf
52832.0 122055.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 126842.0 m
(gcontext\036function) 55702  0.00 -1 s
3 sf
( gcontext) 65837  -131.00 32 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 130003.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 133164.0 m
(  function ) 64095  -34.67 32 s
4 sf
(\037 Type ) 74059  -34.50 32 s
2 sf
(boole\036constant) 91615  0.00 -1 s
4 sf
(.) 92321  0.00 -1 s
52832.0 137882.0 m
(Returns) 61610  0.00 -1 s
( the ) 66408  -31.00 32 s
3 sf
(function) 75657  0.00 -1 s
4 sf
( of the specified graphics context. ) 114266  -30.67 32 s
52832.0 144159.0 m
(In) 55182  0.00 -1 s
( all graphic operations, given a source pixel and a corresponding destination pixel, the) 149352  -225.77 32 s
52832.0 147320.0 m
(resulting) 62707  0.00 -1 s
( pixel drawn is computed bitwise on the bits of the source and destination pix\036) 149352  -114.93 32 s
52832.0 150481.0 m
(els.) 56673  0.00 -1 s
( That is, a logical operation is used to combine each bit plane of corresponding) 149352  265.93 32 s
52832.0 153642.0 m
(source) 60197  0.00 -1 s
( and destination pixels. The graphics context function attribute specifies the logi\036) 149352  -202.64 32 s
52832.0 156803.0 m
(cal) 56122  0.00 -1 s
( operation used via one of the 16 operation) 104424  3.00 32 s
( codes defined by Common Lisp for the) 149352  2.43 32 s
52832.0 159964.0 m
2 sf
(boole) 59260  0.00 -1 s
4 sf
( function.) 69991  -85.00 32 s
52832.0 166240.0 m
(The) 57220  0.00 -1 s
( following table shows each of the logical) 103797  -75.00 32 s
( operation codes that can be given by the) 149352  -66.13 32 s
52832.0 169401.0 m
(function) 62236  0.00 -1 s
( attribute. For each operation code, its result  is shown as a logical function of a) 149352  -159.06 32 s
52832.0 172562.0 m
(source) 60197  0.00 -1 s
( pixel) 66511  -35.00 32 s
( ) 67181  -36.00 32 s
3 sf
(S) 68592  0.00 -1 s
4 sf
( and a destination pixel ) 95335  -28.40 32 s
3 sf
(D) 97372  0.00 -1 s
4 sf
(.) 98078  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03660) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(The) 57220  0.00 -1 s
( ) 58031  105.00 32 s
2 sf
(:winding) 68693  0.00 -1 s
4 sf
( rule defines a point to be inside if any infinite ray starting at the point) 149352  105.20 32 s
52832.0 25739.0 m
(crosses) 60982  0.00 -1 s
( an unequal number of clockwise and counterclockwise directed border seg\036) 149352  248.40 32 s
52832.0 28900.0 m
(ments.) 60279  0.00 -1 s
( A clockwise directed border segment crosses the ray from left to) 135381  138.00 32 s
( right as ob\036) 149352  137.33 32 s
52832.0 32060.0 m
(served) 60197  0.00 -1 s
( from the point. A counterclockwise segment crosses the ray from right to left as) 149352  -119.71 32 s
52832.0 35221.0 m
(observed) 63019  0.00 -1 s
( from the point. The case where a directed line) 114749  -86.00 32 s
( segment is coincident with the) 149352  -86.60 32 s
52832.0 38382.0 m
(ray) 56435  0.00 -1 s
( is uninteresting because you can simply choose a different) 121542  -159.00 32 s
( ray that is not coincident) 149352  -159.60 32 s
52832.0 41543.0 m
(with) 57848  0.00 -1 s
( a segment.) 70556  -34.00 32 s
52832.0 47820.0 m
(For) 56751  0.00 -1 s
( both ) 63080  -50.00 32 s
2 sf
(:even\036odd) 74993  0.00 -1 s
4 sf
( and ) 80380  -50.00 32 s
2 sf
(:winding) 91042  0.00 -1 s
4 sf
(, a point is infinitely small, and) 125860  -50.00 32 s
( the border is an infi\036) 149352  -50.60 32 s
52832.0 50981.0 m
(nitely) 59259  0.00 -1 s
( thin line. A pixel is inside if the center point of the pixel is inside, and the) 141826  -72.00 32 s
( center) 149352  -73.00 32 s
52832.0 54142.0 m
(point) 58633  0.00 -1 s
( is not on the border. If the center point is on the border, the pixel is inside if, and) 149352  -51.74 32 s
52832.0 57302.0 m
(only) 57849  0.00 -1 s
( if, the polygon interior is immediately to its right \(x) 117020  15.00 32 s
( increasing direction\). Pixels) 149352  14.33 32 s
52832.0 60463.0 m
(with) 57848  0.00 -1 s
( centers along a horizontal edge are a special case and are inside if, and only if, the) 149352  -107.71 32 s
52832.0 63624.0 m
(polygon) 62082  0.00 -1 s
( interior is immediately below \(y increasing direction\).) 123613  -31.86 32 s
/timsps10i 3 declareFont
3 sf
52832.0 69901.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 74687.0 m
(gcontext\036fill\036style) 55384  0.00 -1 s
( ) 56028  -62.00 32 s
3 sf
(gcontext) 65588  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 77848.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 81009.0 m
(  fill\036style ) 64155  -14.00 32 s
4 sf
(\037 One of ) 76104  -14.00 32 s
2 sf
(:opaque\036stippled) 96329  0.00 -1 s
4 sf
(, ) 97727  -14.00 32 s
2 sf
(:solid) 104312  0.00 -1 s
4 sf
(, ) 105710  -14.00 32 s
2 sf
(:stippled) 116214  0.00 -1 s
4 sf
(, or :) 121439  -13.50 32 s
2 sf
(tiled) 126768  0.00 -1 s
4 sf
(.) 127474  0.00 -1 s
52832.0 85728.0 m
(Returns) 61610  0.00 -1 s
( and) 66226  -165.00 32 s
( \(with ) 73262  -165.50 32 s
2 sf
(setf) 77491  0.00 -1 s
4 sf
(\) changes the fill\036style attribute of the specified graphics context.) 149352  -165.56 32 s
52832.0 92004.0 m
(The) 57220  0.00 -1 s
( fill\036style attribute of a graphics context defines the contents) 124640  -41.00 32 s
( of the source for line,) 149352  -41.60 32 s
52832.0 95165.0 m
(text,) 57770  0.00 -1 s
( and fill graphics operations. It determines whether the source image is drawn with a) 149352  -270.86 32 s
52832.0 98326.0 m
(solid) 58320  0.00 -1 s
( color, a tile, or a stippled tile. The possible values and their meanings are as fol\036) 149352  2.44 32 s
52832.0 101487.0 m
(lows:) 58946  0.00 -1 s
( ) 59650  -2.00 32 s
2 sf
52832.0 107764.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
4 17 fillpatset
newpath
52832 106939 av
149352 106939 as
149352 107174 as
52832 107174 as
closepath
fp
/drawmode PL_SET def
52832.0 110925.0 m
(Fill\036Style) 63803  0.00 -1 s
79248.0 h
85344.0 h
(Meaning) 96005  0.00 -1 s
52832.0 114086.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 113261 av
149352 113261 as
149352 113496 as
52832 113496 as
closepath
fp
/drawmode PL_SET def
52832.0 117246.0 m
(:opaque\036stippled) 73057  0.00 -1 s
4 sf
85344.0 h
(Filled) 91929  0.00 -1 s
( with a tile with the same width and height as) 142827  -20.60 32 s
85344.0 120407.0 m
(stipple,) 93575  0.00 -1 s
( but with the background value used everywhere) 148042  -44.57 32 s
85344.0 123568.0 m
(stipple) 92869  0.00 -1 s
( has a zero and the foreground pixel value used) 145785  -32.89 32 s
85344.0 126729.0 m
(everywhere) 98504  0.00 -1 s
( stipple has a) 113042  -40.00 32 s
( one.) 118488  -41.00 32 s
85344.0 129890.0 m
2 sf
52832.0 133051.0 m
(:solid) 59417  0.00 -1 s
4 sf
85344.0 h
(Filled) 91929  0.00 -1 s
( with the) 101733  -36.00 32 s
( foreground pixel value.) 128738  -36.67 32 s
85344.0 136212.0 m
2 sf
52832.0 139373.0 m
(:stippled) 63336  0.00 -1 s
4 sf
85344.0 h
(Filled with the foreground pixel value) 128034  -36.00 32 s
( masked) 137326  -35.00 32 s
( by) 140818  -36.00 32 s
85344.0 142534.0 m
(stipple.) 93575  0.00 -1 s
85344.0 145694.0 m
2 sf
52832.0 148855.0 m
(:tiled) 59100  0.00 -1 s
4 sf
85344.0 h
(Filled) 91929  0.00 -1 s
( with) 97637  -14.00 32 s
( tile.) 102639  -15.00 32 s
52832.0 152016.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 151191 av
149352 151191 as
149352 151309 as
52832 151309 as
closepath
fp
/drawmode PL_SET def
52832.0 158225.0 m
(When) 59571  0.00 -1 s
( drawing lines with line\036style ) 92334  -172.00 32 s
2 sf
(:double\036dash) 108014  0.00 -1 s
4 sf
(, the filling of the odd dashes are con\036) 149352  -171.88 32 s
52832.0 161386.0 m
(trolled) 60198  0.00 -1 s
( by the fill\036style in the following manner: ) 107402  -16.88 32 s
2 sf
52832.0 167663.0 m
83312.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 166838 av
149352 166838 as
149352 167073 as
52832 167073 as
closepath
fp
/drawmode PL_SET def
52832.0 170823.0 m
(Fill\036Style) 63803  0.00 -1 s
83312.0 h
(Effect) 90517  0.00 -1 s
52832.0 173984.0 m
83312.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 173159 av
149352 173159 as
149352 173394 as
52832 173394 as
closepath
fp
/drawmode PL_SET def
52832.0 177145.0 m
(:opaque\036stippled) 73057  0.00 -1 s
83312.0 h
4 sf
(Same) 89582  0.00 -1 s
( as) 92605  -34.00 32 s
( for even dashes.) 111466  -34.67 32 s
52832.0 180306.0 m
2 sf
183467.0 v
(:solid) 59417  0.00 -1 s
4 sf
83312.0 h
(Filled) 89897  0.00 -1 s
( with the) 99685  -44.00 32 s
( background pixel value.) 127452  -44.67 32 s
52832.0 186628.0 m
2 sf
189789.0 v
(:stippled) 63336  0.00 -1 s
4 sf
83312.0 h
(Filled) 89897  0.00 -1 s
( with the background pixel value masked by) 139531  -41.71 32 s
52832.0 192950.0 m
83312.0 h
(stipple.) 91543  0.00 -1 s
52832.0 196111.0 m
2 sf
199271.0 v
(:tiled) 59100  0.00 -1 s
4 sf
83312.0 h
(Filled) 89897  0.00 -1 s
( the same as the even dashes.) 122552  -30.83 32 s
52832.0 202432.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 201607 av
149352 201607 as
149352 201725 as
52832 201725 as
closepath
fp
/drawmode PL_SET def
eop
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03659) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(The) 57220  0.00 -1 s
( dashes attribute in a graphics context specifies the pattern that is used for graphics) 149352  -91.86 32 s
52832.0 25739.0 m
(operations) 64587  0.00 -1 s
( which) 72114  -75.00 32 s
( use the dashed line styles. It is a non\036) 114231  -75.56 32 s
2 sf
(nil) 117368  0.00 -1 s
4 sf
( sequence with each element) 149352  -75.50 32 s
52832.0 28900.0 m
(representing) 66779  0.00 -1 s
( the) 70780  -153.00 32 s
( length of a single dash or space. The initial and alternating elements of) 149352  -153.54 32 s
52832.0 32060.0 m
(the) 56280  0.00 -1 s
( dashes are the even dashes, while the others are the odd dashes. An odd length) 145369  -12.00 32 s
( se\036) 149352  -13.00 32 s
52832.0 35221.0 m
(quence) 60824  0.00 -1 s
( is equivalent to the same sequence concatenated with itself to produce an even) 149352  -56.62 32 s
52832.0 38382.0 m
(length) 59886  0.00 -1 s
( sequence. All of the elements of a) 98676  -34.00 32 s
( dashes sequence must be non\036zero.) 138786  -34.60 32 s
52832.0 44659.0 m
(Specifying) 65058  0.00 -1 s
( a single integer value, ) 91505  54.00 32 s
/timsps10i 3 declareFont
3 sf
(N) 93387  0.00 -1 s
4 sf
(,) 94093  0.00 -1 s
( for the dashes attribute is an abbreviated way of) 149352  53.44 32 s
52832.0 47820.0 m
(specifying) 64587  0.00 -1 s
( a two element sequence with both elements equal to the specified value [) 146764  -62.92 32 s
3 sf
(N) 148646  0.00 -1 s
4 sf
(,) 149352  0.00 -1 s
52832.0 50981.0 m
3 sf
(N) 54714  0.00 -1 s
4 sf
(].) 56359  0.00 -1 s
52832.0 57257.0 m
(The) 57220  0.00 -1 s
( unit of measure for dashes is the same as in the ordinary coordinate system.) 140312  -206.00 32 s
( Ideally,) 149352  -207.00 32 s
52832.0 60418.0 m
(a) 54085  0.00 -1 s
( dash length is measured along the slope of the line,) 109528  -295.00 32 s
( but server implementations are only) 149352  -295.60 32 s
52832.0 63579.0 m
(required) 62233  0.00 -1 s
( to match this ideal for horizontal and vertical lines.) 120317  -25.00 32 s
3 sf
52832.0 69856.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 74642.0 m
(gcontext\036display) 54295  0.00 -1 s
4 sf
( ) 54877  -124.00 32 s
3 sf
(gcontext) 64437  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 77803.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 80964.0 m
(  display ) 63036  -22.00 32 s
4 sf
(\037 Type ) 73025  -22.00 32 s
2 sf
(display) 81651  0.00 -1 s
4 sf
(. ) 83041  -22.00 32 s
52832.0 85683.0 m
(Returns) 61610  0.00 -1 s
( the ) 66406  -32.00 32 s
2 sf
(display) 75032  0.00 -1 s
4 sf
( object associated with the) 104686  -32.00 32 s
( specified ) 116219  -32.50 32 s
3 sf
(gcontext) 125779  0.00 -1 s
4 sf
(. ) 127158  -33.00 32 s
3 sf
52832.0 91959.0 m
(gcontext) 62392  0.00 -1 s
( \037) 65572  -35.00 32 s
( ) 66242  -36.00 32 s
4 sf
(A ) 68950  -35.00 32 s
2 sf
(gcontext) 79136  0.00 -1 s
4 sf
(. ) 80512  -36.00 32 s
2 sf
34544.0 96746.0 m
(gcontext\036equal) 52255  0.00 -1 s
( ) 52860  -101.00 32 s
3 sf
(gcontext\0361) 64770  0.00 -1 s
4 sf
( ) 65374  -102.00 32 s
3 sf
(gcontext\0362) 77284  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 99907.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 103068.0 m
(  equal\036p ) 63462  -36.00 32 s
4 sf
(\037 Type ) 73424  -35.50 32 s
2 sf
(boolean) 82832  0.00 -1 s
4 sf
(.) 83538  0.00 -1 s
52832.0 107786.0 m
(Returns) 61610  0.00 -1 s
( true if the two arguments refer to the same server resource, and ) 130769  -273.85 32 s
2 sf
(nil) 133906  0.00 -1 s
4 sf
( if they do not.) 149352  -273.50 32 s
3 sf
52832.0 114063.0 m
(gcontext\0361) 64742  0.00 -1 s
4 sf
(,) 65448  0.00 -1 s
( ) 66103  -51.00 32 s
3 sf
(gcontext\0362 ) 78668  -51.00 32 s
4 sf
(\037 A ) 84838  -50.50 32 s
2 sf
(gcontext) 95024  0.00 -1 s
4 sf
(.) 95730  0.00 -1 s
2 sf
34544.0 118849.0 m
(gcontext\036exposures) 57584  0.00 -1 s
( ) 58128  -162.00 32 s
3 sf
(gcontext) 67688  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 122010.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 125171.0 m
(  exposures ) 66194  -14.00 32 s
4 sf
(\037 Either ) 77295  -14.00 32 s
2 sf
(:off) 81523  0.00 -1 s
4 sf
( or ) 85257  -14.00 32 s
2 sf
(:on) 89176  0.00 -1 s
4 sf
(.) 89882  0.00 -1 s
52832.0 129890.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73830  24.00 32 s
2 sf
(setf) 78059  0.00 -1 s
4 sf
(\) changes the exposures attribute of the specified graphics con\036) 149352  24.00 32 s
52832.0 133051.0 m
(text.) 57770  0.00 -1 s
52832.0 139327.0 m
(The) 57220  0.00 -1 s
( exposures attribute in a graphics context controls the generation of ) 130543  -295.00 32 s
2 sf
(:graphics\036expo\036) 149352  0.00 -1 s
52832.0 142488.0 m
(sure) 58005  0.00 -1 s
4 sf
( events) 65827  -94.00 32 s
( for calls to the ) 82988  -94.60 32 s
2 sf
(copy\036area) 94899  0.00 -1 s
4 sf
( and ) 100197  -94.50 32 s
2 sf
(copy\036plane) 113366  0.00 -1 s
4 sf
( functions. If ) 128287  -94.33 32 s
2 sf
(:on) 132206  0.00 -1 s
4 sf
(, ) 133523  -95.00 32 s
2 sf
(:graphics\036ex\036) 149352  0.00 -1 s
52832.0 145649.0 m
(posure) 60985  0.00 -1 s
4 sf
( events will be reported) 87489  4.00 32 s
( when calling the ) 107567  3.50 32 s
2 sf
(copy\036area) 119478  0.00 -1 s
4 sf
( and ) 124972  3.50 32 s
2 sf
(copy\036plane) 138141  0.00 -1 s
4 sf
( functions) 149352  3.00 32 s
52832.0 148810.0 m
(with) 57848  0.00 -1 s
( this graphics context. Otherwise, if ) 98633  -21.00 32 s
2 sf
(:off) 102861  0.00 -1 s
4 sf
(, the events will not be reported.) 139102  -20.83 32 s
3 sf
52832.0 155087.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 159873.0 m
(gcontext\036fill\036rule) 54758  0.00 -1 s
( ) 55374  -90.00 32 s
3 sf
(gcontext) 64934  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 163034.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 166195.0 m
(  fill\036rule ) 63520  -17.00 32 s
4 sf
(\037 Either ) 74615  -17.00 32 s
2 sf
(:even\036odd) 86528  0.00 -1 s
4 sf
( or ) 90255  -17.50 32 s
2 sf
(:winding) 100917  0.00 -1 s
4 sf
(.) 101623  0.00 -1 s
52832.0 170914.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73497  -87.00 32 s
2 sf
(setf) 77726  0.00 -1 s
4 sf
(\) changes the fill\036rule attribute of the specified graphics context.) 149352  -86.89 32 s
52832.0 177190.0 m
(The) 57220  0.00 -1 s
( fill\036rule) 66396  -147.00 32 s
( attribute in a graphics context specifies the rule used to determine the inte\036) 149352  -147.54 32 s
52832.0 180351.0 m
(rior) 56905  0.00 -1 s
( of a filled area. It can be specified as either ) 106660  -21.64 32 s
2 sf
(:even\036odd) 118573  0.00 -1 s
4 sf
( or ) 122292  -21.50 32 s
2 sf
(:winding) 132954  0.00 -1 s
4 sf
(.) 133660  0.00 -1 s
52832.0 186628.0 m
(The) 57220  0.00 -1 s
( ) 57953  27.00 32 s
2 sf
(:even\036odd) 69866  0.00 -1 s
4 sf
( rule defines a point to be inside if any infinite ray starting at the point) 149352  27.00 32 s
52832.0 189789.0 m
(crosses) 60982  0.00 -1 s
( the border an odd number of times. Tangencies do) 118247  -29.00 32 s
( not count as a crossing.) 145220  -29.60 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03658) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(If) 54710  0.00 -1 s
( known by the client, the ordering of clip\036mask rectangles can be specified to provide) 149352  -119.57 32 s
52832.0 25739.0 m
(faster) 59098  0.00 -1 s
( operation by the server. A value of ) 97653  -264.75 32 s
2 sf
(:unsorted) 109253  0.00 -1 s
4 sf
( means the rectangles are in arbitrary) 149352  -264.50 32 s
52832.0 28900.0 m
(order.) 59491  0.00 -1 s
( A value of ) 72294  -130.00 32 s
2 sf
(:y\036sorted) 83106  0.00 -1 s
4 sf
( means that the rectangles are non\036decreasing in) 136345  -130.00 32 s
( their Y ori\036) 149352  -130.67 32 s
52832.0 32060.0 m
(gin.) 57144  0.00 -1 s
( A ) 60033  -280.00 32 s
2 sf
(:yx\036sorted) 72256  0.00 -1 s
4 sf
( value is like ) 86186  -280.00 32 s
2 sf
(:y\036sorted) 96998  0.00 -1 s
4 sf
( with the additional constraint that all rectangles) 149352  -279.71 32 s
52832.0 35221.0 m
(with) 57848  0.00 -1 s
( an equal Y origin are non\036decreasing in their X origin. A) 121911  -75.00 32 s
( ) 122541  -76.00 32 s
2 sf
(:yx\036banded) 136181  0.00 -1 s
4 sf
( value addi\036) 149352  -75.50 32 s
52832.0 38382.0 m
(tionally) 61454  0.00 -1 s
( constrains ) 74146  -81.00 32 s
2 sf
(:yx\036sorted) 86369  0.00 -1 s
4 sf
( by requiring that, for every possible Y scan line, all rec\036) 149352  -80.64 32 s
52832.0 41543.0 m
(tangles) 60826  0.00 -1 s
( that include that scan line have an identical Y origins and Y extents. If incorrect) 149352  -158.87 32 s
52832.0 44704.0 m
(ordering) 62391  0.00 -1 s
( is specified, the X server may generate an error, but it is not required to do so.) 147010  -241.00 32 s
( If) 149352  -242.00 32 s
52832.0 47865.0 m
(no) 55654  0.00 -1 s
( error is generated, the results of the graphics operations are undefined.) 135512  -28.00 32 s
/timsps10i 3 declareFont
3 sf
52832.0 54142.0 m
(gcontext) 62392  0.00 -1 s
( \037 ) 66223  -45.00 32 s
4 sf
(A) 68260  0.00 -1 s
( ) 68920  -46.00 32 s
2 sf
(gcontext) 79106  0.00 -1 s
4 sf
(.) 79812  0.00 -1 s
3 sf
52832.0 58928.0 m
(ordering) 62709  0.00 -1 s
( \037 ) 66560  -35.00 32 s
4 sf
(One of ) 74953  -35.00 32 s
2 sf
(:unsorted) 86553  0.00 -1 s
4 sf
(, ) 87930  -35.00 32 s
2 sf
(:y\036sorted) 98742  0.00 -1 s
4 sf
(, ) 100120  -34.00 32 s
2 sf
(:yx\036banded) 113760  0.00 -1 s
4 sf
(, ) 115137  -35.00 32 s
2 sf
(:yx\036sorted) 127360  0.00 -1 s
4 sf
(, or ) 131759  -34.50 32 s
2 sf
(nil) 134896  0.00 -1 s
4 sf
(.) 135602  0.00 -1 s
2 sf
34544.0 63714.0 m
(gcontext\036clip\036x) 52409  0.00 -1 s
( ) 53003  -112.00 32 s
3 sf
(gcontext) 62563  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 66875.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 70036.0 m
(  clip\036x ) 61309  -21.67 32 s
4 sf
(\037 Type ) 71299  -21.50 32 s
2 sf
(int16) 77413  0.00 -1 s
4 sf
(.) 78119  0.00 -1 s
52832.0 74755.0 m
(Returns) 61610  0.00 -1 s
( and) 66365  -26.00 32 s
( \(with ) 73679  -26.50 32 s
2 sf
(setf) 77908  0.00 -1 s
4 sf
(\) changes the clip\036x attribute of the specified graphics context.) 148042  -26.56 32 s
52832.0 81032.0 m
(The) 57220  0.00 -1 s
( clip\036x and clip\036y attributes specify the origin for the clip\036mask, whether it) 139844  -96.00 32 s
( is a pix\036) 149352  -96.67 32 s
52832.0 84193.0 m
(map) 57691  0.00 -1 s
( or a) 62366  -170.00 32 s
( sequence of rectangles. These coordinates are interpreted relative to the origin) 149352  -170.55 32 s
52832.0 87353.0 m
(of) 55182  0.00 -1 s
( whatever destination drawable is specified in a graphics operation.) 130748  -32.56 32 s
3 sf
52832.0 93630.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 98417.0 m
(gcontext\036clip\036y) 52409  0.00 -1 s
( ) 53003  -112.00 32 s
3 sf
(gcontext) 62563  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 101577.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 104738.0 m
(  clip\036y ) 61309  -21.67 32 s
4 sf
(\037 Type ) 71299  -21.50 32 s
2 sf
(int16) 77413  0.00 -1 s
4 sf
(.) 78119  0.00 -1 s
52832.0 109457.0 m
(Returns) 61610  0.00 -1 s
( and) 66365  -26.00 32 s
( \(with ) 73679  -26.50 32 s
2 sf
(setf) 77908  0.00 -1 s
4 sf
(\) changes the clip\036y attribute of the specified graphics context.) 148042  -26.56 32 s
52832.0 115734.0 m
(The) 57220  0.00 -1 s
( clip\036x and clip\036y attributes specify the origin for the clip\036mask, whether it) 139844  -96.00 32 s
( is a pix\036) 149352  -96.67 32 s
52832.0 118895.0 m
(map) 57691  0.00 -1 s
( or a) 62366  -170.00 32 s
( sequence of rectangles. These coordinates are interpreted relative to the origin) 149352  -170.55 32 s
52832.0 122055.0 m
(of) 55182  0.00 -1 s
( whatever destination drawable is specified in a graphics operation.) 130748  -32.56 32 s
3 sf
52832.0 128332.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 133119.0 m
(gcontext\036dash\036offset) 58834  0.00 -1 s
( ) 59438  -102.00 32 s
3 sf
(gcontext) 68998  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 136279.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 139440.0 m
(  dash\036offset ) 67241  -31.00 32 s
4 sf
(\037 Type) 76537  -31.00 32 s
( ) 77211  -32.00 32 s
2 sf
(card16) 85519  0.00 -1 s
4 sf
(.) 86225  0.00 -1 s
52832.0 144159.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73518  -80.00 32 s
2 sf
(setf) 77747  0.00 -1 s
4 sf
(\) changes the dash\036offset attribute) 115667  -80.00 32 s
( of the specified graphics con\036) 149352  -80.60 32 s
52832.0 147320.0 m
(text.) 57770  0.00 -1 s
52832.0 153597.0 m
(The) 57220  0.00 -1 s
( dash\036offset attribute of a graphics context defines the phase of the pattern) 137913  -237.00 32 s
( contained) 149352  -238.00 32 s
52832.0 156758.0 m
(in) 55027  0.00 -1 s
( the dashes attribute. This phase specifies how many elements \(pixels\) into) 136312  -277.00 32 s
( the path the) 149352  -277.67 32 s
52832.0 159918.0 m
(pattern) 60667  0.00 -1 s
( should actually begin in any single graphics operation. Dashing is continuous) 149352  53.09 32 s
52832.0 163079.0 m
(through) 61610  0.00 -1 s
( path elements combined with a join\036style, but is reset to the dash\036offset each) 149352  57.46 32 s
52832.0 166240.0 m
(time) 57848  0.00 -1 s
( a cap\036style is applied at a line end point.) 103722  -23.56 32 s
3 sf
52832.0 172517.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 177303.0 m
(gcontext\036dashes) 53667  0.00 -1 s
( ) 54245  -128.00 32 s
3 sf
(gcontext) 63805  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 180464.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 183625.0 m
(  dashes ) 62527  -35.00 32 s
4 sf
(\037 Type ) 72490  -35.00 32 s
2 sf
(sequence) 83307  0.00 -1 s
4 sf
( or) 86328  -35.00 32 s
( ) 86998  -36.00 32 s
2 sf
(card8) 93895  0.00 -1 s
4 sf
(.) 94601  0.00 -1 s
52832.0 188344.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73770  4.00 32 s
2 sf
(setf) 77999  0.00 -1 s
4 sf
(\) changes the dashes attribute of the specified graphics context.) 149352  4.22 32 s
52832.0 191505.0 m
(The) 57220  0.00 -1 s
( sequence) 68228  -41.00 32 s
( must be non\036empty and the elements must be non\036zero ) 130985  -41.50 32 s
2 sf
(card8) 137882  0.00 -1 s
4 sf
( values.) 146462  -42.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03657) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
52832.0 22578.0 m
79248.0 h
99568.0 h
123952.0 h
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
/timsps10 4 declareFont
4 17 fillpatset
newpath
52832 21753 av
149352 21753 as
149352 21988 as
52832 21988 as
closepath
fp
/drawmode PL_SET def
52832.0 25739.0 m
(Cap\036Style) 64744  0.00 -1 s
79248.0 h
(Line\036Width) 93358  0.00 -1 s
99568.0 h
(Effect) 106773  0.00 -1 s
52832.0 28900.0 m
79248.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 28075 av
149352 28075 as
149352 28310 as
52832 28310 as
closepath
fp
/drawmode PL_SET def
52832.0 32060.0 m
(:butt) 58787  0.00 -1 s
4 sf
79248.0 h
(thin) 83638  0.00 -1 s
99568.0 h
(Device) 107559  0.00 -1 s
( dependent, but the desired) 137679  -52.75 32 s
52832.0 35221.0 m
79248.0 h
99568.0 h
(effect) 105989  0.00 -1 s
( is that a single pixel is) 131762  -16.00 32 s
( drawn.) 140208  -17.00 32 s
52832.0 38382.0 m
2 sf
41543.0 v
(:butt) 58787  0.00 -1 s
4 sf
79248.0 h
(wide) 84733  0.00 -1 s
99568.0 h
(Nothing) 108817  0.00 -1 s
( is drawn.) 119798  -35.00 32 s
52832.0 44704.0 m
2 sf
47865.0 v
(:not\036last) 62861  0.00 -1 s
4 sf
79248.0 h
(thin) 83638  0.00 -1 s
99568.0 h
(Device) 107559  0.00 -1 s
( dependent, but the desired) 137679  -52.75 32 s
52832.0 51026.0 m
79248.0 h
99568.0 h
(effect) 105989  0.00 -1 s
( is that nothing is drawn.) 133796  -19.80 32 s
52832.0 54187.0 m
57348.0 v
2 sf
(:projecting) 66152  0.00 -1 s
4 sf
79248.0 h
(thin) 83638  0.00 -1 s
99568.0 h
(Same as ) 109561  -20.00 32 s
2 sf
(:butt) 115516  0.00 -1 s
4 sf
( with thin line\036width.) 139282  -20.67 32 s
52832.0 60508.0 m
2 sf
63669.0 v
(:projecting) 66152  0.00 -1 s
4 sf
79248.0 h
(wide) 84733  0.00 -1 s
99568.0 h
(The) 103956  0.00 -1 s
( closed path is a square, aligned) 139576  -33.00 32 s
52832.0 66830.0 m
79248.0 h
99568.0 h
(with) 104584  0.00 -1 s
( the coordinate axes, centered at) 140592  -39.00 32 s
52832.0 69991.0 m
79248.0 h
99568.0 h
(the) 103016  0.00 -1 s
( end point, with sides equal to) 136645  -26.00 32 s
( the) 140772  -27.00 32 s
52832.0 73152.0 m
79248.0 h
99568.0 h
(line\036width.) 111872  0.00 -1 s
52832.0 76313.0 m
( ) 53532  -6.00 32 s
2 sf
52832.0 79474.0 m
(:round) 61142  0.00 -1 s
4 sf
79248.0 h
(wide) 84733  0.00 -1 s
99568.0 h
(The) 103956  0.00 -1 s
( closed path is a circle, centered) 139734  -31.83 32 s
52832.0 82635.0 m
79248.0 h
99568.0 h
(at the end point, with diameter equal) 140682  -31.50 32 s
52832.0 85796.0 m
79248.0 h
99568.0 h
(to) 101763  0.00 -1 s
( the) 105890  -27.00 32 s
( line\036width.) 118872  -28.00 32 s
52832.0 88956.0 m
2 sf
92117.0 v
(:round) 61142  0.00 -1 s
4 sf
79248.0 h
(thin) 83638  0.00 -1 s
99568.0 h
(Same) 105838  0.00 -1 s
( as ) 109561  -20.00 32 s
2 sf
(:butt) 115516  0.00 -1 s
( ) 116201  -21.00 32 s
4 sf
(with thin line\036width.) 139282  -20.50 32 s
52832.0 95278.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 94453 av
149352 94453 as
149352 94571 as
52832 94571 as
closepath
fp
/drawmode PL_SET def
/timsps10i 3 declareFont
3 sf
52832.0 101284.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 106070.0 m
(gcontext\036clip\036mask) 57426  0.00 -1 s
( ) 58064  -68.00 32 s
3 sf
(gcontext) 67624  0.00 -1 s
2 sf
( ) 68262  -68.00 32 s
4 sf
(&optional ) 80344  -68.00 32 s
3 sf
(ordering) 90221  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
4 sf
52832.0 110789.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73677  -27.00 32 s
2 sf
(setf) 77906  0.00 -1 s
4 sf
(\) changes the clip\036mask attribute of the graphics context.) 141721  -26.50 32 s
52832.0 117066.0 m
(When) 59571  0.00 -1 s
( changing the clip\036mask attribute, the new clip\036mask can be specified as a pixmap) 149352  -195.38 32 s
52832.0 120227.0 m
(or) 55182  0.00 -1 s
( a ) 57499  -174.00 32 s
2 sf
(rect\036seq) 67056  0.00 -1 s
4 sf
( or as the values ) 85072  -174.60 32 s
2 sf
(:none) 91813  0.00 -1 s
4 sf
( or ) 95226  -174.50 32 s
2 sf
(nil) 98363  0.00 -1 s
4 sf
(. The ordering argument can be specified only) 149352  -149.57 32 s
52832.0 123388.0 m
(with) 57848  0.00 -1 s
( ) 58530  -24.00 32 s
2 sf
(setf) 62759  0.00 -1 s
4 sf
( when) 69553  -24.00 32 s
( the new clip\036mask is a ) 96078  -20.50 32 s
2 sf
(rect\036seq) 105635  0.00 -1 s
4 sf
(.) 106341  0.00 -1 s
52832.0 129664.0 m
(The) 57220  0.00 -1 s
( clip\036mask attribute of a graphics context affects all graphics operations and is used) 149352  -140.92 32 s
52832.0 132825.0 m
(to) 55027  0.00 -1 s
( restrict output to the destination drawable. The clip\036mask does not clip the source of a) 149352  -221.87 32 s
52832.0 135986.0 m
(graphics) 62392  0.00 -1 s
( operation. A value of ) 88134  70.00 32 s
2 sf
(:none ) 95651  70.00 32 s
4 sf
(for clip\036mask indicates that no clipping is to be) 149352  70.13 32 s
52832.0 139147.0 m
(done.) 59024  0.00 -1 s
52832.0 145423.0 m
(If) 54710  0.00 -1 s
( a pixmap is specified as the clip\036mask, it must have depth one and the same root as the) 149352  -215.56 32 s
52832.0 148584.0 m
(specified) 63018  0.00 -1 s
( graphics context. Pixels where the clip\036mask has a one bit are drawn. Pixels) 149352  3.46 32 s
52832.0 151745.0 m
(outside) 60984  0.00 -1 s
( the area covered by the clip\036mask or where the clip\036mask has) 130036  -70.00 32 s
( a zero bit are not) 149352  -70.60 32 s
52832.0 154906.0 m
(drawn.) 60589  0.00 -1 s
52832.0 161183.0 m
(If) 54710  0.00 -1 s
( a sequence of rectangles is specified as the clip\036mask, the output is clipped to remain) 149352  -127.53 32 s
52832.0 164344.0 m
(contained) 63803  0.00 -1 s
( within the rectangles. The rectangles should be non\036intersecting, or the) 141575  -295.00 32 s
( results) 149352  -296.00 32 s
52832.0 167505.0 m
(of) 55182  0.00 -1 s
( graphics operations will be undefined. The rectangle coordinates are interpreted rela\036) 149352  -229.64 32 s
52832.0 170665.0 m
(tive) 57064  0.00 -1 s
( to the clip origin. Note that the sequence of rectangles can be empty, which effec\036) 149352  -48.87 32 s
52832.0 173826.0 m
(tively) 59259  0.00 -1 s
( disables output. This is the opposite of setting the clip\036mask to ) 131023  -22.83 32 s
2 sf
(:none) 137764  0.00 -1 s
4 sf
(.) 138470  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03656) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10i 3 declareFont
3 sf
52832.0 22578.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
/timsps10 4 declareFont
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 27364.0 m
(gcontext\036background) 60253  0.00 -1 s
4 sf
( ) 60747  -212.00 32 s
3 sf
(gcontext) 70307  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 30525.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 33686.0 m
(  background) 67631  -47.00 32 s
( ) 68289  -48.00 32 s
4 sf
(\037 Type ) 78227  -47.50 32 s
2 sf
(card32) 86535  0.00 -1 s
4 sf
(.) 87241  0.00 -1 s
52832.0 38405.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73320  -146.00 32 s
2 sf
(setf) 77549  0.00 -1 s
4 sf
(\) changes the background attribute of the specified graphics con\036) 149352  -145.67 32 s
52832.0 41566.0 m
(text.) 57770  0.00 -1 s
52832.0 47842.0 m
(The) 57220  0.00 -1 s
( background attribute specifies the) 95770  -80.00 32 s
( pixel value drawn for pixels that are not set in a) 149352  -80.55 32 s
52832.0 51003.0 m
(bitmap) 60670  0.00 -1 s
( and for pixels that are cleared by) 96738  -232.00 32 s
( a graphics operation, such as the gaps in dashed) 149352  -232.56 32 s
52832.0 54164.0 m
(lines.) 58868  0.00 -1 s
3 sf
52832.0 60441.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 65227.0 m
(gcontext\036cache\036p) 54916  0.00 -1 s
4 sf
( ) 55464  -158.00 32 s
3 sf
(gcontext) 65024  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 68388.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 71549.0 m
(  cache\036p) 63097  -39.00 32 s
( ) 63763  -40.00 32 s
4 sf
(\037 Type ) 73717  -39.50 32 s
2 sf
(boolean) 83125  0.00 -1 s
4 sf
(.) 83831  0.00 -1 s
52832.0 76268.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 72930  -276.00 32 s
2 sf
(setf) 77159  0.00 -1 s
4 sf
(\) changes the local cache mode for the ) 118993  -275.75 32 s
3 sf
(gcontext) 128553  0.00 -1 s
4 sf
(. If true, the state of) 149352  -275.60 32 s
52832.0 79429.0 m
(the) 56280  0.00 -1 s
( ) 56719  -267.00 32 s
3 sf
(gcontext) 66279  0.00 -1 s
4 sf
( is cached by CLX and changes to its attributes have no effect unless the new) 149352  -266.67 32 s
52832.0 82590.0 m
(value) 58944  0.00 -1 s
( differs from its cached value.) 92501  -27.60 32 s
3 sf
52832.0 88866.0 m
(gcontext) 62392  0.00 -1 s
( ) 63054  -44.00 32 s
4 sf
(\037 A ) 69237  -44.00 32 s
2 sf
(gcontext) 79423  0.00 -1 s
4 sf
(.) 80129  0.00 -1 s
2 sf
34544.0 93653.0 m
(gcontext\036cap\036style) 56326  0.00 -1 s
( ) 56909  -123.00 32 s
3 sf
(gcontext) 66469  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 96814.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 99974.0 m
(  cap\036style ) 65073  -21.00 32 s
4 sf
(\037 One of ) 77001  -21.00 32 s
2 sf
(:butt) 82956  0.00 -1 s
4 sf
(, ) 84347  -21.00 32 s
2 sf
(:not\036last) 94376  0.00 -1 s
4 sf
(, ) 95767  -21.00 32 s
2 sf
(:projecting) 109087  0.00 -1 s
4 sf
(, or ) 113514  -20.50 32 s
2 sf
(:round) 121824  0.00 -1 s
4 sf
(.) 122530  0.00 -1 s
52832.0 104693.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73104  -218.00 32 s
2 sf
(setf) 77333  0.00 -1 s
4 sf
(\) changes the cap\036style attribute of the specified graphics context.) 149352  -217.56 32 s
52832.0 110699.0 m
(The) 57220  0.00 -1 s
( cap\036style attribute of a graphics context defines how the end points of a path are) 149352  76.40 32 s
52832.0 113860.0 m
(drawn.) 60589  0.00 -1 s
( The possible) 75589  -25.00 32 s
( values and their interpretations are as follows:) 128151  -25.57 32 s
2 sf
52832.0 120136.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
4 17 fillpatset
newpath
52832 119311 av
149352 119311 as
149352 119546 as
52832 119546 as
closepath
fp
/drawmode PL_SET def
52832.0 123297.0 m
(Cap\036Style) 64744  0.00 -1 s
79248.0 h
85344.0 h
(Interpretation) 102584  0.00 -1 s
52832.0 126458.0 m
79248.0 h
85344.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 125633 av
149352 125633 as
149352 125868 as
52832 125868 as
closepath
fp
/drawmode PL_SET def
52832.0 129619.0 m
(:butt) 58787  0.00 -1 s
4 sf
85344.0 h
(Square) 93180  0.00 -1 s
( at the end point \(perpendicular to the) 135368  -30.00 32 s
( slope of the) 149149  -30.67 32 s
85344.0 132780.0 m
(line\)) 90515  0.00 -1 s
( with no projection beyond.) 121468  -41.00 32 s
85344.0 135941.0 m
2 sf
52832.0 139102.0 m
(:not\036last) 62861  0.00 -1 s
4 sf
85344.0 h
(Equivalent) 97570  0.00 -1 s
( to ) 101127  -25.00 32 s
2 sf
(:butt) 107082  0.00 -1 s
4 sf
(, except that for a line\036width of zero) 147501  -24.57 32 s
85344.0 142263.0 m
(or one the final end point is not drawn.) 128964  -24.13 32 s
85344.0 145423.0 m
2 sf
52832.0 148584.0 m
(:projecting) 66152  0.00 -1 s
4 sf
85344.0 h
(Square) 93180  0.00 -1 s
( at the end, but the path continues  beyond the) 144633  -35.80 32 s
85344.0 151745.0 m
(end) 89419  0.00 -1 s
( point for a distance equal to half the line\036width. This) 149284  -24.80 32 s
85344.0 154906.0 m
(is) 87226  0.00 -1 s
( equivalent to ) 103231  -21.00 32 s
2 sf
(:butt) 109186  0.00 -1 s
4 sf
( for line\036width zero or one.) 139486  -20.80 32 s
85344.0 158067.0 m
2 sf
52832.0 161228.0 m
(:round) 61142  0.00 -1 s
4 sf
85344.0 h
(A circular arc with the radius equal to 1/2 of the) 139373  -20.00 32 s
85344.0 164389.0 m
(line\036width,) 97648  0.00 -1 s
( centered on the end point. This is equivalent) 148088  -33.88 32 s
85344.0 167550.0 m
(to) 87539  0.00 -1 s
( ) 88227  -18.00 32 s
2 sf
(:butt) 94182  0.00 -1 s
4 sf
( for line\036width) 110445  -18.00 32 s
( zero or one.) 124494  -18.67 32 s
52832.0 170711.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 169886 av
149352 169886 as
149352 170004 as
52832 170004 as
closepath
fp
/drawmode PL_SET def
52832.0 176919.0 m
(The) 57220  0.00 -1 s
( following table describes what happens when the end points of a line are identical.) 149352  -119.93 32 s
52832.0 180080.0 m
(The) 57220  0.00 -1 s
( effect) 64315  -32.00 32 s
( depends on both the cap style and line width.) 115598  -32.56 32 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
129506.0 8737.0 m
(Graphics Contexts) 146372  -36.00 32 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03655) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
52832.0 22578.0 m
(All) 56437  0.00 -1 s
( of) 59227  -266.00 32 s
( the graphics context components are set to the values that are specified by the key\036) 149352  -266.53 32 s
52832.0 25739.0 m
(word) 58630  0.00 -1 s
( arguments, except that a) 87029  66.00 32 s
( value of ) 97805  65.33 32 s
2 sf
(nil ) 101714  66.00 32 s
4 sf
(causes the default value to be used. These) 149352  65.43 32 s
52832.0 28900.0 m
(default) 60667  0.00 -1 s
( values are as 6.follows: ) 88460  -21.60 32 s
2 sf
52832.0 35176.0 m
83312.0 h
99568.0 h
123952.0 h
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
4 17 fillpatset
newpath
52832 34351 av
149352 34351 as
149352 34586 as
52832 34586 as
closepath
fp
/drawmode PL_SET def
52832.0 38337.0 m
(Component) 66940  0.00 -1 s
83312.0 h
(Default) 92244  0.00 -1 s
( Value) 99952  -52.00 32 s
52832.0 41498.0 m
83312.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 40673 av
149352 40673 as
149352 40908 as
52832 40908 as
closepath
fp
/drawmode PL_SET def
52832.0 44659.0 m
(arc\036mode) 64271  0.00 -1 s
4 sf
83312.0 h
2 sf
(:pie\036slice) 93968  0.00 -1 s
52832.0 47820.0 m
(background) 67416  0.00 -1 s
4 sf
83312.0 h
(1) 84723  0.00 -1 s
( ) 85412  -17.00 32 s
2 sf
52832.0 50981.0 m
(cap\036style) 63489  0.00 -1 s
4 sf
83312.0 h
2 sf
(:butt) 89267  0.00 -1 s
52832.0 54142.0 m
(clip\036mask) 64589  0.00 -1 s
4 sf
83312.0 h
2 sf
(:none) 90053  0.00 -1 s
52832.0 57302.0 m
(clip\036ordering) 68664  0.00 -1 s
4 sf
83312.0 h
2 sf
(:unsorted) 94912  0.00 -1 s
52832.0 60463.0 m
(clip\036x) 59572  0.00 -1 s
4 sf
83312.0 h
(0 ) 85412  -17.00 32 s
2 sf
52832.0 63624.0 m
(clip\036y) 59572  0.00 -1 s
4 sf
83312.0 h
(0 ) 85412  -17.00 32 s
2 sf
52832.0 66785.0 m
(dash\036offset) 65997  0.00 -1 s
4 sf
83312.0 h
(0 ) 85412  -17.00 32 s
2 sf
52832.0 69946.0 m
(dashes) 60830  0.00 -1 s
4 sf
83312.0 h
(4) 84723  0.00 -1 s
( \(that is, the list '\(4, 4\)\) ) 111579  -3.86 32 s
2 sf
52832.0 73107.0 m
(exposures) 64747  0.00 -1 s
4 sf
83312.0 h
2 sf
(:on) 87231  0.00 -1 s
52832.0 76268.0 m
(fill\036rule) 61921  0.00 -1 s
4 sf
83312.0 h
2 sf
(:even\036odd) 95225  0.00 -1 s
52832.0 79429.0 m
(fill\036style) 62547  0.00 -1 s
4 sf
83312.0 h
2 sf
(:solid) 89897  0.00 -1 s
52832.0 82590.0 m
(font) 57690  0.00 -1 s
4 sf
83312.0 h
(server) 90205  0.00 -1 s
( dependent) 102413  -96.00 32 s
2 sf
52832.0 85750.0 m
(foreground) 66470  0.00 -1 s
4 sf
83312.0 h
(0) 84723  0.00 -1 s
( ) 85412  -17.00 32 s
2 sf
52832.0 88911.0 m
(function) 62865  0.00 -1 s
4 sf
83312.0 h
2 sf
(boole\0361) 92090  0.00 -1 s
52832.0 92072.0 m
(join\036style) 63959  0.00 -1 s
4 sf
83312.0 h
2 sf
(:miter) 90830  0.00 -1 s
52832.0 95233.0 m
(line\036style) 63646  0.00 -1 s
4 sf
83312.0 h
2 sf
(:solid) 89897  0.00 -1 s
52832.0 98394.0 m
(line\036width) 65059  0.00 -1 s
4 sf
83312.0 h
(0 ) 85412  -17.00 32 s
2 sf
52832.0 101555.0 m
(plane\036mask) 66785  0.00 -1 s
4 sf
83312.0 h
(A) 85349  0.00 -1 s
( bit mask of all ones) 108089  -14.00 32 s
( ) 108780  -15.00 32 s
2 sf
52832.0 104716.0 m
(stipple) 60828  0.00 -1 s
4 sf
83312.0 h
(Pixmap) 91935  0.00 -1 s
( of unspecified size filled with ones) 131899  -27.00 32 s
52832.0 107877.0 m
2 sf
(subwindow\036mode) 73997  0.00 -1 s
4 sf
83312.0 h
2 sf
(:clip\036by\036children) 103533  0.00 -1 s
52832.0 111038.0 m
(tile) 56592  0.00 -1 s
4 sf
83312.0 h
(Pixmap of an unspecified size filled) 123700  -26.00 32 s
( with) 129397  -25.00 32 s
( the) 133525  -26.00 32 s
52832.0 114198.0 m
83312.0 h
(foreground) 95848  0.00 -1 s
( pixel \(that is, the client\036specified) 133482  -28.00 32 s
( pixel) 139802  -29.00 32 s
52832.0 117359.0 m
83312.0 h
(if) 85035  0.00 -1 s
( any, or else 0\)) 101676  -13.00 32 s
( ) 102368  -14.00 32 s
2 sf
52832.0 120520.0 m
(ts\036x) 57219  0.00 -1 s
4 sf
83312.0 h
(0) 84723  0.00 -1 s
( ) 85412  -17.00 32 s
2 sf
52832.0 123681.0 m
(ts\036y) 57219  0.00 -1 s
4 sf
83312.0 h
(0 ) 85412  -17.00 32 s
52832.0 126842.0 m
88392.0 h
99568.0 h
123952.0 h
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 126017 av
149352 126017 as
149352 126135 as
52832 126135 as
closepath
fp
/drawmode PL_SET def
52832.0 133051.0 m
(Note) 58317  0.00 -1 s
( that foreground and background) 95194  -28.00 32 s
( do not default to any values that are likely to be) 149352  -28.55 32 s
52832.0 136212.0 m
(useful) 59728  0.00 -1 s
( on a color display. Since specifying a ) 101481  -238.00 32 s
2 sf
(nil) 104618  0.00 -1 s
4 sf
( value means use the default, this) 140576  -238.00 32 s
( implies) 149352  -239.00 32 s
52832.0 139373.0 m
(for) 56121  0.00 -1 s
( clip\036mask that an empty rectangle sequence cannot be specified as an empty list;) 149352  124.23 32 s
52832.0 142534.0 m
2 sf
(:none) 59573  0.00 -1 s
4 sf
( must be used instead. Specifying a ) 99826  -27.57 32 s
2 sf
(stringable) 111897  0.00 -1 s
4 sf
( for font causes an implicit ) 142611  -27.50 32 s
2 sf
(open\036) 149352  0.00 -1 s
52832.0 145694.0 m
(font) 57690  0.00 -1 s
4 sf
( call to) 65319  -26.00 32 s
( occur.) 72971  -27.00 32 s
20320.0 152694.0 m
541.0 sw
0.0 0.0 m
newpath
20455 151070 av
148878 151068 as
[] 0 setdash
dp
149352.0 152694.0 m
/timsps12b 5 declareFont
5 sf
20320.0 156080.0 m
(Graphics) 33677  0.00 -1 s
( ) 34544  20.00 32 s
52832.0 h
2 sf
(5.3) 56360  0.00 -1 s
4 sf
() 56360  0.00 -1 s
58555.0 h
(The) 62943  0.00 -1 s
( following paragraphs describe the CLX functions used) 132789  1055.00 32 s
( to return or) 149352  1054.33 32 s
5 sf
20320.0 159467.0 m
(Context) 31791  0.00 -1 s
2 sf
52832.0 h
4 sf
(change) 60824  0.00 -1 s
( the attributes of a ) 86654  949.60 32 s
2 sf
(gcontext) 96840  0.00 -1 s
4 sf
(. Functions that return the) 130667  1187.00 32 s
( contents of a) 149352  1186.33 32 s
5 sf
20320.0 162854.0 m
(Attributes) 35176  0.00 -1 s
52832.0 h
2 sf
(gcontext) 63018  0.00 -1 s
4 sf
( return ) 74049  1441.00 32 s
2 sf
(nil) 77186  0.00 -1 s
4 sf
( if the last) 92717  1441.00 32 s
( value stored is unknown \(for example, if) 149352  1440.43 32 s
52832.0 166014.0 m
(the ) 56986  0.00 32 s
2 sf
(gcontext) 67172  0.00 -1 s
4 sf
( was not cached or if the ) 94434  -147.00 32 s
2 sf
(gcontext) 104620  0.00 -1 s
4 sf
( was not created by the inquiring client\).) 149352  -125.71 32 s
2 sf
34544.0 172291.0 m
(gcontext\036arc\036mode) 57108  0.00 -1 s
4 sf
( ) 57654  -160.00 32 s
/timsps10i 3 declareFont
3 sf
(gcontext) 67214  0.00 -1 s
2 sf
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 175452.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
3 sf
52832.0 178613.0 m
(  arc\036mode ) 65700  -21.00 32 s
4 sf
(\037 Either ) 76787  -21.00 32 s
2 sf
(:chord) 84781  0.00 -1 s
4 sf
( or) 87816  -21.00 32 s
( ) 88500  -22.00 32 s
2 sf
(:pie\036slice) 99156  0.00 -1 s
4 sf
(.) 99862  0.00 -1 s
52832.0 183332.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 72987  -257.00 32 s
2 sf
(setf) 77216  0.00 -1 s
4 sf
(\) changes the arc\036mode attribute of the specified graphics context.) 149352  -256.56 32 s
52832.0 189608.0 m
(The) 57220  0.00 -1 s
( arc\036mode attribute of a graphics context controls the kind of filling, if any, to be) 149352  76.20 32 s
52832.0 192769.0 m
(done) 58318  0.00 -1 s
( by the ) 66313  -131.00 32 s
2 sf
(draw\036arcs) 78537  0.00 -1 s
4 sf
( function. A value of ) 102022  -130.80 32 s
2 sf
(:chord) 110016  0.00 -1 s
4 sf
( specifies that arcs are filled inward) 149352  -130.50 32 s
52832.0 195930.0 m
(to) 55027  0.00 -1 s
( the chord between) 75961  -153.00 32 s
( the end points of the arc. ) 104199  -153.57 32 s
2 sf
(:pie\036slice ) 115408  -153.00 32 s
4 sf
(specifies that arcs are filled in\036) 149352  -153.60 32 s
52832.0 199091.0 m
(ward) 58472  0.00 -1 s
( to the center point of the arc,) 91539  -23.00 32 s
( creating a pie slice effect.) 121039  -23.60 32 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8737.0 m
(Graphics Contexts) 37186  -36.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(5\03654) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 4 declareFont
4 sf
20320.0 23300.0 m
0.0 0.0 m
newpath
20455 21676 av
148878 21674 as
[] 0 setdash
dp
149352.0 23300.0 m
/timsps12b 5 declareFont
5 sf
20320.0 26687.0 m
(Creating) 33108  0.00 -1 s
( ) 33980  25.00 32 s
52832.0 h
2 sf
(5.2) 56360  0.00 -1 s
58710.0 h
() 58710  0.00 -1 s
4 sf
(To) 61845  0.00 -1 s
( create a graphics context, use ) 96087  -52.83 32 s
2 sf
(create\036gcontext.) 115280  0.00 -1 s
117630.0 h
() 117630  0.00 -1 s
5 sf
20320.0 30074.0 m
(Graphics) 33677  0.00 -1 s
2 sf
52832.0 h
5 sf
20320.0 33460.0 m
(Contexts) 33108  0.00 -1 s
52832.0 h
2 sf
34544.0 39737.0 m
(create\036gcontext) 53031  0.00 -1 s
( ) 53678  -59.00 32 s
4 sf
(&key ) 60595  -59.00 32 s
2 sf
(:arc\036mode) 72973  0.00 -1 s
4 sf
( ) 73621  -58.00 32 s
2 sf
(:background) 89144  0.00 -1 s
4 sf
( \() 90730  -59.00 32 s
2 sf
(:cache\036p) 100916  0.00 -1 s
4 sf
( t\) ) 103934  -58.50 32 s
2 sf
(:cap\036style) 115530  0.00 -1 s
139373.0 h
4 sf
(Function) 149407  0.00 -1 s
52832.0 42898.0 m
2 sf
(:clip\036mask) 65528  0.00 -1 s
( :clip\036ordering :clip\036x :clip\036y :dash\036offset :dashes ) 124810  -20.67 32 s
52832.0 46059.0 m
(:drawable) 65058  0.00 -1 s
( :exposures :fill\036rule :fill\036style :font :foreground ) 123049  -25.83 32 s
52832.0 49220.0 m
(:function) 63804  0.00 -1 s
( :join\036style :line\036style) 89011  -12.00 32 s
( :line\036width :plane\036mask :stipple) 128084  -12.67 32 s
52832.0 52380.0 m
(:subwindow\036mode) 74936  0.00 -1 s
( :tile :ts\036x :ts\036y) 92388  -5.67 32 s
34544.0 55541.0 m
52832.0 h
4 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
/timsps10i 3 declareFont
3 sf
52832.0 58702.0 m
(  gcontext ) 64402  -36.00 32 s
4 sf
(\037 Type) 73693  -36.00 32 s
( ) 74362  -37.00 32 s
2 sf
(gcontext) 84548  0.00 -1 s
4 sf
(.) 85254  0.00 -1 s
52832.0 63421.0 m
(Creates,) 62000  0.00 -1 s
( initializes, and returns a graphics context \() 109275  -187.71 32 s
2 sf
(gcontext) 119461  0.00 -1 s
4 sf
(\). The graphics context can) 149352  -187.50 32 s
52832.0 66582.0 m
(only) 57849  0.00 -1 s
( be used with destination drawables having the) 109168  -204.00 32 s
( same root and depth as the specified) 149352  -204.57 32 s
52832.0 69743.0 m
2 sf
(:drawable) 65058  0.00 -1 s
4 sf
(.) 65764  0.00 -1 s
( If ) 69636  291.00 32 s
2 sf
(:cache\036p) 79822  0.00 -1 s
4 sf
( is non\036) 88870  291.00 32 s
2 sf
(nil) 92007  0.00 -1 s
4 sf
(, the graphics context state is cached locally,) 144281  291.00 32 s
( and) 149352  290.00 32 s
52832.0 72904.0 m
(changing) 63177  0.00 -1 s
( a component has no effect unless the new value differs from the cached value.) 149352  -197.86 32 s
52832.0 76065.0 m
(Changes) 62551  0.00 -1 s
( to a graphics context \() 87865  -94.00 32 s
2 sf
(setf) 92094  0.00 -1 s
4 sf
( and ) 97393  -94.00 32 s
2 sf
(with\036gcontext) 113847  0.00 -1 s
4 sf
(\) are always deferred regardless) 149352  -94.00 32 s
52832.0 79225.0 m
(of) 55182  0.00 -1 s
( the) 59091  -245.00 32 s
( cache mode and sent to the server only when required by a local operation or by an) 149352  -245.53 32 s
52832.0 82386.0 m
(explicit) 61296  0.00 -1 s
( call to) 68855  -61.00 32 s
( ) 69499  -62.00 32 s
2 sf
(force\036gcontext\036changes) 97236  0.00 -1 s
4 sf
(.) 97942  0.00 -1 s
2 sf
52832.0 88663.0 m
(:cache\036p) 63018  0.00 -1 s
( ) 63705  -19.00 32 s
4 sf
(\037) 66527  0.00 -1 s
( Specifies if this graphics context should be cached locally by CLX. If ) 146215  -19.54 32 s
2 sf
(nil) 149352  0.00 -1 s
4 sf
57912.0 91824.0 m
(then) 62771  0.00 -1 s
( the state is not cached, otherwise a local cache is kept. ) 125149  -26.67 32 s
2 sf
52832.0 98100.0 m
(:drawable) 65058  0.00 -1 s
( ) 65582  -182.00 32 s
4 sf
(\037 The ) 73840  -182.00 32 s
2 sf
(drawable) 85127  0.00 -1 s
4 sf
( whose root and depth are to be associated with this graph\036) 149352  -181.82 32 s
57912.0 101261.0 m
(ics) 61047  0.00 -1 s
( context. This is a required keyword) 101530  -32.00 32 s
( argument.) 113566  -33.00 32 s
2 sf
52832.0 107538.0 m
(:arc\036mode) 65210  0.00 -1 s
4 sf
(,) 65916  0.00 -1 s
( ) 67125  503.00 32 s
2 sf
(:background) 82648  0.00 -1 s
4 sf
(, ) 84563  503.00 32 s
2 sf
(:cap\036style) 96159  0.00 -1 s
4 sf
(, ) 98075  504.00 32 s
2 sf
(:clip\036mask) 110771  0.00 -1 s
4 sf
(, ) 112686  503.00 32 s
2 sf
(:clip\036ordering) 129457  0.00 -1 s
4 sf
(, ) 131373  504.00 32 s
2 sf
(:clip\036x) 139052  0.00 -1 s
4 sf
(, ) 140967  503.00 32 s
2 sf
(:clip\036y) 148646  0.00 -1 s
4 sf
(,) 149352  0.00 -1 s
57912.0 110699.0 m
2 sf
(:dash\036offset) 72016  0.00 -1 s
4 sf
(,) 72722  0.00 -1 s
( ) 74313  885.00 32 s
2 sf
(:dashes) 83250  0.00 -1 s
4 sf
(, ) 85547  885.00 32 s
2 sf
(:exposures) 98401  0.00 -1 s
4 sf
(, ) 100698  885.00 32 s
2 sf
(:fill\036rule) 110726  0.00 -1 s
4 sf
(, ) 113023  885.00 32 s
2 sf
(:fill\036style) 123677  0.00 -1 s
4 sf
(, ) 125975  886.00 32 s
2 sf
(:font) 131772  0.00 -1 s
4 sf
(, ) 134069  885.00 32 s
2 sf
(:foreground) 148646  0.00 -1 s
4 sf
(,) 149352  0.00 -1 s
57912.0 113860.0 m
2 sf
(:function) 68884  0.00 -1 s
4 sf
(,) 69590  0.00 -1 s
( ) 70409  113.00 32 s
2 sf
(:join\036style) 82475  0.00 -1 s
4 sf
(, ) 84000  113.00 32 s
2 sf
(:line\036style) 95753  0.00 -1 s
4 sf
(, ) 97279  114.00 32 s
2 sf
(:line\036width) 110445  0.00 -1 s
4 sf
(, ) 111970  113.00 32 s
2 sf
(:plane\036mask) 126862  0.00 -1 s
4 sf
(, ) 128388  114.00 32 s
2 sf
(:stipple) 137323  0.00 -1 s
4 sf
(, ) 138848  113.00 32 s
2 sf
(:subwin\036) 149352  0.00 -1 s
57912.0 117021.0 m
(dow\036mode) 70451  0.00 -1 s
4 sf
(,) 71157  0.00 -1 s
( ) 71846  -17.00 32 s
2 sf
(:tile) 76545  0.00 -1 s
4 sf
(, ) 77940  -17.00 32 s
2 sf
(:ts\036x) 83266  0.00 -1 s
4 sf
(, ) 84661  -17.00 32 s
2 sf
(:ts\036y ) 90676  -17.00 32 s
4 sf
(\037 Initial attribute values for) 122895  -17.00 32 s
( the graphics context.) 146981  -17.67 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(5\03653) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 7 declareFont
7 sf
20410.0 39376.0 m
59898.0 39466.0 m
(GRAPHICS CONTEXTS) 115846  -68.00 32 s
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
143157 39315 av
136768 39315 as
134030 37028 as
134030 34740 as
138137 34740 as
138137 36265 as
141788 36265 as
141788 32452 as
135399 32452 as
134030 31308 as
134030 23300 as
145438 23300 as
145438 26351 as
138137 26351 as
138137 29401 as
143157 29401 as
145895 31689 as
145895 37028 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
133118 43891 av
133118 43891 as
newpath
133118 23300 av
133118 23300 as
newpath
146807 23300 av
146807 23300 as
newpath
146807 43891 av
146807 43891 as
149351.0 39376.0 m
7 sf
/timsps10 4 declareFont
4 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 5 declareFont
5 sf
20320.0 46871.0 m
(Introduction) 38756  0.00 -1 s
52832.0 h
2 sf
(5.1) 56360  0.00 -1 s
4 sf
() 56360  0.00 -1 s
58555.0 h
(Clients) 66551  0.00 -1 s
( of the X Window System specify the visual attributes) 127283  -36.00 32 s
( of graphical output) 149352  -36.67 32 s
52832.0 50032.0 m
(primitives) 64275  0.00 -1 s
( by using ) 75031  -99.67 32 s
/timsps10i 3 declareFont
3 sf
(graphics contexts) 94762  -99.00 32 s
4 sf
(. A graphics context is a set of graphical attribute) 149352  -99.56 32 s
52832.0 53193.0 m
(values) 60042  0.00 -1 s
( such as) 68556  -211.00 32 s
( foreground color, font, line style, and so forth. Like a window, a graphics) 149352  -211.54 32 s
52832.0 56354.0 m
(context) 61139  0.00 -1 s
( is another kind of X server resource which is created and maintained at the re\036) 149352  -48.60 32 s
52832.0 59515.0 m
(quest) 58789  0.00 -1 s
( of a client program. The client program, which may use several different graphics) 149352  -188.85 32 s
52832.0 62676.0 m
(contexts) 62237  0.00 -1 s
( at different times, is responsible for specifying a graphics context to use with) 149352  -38.85 32 s
52832.0 65837.0 m
(each) 58002  0.00 -1 s
( graphical output) 77005  -60.00 32 s
( function.) 87760  -61.00 32 s
52832.0 72113.0 m
(CLX) 58475  0.00 -1 s
( represents a graphics context by an object of type ) 114636  -104.90 32 s
2 sf
(gcontext) 124822  0.00 -1 s
4 sf
( and defines functions) 149352  -104.67 32 s
52832.0 75274.0 m
(to) 55027  0.00 -1 s
( create, modify, and manipulate ) 91585  23.20 32 s
2 sf
(gcontext) 101771  0.00 -1 s
4 sf
( objects. By default, CLX also records the) 149352  23.43 32 s
52832.0 78435.0 m
(contents) 62237  0.00 -1 s
( of graphics contexts in a cache associated with each display. This local caching) 149352  -243.77 32 s
52832.0 81596.0 m
(of) 55182  0.00 -1 s
( graphics contexts has two important advantages:) 110450  -36.83 32 s
52832.0 87873.0 m
(1.) 54949  0.00 -1 s
57912.0 h
(Communication) 76097  0.00 -1 s
( efficiency \037 Changes to attribute values in a ) 129540  112.44 32 s
2 sf
(gcontext) 139726  0.00 -1 s
4 sf
( are first) 149352  112.50 32 s
57912.0 91034.0 m
(made) 64024  0.00 -1 s
( only in the local cache. Just before a ) 103919  -287.00 32 s
2 sf
(gcontext) 114105  0.00 -1 s
4 sf
( is actually used, CLX automati\036) 149352  -286.80 32 s
57912.0 94194.0 m
(cally) 63397  0.00 -1 s
( sends any changes to the X server, batching all changes into a single request.) 149352  -108.00 32 s
52832.0 100471.0 m
(2.) 54949  0.00 -1 s
57912.0 h
(Inquiring) 68413  0.00 -1 s
( ) 69033  -86.00 32 s
2 sf
(gcontext) 79219  0.00 -1 s
4 sf
( contents \037 Accessor functions) 114770  -86.00 32 s
( can be used to return the value) 149352  -86.57 32 s
57912.0 103632.0 m
(of) 60262  0.00 -1 s
( any individual ) 77098  -267.00 32 s
2 sf
(gcontext) 87284  0.00 -1 s
4 sf
( component by reading the copy of the ) 129355  -266.63 32 s
2 sf
(gcontext) 139541  0.00 -1 s
4 sf
( from the) 149352  -266.50 32 s
57912.0 106793.0 m
(cache.) 65041  0.00 -1 s
( This kind of inquiry is not supported by the basic X protocol. There) 138644  -271.00 32 s
( is no way) 149352  -271.67 32 s
57912.0 109954.0 m
(for) 61201  0.00 -1 s
( a client program to request an X server) 105692  -22.00 32 s
( to return the contents of a ) 135864  -22.57 32 s
2 sf
(gcontext) 146050  0.00 -1 s
4 sf
(.) 146756  0.00 -1 s
52832.0 116230.0 m
(Caching) 62237  0.00 -1 s
( graphics contexts can result) 93504  -177.00 32 s
( in a synchronization problem if more than one cli\036) 149352  -177.56 32 s
52832.0 119391.0 m
(ent) 56280  0.00 -1 s
( program modifies a graphics context. However, this problem is unusual. Sharing a) 149352  -48.83 32 s
52832.0 122552.0 m
(graphics) 62392  0.00 -1 s
( context among several clients, while possible, is not expected to be useful and) 149352  -141.69 32 s
52832.0 125713.0 m
(is) 54714  0.00 -1 s
( not very easy to do. At any rate, a client program can choose to not cache a ) 139166  -97.61 32 s
2 sf
(gcontext) 149352  0.00 -1 s
4 sf
52832.0 128874.0 m
(when) 58944  0.00 -1 s
( it is created.) 73287  -25.67 32 s
52832.0 135151.0 m
(Each) 58473  0.00 -1 s
( client program must determine) 93092  -201.00 32 s
( its own policy for creating and using graphics con\036) 149352  -201.56 32 s
52832.0 138311.0 m
(texts.) 58868  0.00 -1 s
( Depending on the display hardware and the server implementation, creating a new) 149352  -263.75 32 s
52832.0 141472.0 m
(graphics) 62392  0.00 -1 s
( context can be more or) 88303  -131.00 32 s
( less expensive than modifying an existing one. In gen\036) 149352  -131.56 32 s
52832.0 144633.0 m
(eral,) 57767  0.00 -1 s
( some amount of graphics context information can be) 118133  22.00 32 s
( cached in the display hard\036) 149352  21.40 32 s
52832.0 147794.0 m
(ware,) 59020  0.00 -1 s
( in which case modifying the hardware cache is faster than replacing it. Typical) 149352  52.46 32 s
52832.0 150955.0 m
(display) 60984  0.00 -1 s
( hardware can cache only a small number of graphics contexts. Graphics output is) 149352  -303.92 32 s
52832.0 154116.0 m
(fastest) 60041  0.00 -1 s
( when only a few graphics contexts are used without heavy) 126336  -32.00 32 s
( modifications.) 143233  -33.00 32 s
52832.0 160393.0 m
(This) 57849  0.00 -1 s
( section explains the CLX functions used to:) 107741  -27.71 32 s
/symbb8 8 declareFont
8 sf
52832.0 166940.0 m
(\267) 53872  0.00 -1 s
57912.0 h
4 sf
(Create) 65276  0.00 -1 s
( a graphics context) 86383  -43.67 32 s
8 sf
52832.0 173488.0 m
(\267) 53872  0.00 -1 s
57912.0 h
4 sf
(Return) 65592  0.00 -1 s
( the contents of a graphics context) 103948  -33.83 32 s
8 sf
52832.0 180035.0 m
(\267) 53872  0.00 -1 s
57912.0 h
4 sf
(Change) 66533  0.00 -1 s
( the contents of a graphics) 95879  -40.00 32 s
( context) 104851  -41.00 32 s
8 sf
52832.0 186583.0 m
(\267) 53872  0.00 -1 s
57912.0 h
4 sf
(Copy) 64027  0.00 -1 s
( a graphics context) 85118  -49.00 32 s
8 sf
52832.0 193130.0 m
(\267) 53872  0.00 -1 s
57912.0 h
4 sf
(Free) 62926  0.00 -1 s
( a graphics) 75065  -43.00 32 s
( context) 84034  -44.00 32 s
eop
initialstate restore
