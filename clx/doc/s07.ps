%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 8 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps10i /ILtimsi 10 map
	/timsps8i /ILtimsi 8 map
	/timsps18b /ILtimsb 18 map
	/timsps10b /ILtimsb 10 map
	/timsps12b /ILtimsb 12 map
	/symbb8 /ILsymbb 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 8 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Images) 26852  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(7\03688) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
52832.0 22578.0 m
(:width) 60669  0.00 -1 s
/timsps10 3 declareFont
3 sf
(, ) 62078  -3.00 32 s
2 sf
(:height) 70542  0.00 -1 s
3 sf
( \037 ) 74770  -3.00 32 s
2 sf
(card16) 83078  0.00 -1 s
3 sf
( values defining the size of the image returned.These argu\036) 149352  -2.56 32 s
57912.0 25739.0 m
(ments) 64653  0.00 -1 s
( are required.) 79563  -27.00 32 s
( ) 80241  -28.00 32 s
2 sf
52832.0 30525.0 m
(:plane\036mask) 67724  0.00 -1 s
3 sf
( \037 A pixel mask.) 87602  -27.75 32 s
2 sf
52832.0 35312.0 m
(:format) 62074  0.00 -1 s
3 sf
( \037 Either ) 73819  -30.00 32 s
2 sf
(:xy-pixmap) 88085  0.00 -1 s
3 sf
( or ) 91787  -30.00 32 s
2 sf
(:z-pixmap) 104484  0.00 -1 s
3 sf
(. This argument is required.) 135557  -30.00 32 s
2 sf
52832.0 40098.0 m
(:result\036type) 66778  0.00 -1 s
3 sf
( \037 The type of image data sequence to) 110732  -31.00 32 s
( return.) 118849  -32.00 32 s
2 sf
34544.0 44885.0 m
(put\036raw\036image) 52409  0.00 -1 s
3 sf
( ) 53086  -29.00 32 s
/timsps10i 4 declareFont
4 sf
(drawable gcontext data ) 80355  -29.00 32 s
3 sf
(&key \() 88241  -29.00 32 s
2 sf
(:start) 94820  0.00 -1 s
3 sf
( 0\) ) 98524  -29.00 32 s
2 sf
(:depth :x :y) 112416  -29.00 32 s
( ) 113092  -30.00 32 s
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 48046.0 m
2 sf
(:width) 60669  0.00 -1 s
( :height) 69827  -12.00 32 s
3 sf
( \() 71460  -12.00 32 s
2 sf
(:left\036pad) 81802  0.00 -1 s
3 sf
( 0\) ) 85540  -12.00 32 s
2 sf
(:format) 94782  0.00 -1 s
3 sf
52832.0 52764.0 m
(Displays) 62708  0.00 -1 s
( a region of the) 78988  -201.00 32 s
( image data defined by ) 104391  -201.60 32 s
2 sf
(:start) 110970  0.00 -1 s
3 sf
(, ) 112181  -201.00 32 s
2 sf
(:left\036pad) 122523  0.00 -1 s
3 sf
(, ) 123733  -202.00 32 s
2 sf
(:width,) 132276  0.00 -1 s
3 sf
( and ) 137562  -100.50 32 s
2 sf
(:height) 146026  0.00 -1 s
3 sf
( on) 149352  -202.00 32 s
52832.0 55925.0 m
(the) 56280  0.00 -1 s
( destination ) 69860  -108.00 32 s
4 sf
(drawable) 80521  0.00 -1 s
3 sf
(, with the upper\036left pixel of the image region displayed at the) 149352  -97.82 32 s
52832.0 59086.0 m
4 sf
(drawable) 63493  0.00 -1 s
3 sf
( position) 73266  -27.00 32 s
( given by ) 84393  -27.67 32 s
2 sf
(:x) 86743  0.00 -1 s
3 sf
( and ) 92175  -27.50 32 s
2 sf
(:y) 94525  0.00 -1 s
3 sf
(.  ) 96588  -27.50 32 s
52832.0 65363.0 m
(The) 57220  0.00 -1 s
( ) 57945  19.00 32 s
2 sf
(:format) 67187  0.00 -1 s
3 sf
( can be either ) 83092  19.00 32 s
2 sf
(:xy\036pixmap) 96886  0.00 -1 s
3 sf
(, ) 98318  20.00 32 s
2 sf
(:z\036pixmap) 110543  0.00 -1 s
3 sf
(, or ) 115050  19.50 32 s
2 sf
(:bitmap) 124611  0.00 -1 s
3 sf
(. If ) 128646  19.50 32 s
2 sf
(:xy\036pixmap) 142440  0.00 -1 s
3 sf
( or ) 146221  9.50 32 s
2 sf
(:z\036) 149352  0.00 -1 s
52832.0 68524.0 m
(pixmap) 61926  0.00 -1 s
3 sf
( formats are used, ) 81658  -258.75 32 s
2 sf
(:depth) 89496  0.00 -1 s
3 sf
( must match the depth of the destination ) 133619  -226.13 32 s
4 sf
(drawable) 144280  0.00 -1 s
3 sf
(. For) 149352  -259.00 32 s
52832.0 71684.0 m
2 sf
(:xy\036pixmap) 66626  0.00 -1 s
3 sf
(,) 67332  0.00 -1 s
( the data must be) 86093  -91.00 32 s
( in XY format. For ) 107672  -73.20 32 s
2 sf
(:z\036pixmap) 119897  0.00 -1 s
3 sf
(, the data must be in Z for\036) 149352  -91.57 32 s
52832.0 74845.0 m
(mat) 57064  0.00 -1 s
( for) 61031  -28.00 32 s
( the given ) 72781  -28.67 32 s
2 sf
(:depth) 80619  0.00 -1 s
3 sf
(.) 81325  0.00 -1 s
52832.0 81122.0 m
(If) 54710  0.00 -1 s
( the ) 59056  -257.00 32 s
2 sf
(:format) 68298  0.00 -1 s
3 sf
( is ) 71078  -257.00 32 s
2 sf
(:bitmap) 80639  0.00 -1 s
3 sf
(, the ) 85691  -257.00 32 s
2 sf
(:depth) 93529  0.00 -1 s
3 sf
( must be 1. In this) 112470  -257.00 32 s
( case, the image is combined with) 149352  -214.67 32 s
52832.0 84283.0 m
(the) 56280  0.00 -1 s
( foreground and background pixels of) 98124  -142.00 32 s
( the ) 102699  -142.50 32 s
4 sf
(gcontext) 112259  0.00 -1 s
3 sf
(. 1 bits of the image are displayed) 149352  -142.57 32 s
52832.0 87444.0 m
(in) 55027  0.00 -1 s
( the foreground pixel and) 83409  -36.00 32 s
( 0 bits are displayed in the background pixel.) 133864  -32.00 32 s
52832.0 93720.0 m
(The) 57220  0.00 -1 s
( ) 58016  90.00 32 s
2 sf
(:left\036pad) 68358  0.00 -1 s
3 sf
( must be zero for ) 88635  90.00 32 s
2 sf
(:z\036pixmap) 100860  0.00 -1 s
3 sf
( format. For ) 115395  90.33 32 s
2 sf
(:bitmap) 124956  0.00 -1 s
3 sf
( and ) 130624  90.50 32 s
2 sf
(:xy\036pixmap) 144418  0.00 -1 s
3 sf
( for\036) 149352  0.00 32 s
52832.0 96881.0 m
(mats,) 58868  0.00 -1 s
( the ) 63166  -281.00 32 s
2 sf
(:left\036pad) 73508  0.00 -1 s
3 sf
( must be) 82510  -281.00 32 s
( less than the bitmap\036scanline\036pad for the ) 128078  -241.29 32 s
4 sf
(drawable) 138739  0.00 -1 s
3 sf
('s display) 149352  -282.00 32 s
52832.0 100042.0 m
(\(see) 57375  0.00 -1 s
( ) 58257  176.00 32 s
2 sf
(display\036bitmap\036format) 85686  0.00 -1 s
3 sf
(\). The first ) 98909  176.00 32 s
2 sf
(:left\036pad) 109251  0.00 -1 s
3 sf
( bits in every) 124260  117.33 32 s
( scanline are to be ig\036) 149352  175.40 32 s
52832.0 103203.0 m
(nored) 59257  0.00 -1 s
( by the server; the actual image begins that many bits into the data. ) 134993  -26.36 32 s
52832.0 109480.0 m
(The) 57220  0.00 -1 s
( following attributes of the ) 86601  -284.00 32 s
4 sf
(gcontext) 96161  0.00 -1 s
3 sf
( are used to display the ) 121109  -283.50 32 s
2 sf
(image) 128318  0.00 -1 s
3 sf
(: clip\036mask, clip\036x,) 149352  -142.00 32 s
52832.0 112641.0 m
(clip\036y,) 60120  0.00 -1 s
( function, plane\036mask, and) 89945  -64.00 32 s
( subwindow\036mode.) 111512  -65.00 32 s
52832.0 118917.0 m
(The) 57220  0.00 -1 s
( calling program is responsible for handling the byte\036order and bit\036order required by) 149352  -237.25 32 s
52832.0 122078.0 m
(the) 56280  0.00 -1 s
( server for the ) 72286  -112.00 32 s
4 sf
(drawable) 82947  0.00 -1 s
3 sf
('s display) 93730  -112.00 32 s
( \(see ) 99460  -112.50 32 s
2 sf
(display\036byte\036order) 121875  0.00 -1 s
3 sf
( and ) 127249  -56.50 32 s
2 sf
(display\036image\036lsb\036) 149352  0.00 -1 s
52832.0 125239.0 m
(first\036p) 60353  0.00 -1 s
3 sf
(\).) 61998  0.00 -1 s
4 sf
52832.0 131516.0 m
(drawable) 63493  0.00 -1 s
3 sf
( \037) 66969  -52.00 32 s
( The destination ) 85701  -52.67 32 s
2 sf
(drawable) 96988  0.00 -1 s
3 sf
(.) 97694  0.00 -1 s
4 sf
52832.0 136302.0 m
(gcontext) 62392  0.00 -1 s
3 sf
( \037 The graphics context used to display the image.) 120069  -36.00 32 s
4 sf
52832.0 141089.0 m
(data) 57849  0.00 -1 s
3 sf
( \037 A sequence of integers.) 88415  -31.00 32 s
2 sf
52832.0 145875.0 m
(:start) 59411  0.00 -1 s
3 sf
( \037 The index) 74946  -21.00 32 s
( of the first element of ) 100678  -21.50 32 s
4 sf
(data) 105695  0.00 -1 s
3 sf
( displayed.) 117901  -22.00 32 s
2 sf
52832.0 150662.0 m
(:depth) 60670  0.00 -1 s
( ) 61349  -27.00 32 s
3 sf
(\037 The number of bits per pixel displayed. This argument is required.) 139508  -26.82 32 s
2 sf
52832.0 155448.0 m
(:x) 55182  0.00 -1 s
3 sf
(,) 55888  0.00 -1 s
( ) 56419  -175.00 32 s
2 sf
(:y) 58769  0.00 -1 s
3 sf
( \037 The position in the ) 83902  -175.00 32 s
4 sf
(drawable) 94563  0.00 -1 s
3 sf
( where the image region is displayed. These) 142869  -175.00 32 s
( argu\036) 149352  -176.00 32 s
57912.0 158609.0 m
(ments) 64653  0.00 -1 s
( are) 68767  -37.00 32 s
( required.) 79542  -38.00 32 s
2 sf
52832.0 163395.0 m
(:width) 60669  0.00 -1 s
3 sf
(,) 61375  0.00 -1 s
( ) 61819  -262.00 32 s
2 sf
(:height) 70283  0.00 -1 s
3 sf
( \037 ) 73993  -262.00 32 s
2 sf
(card16) 82301  0.00 -1 s
3 sf
( values defining the size of) 111321  -262.00 32 s
( the image region displayed. These) 149352  -262.60 32 s
57912.0 166556.0 m
(arguments) 69667  0.00 -1 s
( are required.) 84531  -50.00 32 s
2 sf
52832.0 171343.0 m
(:left\036pad) 63174  0.00 -1 s
3 sf
( \037 A ) 70211  20.00 32 s
2 sf
(card8) 77108  0.00 -1 s
3 sf
( specifying the number of leading bits to discard for each image) 149352  20.18 32 s
57912.0 174504.0 m
(scanline.) 67865  0.00 -1 s
2 sf
52832.0 179290.0 m
(:format) 62074  0.00 -1 s
3 sf
( \037 One of ) 74664  -26.75 32 s
2 sf
(:bitmap) 84225  0.00 -1 s
3 sf
(, ) 85610  -27.00 32 s
2 sf
(:xy\036pixmap) 99404  0.00 -1 s
3 sf
(, or ) 103819  -26.50 32 s
2 sf
(:z\036pixmap) 116044  0.00 -1 s
3 sf
(.) 116750  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
142511.0 8195.0 m
(Images) 149043  0.00 -1 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(7\03687) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 3 declareFont
3 sf
20320.0 23300.0 m
0.0 0.0 m
newpath
20455 21676 av
149013 21674 as
[] 0 setdash
dp
149352.0 23300.0 m
/timsps12b 5 declareFont
5 sf
20320.0 26687.0 m
(Image Files) 37005  41.00 32 s
52832.0 h
2 sf
(7.4) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(CLX) 64198  0.00 -1 s
( provides functions that allow images to) 109644  50.00 32 s
( be written to a file in a standard X) 149352  49.44 32 s
52832.0 29848.0 m
(format.) 61059  0.00 -1 s
( The following paragraphs describe the CLX functions used to:) 132012  -31.89 32 s
/symbb8 6 declareFont
6 sf
52832.0 36395.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Read) 63711  0.00 -1 s
( an image from a) 82728  -26.00 32 s
( file.) 87873  -27.00 32 s
6 sf
52832.0 42943.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Write) 64336  0.00 -1 s
( an image to a) 80100  -17.00 32 s
( file.) 85254  -18.00 32 s
2 sf
34544.0 49220.0 m
(read\036bitmap\036file) 54290  0.00 -1 s
3 sf
( ) 54939  -57.00 32 s
/timsps10i 4 declareFont
4 sf
(pathname) 66068  0.00 -1 s
3 sf
( ) 66717  -57.00 32 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 52380.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
52832.0 55541.0 m
( ) 53510  -28.00 32 s
4 sf
(image) 60406  0.00 -1 s
3 sf
( \037 Type ) 71061  -28.00 32 s
2 sf
(image) 78270  0.00 -1 s
3 sf
(. ) 79654  -28.00 32 s
52832.0 60260.0 m
(Reads) 59729  0.00 -1 s
( an image file in standard X format and returns an ) 114843  -169.00 32 s
2 sf
(image) 122052  0.00 -1 s
3 sf
( object. The returned ) 145592  -168.75 32 s
4 sf
(im\036) 149352  0.00 -1 s
52832.0 63421.0 m
(age) 56907  0.00 -1 s
3 sf
( can have depth greater than one.) 93856  -45.67 32 s
4 sf
52832.0 69698.0 m
(pathname) 63961  0.00 -1 s
3 sf
( \037 An image) 79140  -35.00 32 s
( file pathname.) 95918  -35.50 32 s
4 sf
( ) 96588  -36.00 32 s
2 sf
34544.0 74484.0 m
(write\036bitmap\036file) 55070  0.00 -1 s
3 sf
( ) 55725  -51.00 32 s
4 sf
(pathname) 66854  0.00 -1 s
( image) 74404  -52.00 32 s
3 sf
( &optional ) 87157  -51.50 32 s
4 sf
(name) 93269  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 79203.0 m
(Writes) 60354  0.00 -1 s
( the ) 65712  249.00 32 s
4 sf
(image) 72608  0.00 -1 s
3 sf
( to an image file in standard) 105608  249.00 32 s
( X format. The ) 124078  248.50 32 s
4 sf
(image) 130974  0.00 -1 s
3 sf
( can have depth) 149352  248.33 32 s
52832.0 82364.0 m
(greater) 60664  0.00 -1 s
( than one. The ) 77020  -124.00 32 s
4 sf
(name) 83132  0.00 -1 s
3 sf
( is an image identifier written) 115818  -124.00 32 s
( to the file; the default ) 140777  -124.50 32 s
4 sf
(name) 146889  0.00 -1 s
3 sf
( is) 149352  -125.00 32 s
52832.0 85525.0 m
(\() 53771  0.00 -1 s
2 sf
(or) 56435  0.00 -1 s
3 sf
( \() 58041  -39.00 32 s
2 sf
(image\036name) 72772  0.00 -1 s
3 sf
( ) 73439  -39.00 32 s
4 sf
(image) 80335  0.00 -1 s
3 sf
(\)) 81274  0.00 -1 s
2 sf
( 'image) 90089  -39.00 32 s
3 sf
(\).) 91734  0.00 -1 s
4 sf
52832.0 91801.0 m
(pathname) 63961  0.00 -1 s
3 sf
( \037 An image file) 83547  -41.00 32 s
( pathname.) 95888  -42.00 32 s
4 sf
52832.0 96588.0 m
(image) 59728  0.00 -1 s
3 sf
( \037 An ) 68011  -35.00 32 s
2 sf
(image) 75220  0.00 -1 s
3 sf
( object.) 83493  -35.00 32 s
4 sf
52832.0 101374.0 m
(name) 58944  0.00 -1 s
3 sf
( \037 A ) 65808  -37.67 32 s
2 sf
(stringable) 77879  0.00 -1 s
3 sf
( image name.) 92930  -37.50 32 s
20320.0 106883.0 m
0.0 0.0 m
newpath
20455 105259 av
149013 105257 as
[] 0 setdash
dp
149352.0 106883.0 m
5 sf
20320.0 110270.0 m
(Direct) 29342  0.00 -1 s
( Image) 39245  30.00 32 s
( ) 40121  29.00 32 s
52832.0 h
2 sf
(7.5) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(For) 62474  0.00 -1 s
( cases where the ) 81446  -37.00 32 s
2 sf
(image) 88655  0.00 -1 s
3 sf
( representation is not needed, CLX) 127813  -37.00 32 s
( provides) 138199  -38.00 32 s
5 sf
20320.0 113657.0 m
(Transfer) 33108  0.00 -1 s
52832.0 h
3 sf
(functions) 63334  0.00 -1 s
( to read and display image data directly.) 108238  -34.00 32 s
2 sf
34544.0 119933.0 m
(get\036raw\036image) 51935  0.00 -1 s
3 sf
( ) 52617  -24.00 32 s
4 sf
(drawable ) 63960  -24.00 32 s
3 sf
(&key ) 70912  -24.00 32 s
2 sf
(:data) 77181  0.00 -1 s
3 sf
( \() 78802  -24.00 32 s
2 sf
(:start) 85381  0.00 -1 s
3 sf
( 0\)) 88413  -24.00 32 s
2 sf
( :x :y :width :height) 112144  -23.50 32 s
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 123094.0 m
2 sf
(:plane\036mask) 67724  0.00 -1 s
( ) 68403  -27.00 32 s
3 sf
(\() 69342  0.00 -1 s
2 sf
(:format) 78584  0.00 -1 s
3 sf
( ) 79263  -27.00 32 s
2 sf
(:z\036format) 90697  0.00 -1 s
3 sf
(\)) 91636  0.00 -1 s
( \() 93253  -28.00 32 s
2 sf
(:result\036type) 107199  0.00 -1 s
3 sf
( ) 107878  -27.00 32 s
2 sf
(') 108817  0.00 -1 s
3 sf
(\() 109756  0.00 -1 s
2 sf
(vector) 117276  0.00 -1 s
3 sf
( ) 117954  -28.00 32 s
2 sf
(card8) 124851  0.00 -1 s
3 sf
(\)\)) 126729  0.00 -1 s
2 sf
34544.0 127813.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
52832.0 130974.0 m
54864.0 h
4 sf
(data) 59881  0.00 -1 s
3 sf
( \037 Type ) 70480  -46.67 32 s
2 sf
(sequence) 81297  0.00 -1 s
3 sf
( or ) 84966  -46.50 32 s
2 sf
(card8) 91863  0.00 -1 s
3 sf
(.) 92569  0.00 -1 s
52832.0 134135.0 m
54864.0 h
4 sf
(depth) 61134  0.00 -1 s
3 sf
( \037 Type) 71061  -53.00 32 s
( ) 71713  -54.00 32 s
2 sf
(card8) 78610  0.00 -1 s
3 sf
(.) 79316  0.00 -1 s
52832.0 137295.0 m
54864.0 h
4 sf
(visual) 61605  0.00 -1 s
3 sf
( \037 Type ) 72198  -48.67 32 s
2 sf
(card29) 80506  0.00 -1 s
3 sf
(.) 81212  0.00 -1 s
52832.0 142014.0 m
(Returns) 61610  0.00 -1 s
( a sequence of image data from the region of) 114446  272.00 32 s
( the ) 119849  271.50 32 s
4 sf
(drawable) 130510  0.00 -1 s
3 sf
( given by ) 142263  181.00 32 s
2 sf
(:x) 144613  0.00 -1 s
3 sf
(, ) 146296  271.00 32 s
2 sf
(:y) 148646  0.00 -1 s
3 sf
(,) 149352  0.00 -1 s
52832.0 145175.0 m
2 sf
(:width) 60669  0.00 -1 s
3 sf
(,) 61375  0.00 -1 s
( and ) 66766  -48.00 32 s
2 sf
(:height) 75230  0.00 -1 s
3 sf
(. If ) 79130  -48.00 32 s
2 sf
(:data) 85399  0.00 -1 s
3 sf
( is given, it is modified beginning with the element at the) 149352  -43.45 32 s
52832.0 148336.0 m
2 sf
(:start) 59411  0.00 -1 s
3 sf
( index) 66531  144.00 32 s
( and returned. The ) 88499  143.50 32 s
4 sf
(depth) 94769  0.00 -1 s
3 sf
( and ) 100399  71.50 32 s
4 sf
(visua) 106356  0.00 -1 s
3 sf
(l type ID of the ) 125021  143.60 32 s
4 sf
(drawable) 135682  0.00 -1 s
3 sf
( are also re\036) 149352  143.33 32 s
52832.0 151497.0 m
(turned.) 60747  0.00 -1 s
52832.0 157774.0 m
(The) 57220  0.00 -1 s
( bits for all planes selected by 1 bits in the ) 103302  -193.00 32 s
2 sf
(:plane\036mask) 118194  0.00 -1 s
3 sf
( are returned as zero; the) 145237  -154.40 32 s
( de\036) 149352  -194.00 32 s
52832.0 160934.0 m
(fault) 58003  0.00 -1 s
( ) 58662  -47.00 32 s
2 sf
(:plane\036mask) 73554  0.00 -1 s
3 sf
( is all 1 bits. The ) 92793  -47.00 32 s
2 sf
(:format) 102035  0.00 -1 s
3 sf
( of the returned pixel values may be) 142270  -40.29 32 s
( either) 149352  -48.00 32 s
52832.0 164095.0 m
2 sf
(:xy\036format) 65835  0.00 -1 s
3 sf
( or ) 69539  -29.00 32 s
2 sf
(:z\036format) 80973  0.00 -1 s
3 sf
(. The ) 87422  -28.50 32 s
2 sf
(:result\036type) 101368  0.00 -1 s
3 sf
( defines the type of image data returned.) 146620  -28.57 32 s
52832.0 170372.0 m
(The) 57220  0.00 -1 s
( calling program is responsible for handling the byte\036order and bit\036order returned by) 149352  -237.25 32 s
52832.0 173533.0 m
(the) 56280  0.00 -1 s
( server for the ) 72286  -112.00 32 s
4 sf
(drawable) 82947  0.00 -1 s
3 sf
('s display) 93730  -112.00 32 s
( \(see ) 99460  -112.50 32 s
2 sf
(display\036byte\036order) 121875  0.00 -1 s
3 sf
( and ) 127249  -56.50 32 s
2 sf
(display\036image\036lsb\036) 149352  0.00 -1 s
52832.0 176694.0 m
(first\036p) 60353  0.00 -1 s
3 sf
(\).) 61998  0.00 -1 s
4 sf
52832.0 182970.0 m
(drawable) 63493  0.00 -1 s
3 sf
( \037 A ) 70326  -48.00 32 s
2 sf
(drawable) 81613  0.00 -1 s
3 sf
(.) 82319  0.00 -1 s
2 sf
52832.0 187757.0 m
(:data) 59101  0.00 -1 s
3 sf
( \037 An optional ) 77284  -40.00 32 s
2 sf
(sequence) 88101  0.00 -1 s
3 sf
( of ) 91784  -39.50 32 s
2 sf
(card8) 98681  0.00 -1 s
3 sf
(.) 99387  0.00 -1 s
2 sf
52832.0 192543.0 m
(:start) 59411  0.00 -1 s
( ) 60099  -18.00 32 s
3 sf
(\037 The index of the first ) 88049  -18.00 32 s
2 sf
(:data) 94318  0.00 -1 s
3 sf
( element modified.) 115521  -18.00 32 s
4 sf
( ) 116208  -19.00 32 s
2 sf
52832.0 197330.0 m
(:x) 55182  0.00 -1 s
3 sf
(,) 55888  0.00 -1 s
( ) 56637  43.00 32 s
2 sf
(:y) 58987  0.00 -1 s
3 sf
( \037 ) 63307  43.00 32 s
2 sf
(card16) 71615  0.00 -1 s
3 sf
( values defining) 89727  43.00 32 s
( the size of the ) 107103  42.40 32 s
2 sf
(image) 114312  0.00 -1 s
3 sf
( returned. These arguments are) 149352  42.50 32 s
57912.0 200491.0 m
(required.) 68019  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Images) 26852  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(7\03686) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 3 declareFont
3 sf
52832.0 22578.0 m
(The ) 57895  -31.00 32 s
2 sf
(:result\036type) 71841  0.00 -1 s
3 sf
( defines the) 84788  -31.00 32 s
( type of image object returned:) 119346  -31.60 32 s
/symbb8 6 declareFont
6 sf
52832.0 29125.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
('image\036x) 68410  0.00 -1 s
3 sf
( \037 A basic ) 81793  -24.75 32 s
2 sf
(image) 89002  0.00 -1 s
3 sf
( object is returned.) 109931  -24.67 32 s
6 sf
52832.0 35673.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
('image\036xy) 69821  0.00 -1 s
3 sf
( \037 An ) 78122  -29.00 32 s
2 sf
(image\036xy) 89092  0.00 -1 s
3 sf
( is returned.) 102435  -29.00 32 s
6 sf
52832.0 42220.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
('image\036z) 68252  0.00 -1 s
3 sf
( \037 An) 75886  -24.00 32 s
( ) 76567  -25.00 32 s
2 sf
(image\036z) 85968  0.00 -1 s
3 sf
( is returned.) 99320  -24.50 32 s
52832.0 48497.0 m
(By) 56125  0.00 -1 s
( default, ) 65880  -99.00 32 s
2 sf
(:result\036type) 79826  0.00 -1 s
3 sf
( is ) 82922  -99.00 32 s
2 sf
('image\036z) 93262  0.00 -1 s
3 sf
( if ) 96200  -98.50 32 s
2 sf
(:format) 105442  0.00 -1 s
3 sf
( is ) 108539  -98.50 32 s
2 sf
(:z\036format) 119973  0.00 -1 s
3 sf
( and ) 125263  -98.50 32 s
2 sf
('image\036xy) 137172  0.00 -1 s
3 sf
( if ) 140110  -98.50 32 s
2 sf
(:format) 149352  0.00 -1 s
3 sf
52832.0 51658.0 m
(is) 54714  0.00 -1 s
( ) 55402  -18.00 32 s
2 sf
(:xy\036format) 68405  0.00 -1 s
3 sf
(.) 69111  0.00 -1 s
/timsps10i 4 declareFont
4 sf
52832.0 57935.0 m
(drawable) 63493  0.00 -1 s
3 sf
( \037 A ) 70326  -48.00 32 s
2 sf
(drawable) 81613  0.00 -1 s
3 sf
(.) 82319  0.00 -1 s
2 sf
52832.0 62721.0 m
(:x) 55182  0.00 -1 s
3 sf
(,) 55888  0.00 -1 s
( ) 56644  50.00 32 s
2 sf
(:y) 58994  0.00 -1 s
3 sf
( \037 ) 63328  50.00 32 s
2 sf
(card16) 71636  0.00 -1 s
3 sf
( values defining the upper\036left) 105846  50.00 32 s
( ) 106601  49.00 32 s
2 sf
(drawable) 117888  0.00 -1 s
3 sf
( pixel returned. These argu\036) 149352  49.50 32 s
57912.0 65882.0 m
(ments) 64653  0.00 -1 s
( are) 68767  -37.00 32 s
( required.) 79542  -38.00 32 s
2 sf
52832.0 70668.0 m
(:width) 60669  0.00 -1 s
3 sf
(,) 61375  0.00 -1 s
( ) 62024  -57.00 32 s
2 sf
(:height) 70488  0.00 -1 s
3 sf
( \037 ) 74608  -57.00 32 s
2 sf
(card16) 82916  0.00 -1 s
3 sf
( values defining the size of the ) 117709  -56.71 32 s
4 sf
(image) 124605  0.00 -1 s
3 sf
( returned. These argu\036) 149352  -56.67 32 s
57912.0 73829.0 m
(ments) 64653  0.00 -1 s
( are) 68767  -37.00 32 s
( required.) 79542  -38.00 32 s
2 sf
52832.0 78616.0 m
(:plane\036mask) 67724  0.00 -1 s
3 sf
( \037 A pixel mask.) 87602  -27.75 32 s
2 sf
52832.0 83402.0 m
(:format) 62074  0.00 -1 s
3 sf
( \037 Either) 73151  -26.00 32 s
( ) 73830  -27.00 32 s
2 sf
(:xy\036pixmap) 87624  0.00 -1 s
3 sf
( or ) 91333  -26.50 32 s
2 sf
(:z\036pixmap) 103558  0.00 -1 s
3 sf
(.) 104264  0.00 -1 s
2 sf
52832.0 88189.0 m
(:result\036type) 66778  0.00 -1 s
3 sf
( \037 One of ) 79371  -26.00 32 s
2 sf
('image\036x) 89869  0.00 -1 s
3 sf
(, ) 91254  -27.00 32 s
2 sf
('image\036xy) 103163  0.00 -1 s
3 sf
(, or ) 107578  -26.50 32 s
2 sf
('image\036z) 117918  0.00 -1 s
3 sf
(.) 118624  0.00 -1 s
2 sf
34544.0 92975.0 m
(put\036image) 46769  0.00 -1 s
3 sf
( ) 47450  -25.00 32 s
4 sf
(drawable gcontext image ) 76610  -25.00 32 s
3 sf
(&key \() 84500  -25.00 32 s
2 sf
(:src\036x) 91393  0.00 -1 s
3 sf
( 0\)) 94424  -25.00 32 s
( \() 96043  -26.00 32 s
2 sf
(:src\036y) 102936  0.00 -1 s
3 sf
( 0\) ) 106647  -25.50 32 s
2 sf
(:x) 108997  0.00 -1 s
3 sf
( ) 109678  -25.00 32 s
2 sf
(:y) 112028  0.00 -1 s
3 sf
( ) 112708  -26.00 32 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 96136.0 m
2 sf
(:width) 60669  0.00 -1 s
( :height) 69816  -23.00 32 s
( :bitmap\036p) 82567  -24.00 32 s
3 sf
52832.0 100855.0 m
(Displays) 62708  0.00 -1 s
( a region of the ) 79198  -260.00 32 s
4 sf
(image) 86094  0.00 -1 s
3 sf
( defined by ) 98716  -260.00 32 s
2 sf
(:src\036x) 105609  0.00 -1 s
3 sf
(, ) 106762  -259.00 32 s
2 sf
(:src\036y) 113655  0.00 -1 s
3 sf
(, ) 114807  -260.00 32 s
2 sf
(:width) 122644  0.00 -1 s
3 sf
(, and ) 128578  -129.50 32 s
2 sf
(:height) 137042  0.00 -1 s
3 sf
( on the des\036) 149352  -259.67 32 s
52832.0 104016.0 m
(tination) 61454  0.00 -1 s
( d) 63502  -69.00 32 s
4 sf
(rawable) 72752  0.00 -1 s
3 sf
(, with the upper\036left pixel of the ) 108949  -68.57 32 s
4 sf
(image) 115845  0.00 -1 s
3 sf
( region displayed at the ) 142611  -54.80 32 s
4 sf
(draw\036) 149352  0.00 -1 s
52832.0 107177.0 m
(able) 57691  0.00 -1 s
3 sf
( position given by ) 78601  -25.00 32 s
2 sf
(:x) 80951  0.00 -1 s
3 sf
( and ) 86389  -24.50 32 s
2 sf
(:y) 88739  0.00 -1 s
3 sf
(. By default, ) 103348  -16.33 32 s
2 sf
(:width) 111185  0.00 -1 s
3 sf
( is: ) 115214  -24.50 32 s
52832.0 113453.0 m
(\(-) 55182  0.00 -1 s
( \() 56806  -21.00 32 s
2 sf
(image\036width) 71852  0.00 -1 s
3 sf
( ) 72537  -21.00 32 s
4 sf
(image) 79433  0.00 -1 s
3 sf
(\) ) 81057  -21.00 32 s
2 sf
(:src\036x) 87950  0.00 -1 s
3 sf
(\)) 88889  0.00 -1 s
52832.0 119730.0 m
(and) 56907  0.00 -1 s
( ) 57596  -17.00 32 s
2 sf
(:height) 66060  0.00 -1 s
3 sf
( is: ) 70104  -17.00 32 s
52832.0 126007.0 m
(\(-) 55182  0.00 -1 s
( \() 56787  -40.00 32 s
2 sf
(image\036height) 72460  0.00 -1 s
3 sf
( ) 73166  0.00 32 s
4 sf
(image) 80062  0.00 -1 s
3 sf
(\)) 81001  0.00 -1 s
( ) 81666  -41.00 32 s
2 sf
(:src\036y) 88559  0.00 -1 s
3 sf
(\)) 89498  0.00 -1 s
52832.0 132283.0 m
(The) 57220  0.00 -1 s
( following attributes of the ) 86601  -284.00 32 s
4 sf
(gcontext) 96161  0.00 -1 s
3 sf
( are used to display the ) 121109  -283.50 32 s
2 sf
(image) 128318  0.00 -1 s
3 sf
(: clip\036mask, clip\036x,) 149352  -142.00 32 s
52832.0 135444.0 m
(clip\036y,) 60120  0.00 -1 s
( function, plane\036mask, and) 89945  -64.00 32 s
( subwindow\036mode.) 111512  -65.00 32 s
52832.0 141721.0 m
(The) 57220  0.00 -1 s
( ) 57727  -199.00 32 s
2 sf
(:bitmap\036p) 69796  0.00 -1 s
3 sf
( argument applies only to images of depth 1. In this case, if ) 134894  -183.62 32 s
2 sf
(:bitmap\036p) 146963  0.00 -1 s
3 sf
( is) 149352  -199.00 32 s
52832.0 144882.0 m
(true) 57219  0.00 -1 s
( or if the ) 67160  -101.00 32 s
4 sf
(image) 74056  0.00 -1 s
3 sf
( is a basic ) 85410  -101.00 32 s
2 sf
(image) 92619  0.00 -1 s
3 sf
( object created with ) 115198  -75.75 32 s
2 sf
(:format :bitmap) 134606  -101.00 32 s
3 sf
(, the ) 139970  -101.00 32 s
4 sf
(image) 146866  0.00 -1 s
3 sf
( is) 149352  -102.00 32 s
52832.0 148042.0 m
(combined) 63961  0.00 -1 s
( with the foreground and background pixels of the ) 120411  -93.33 32 s
2 sf
(gcontext) 130597  0.00 -1 s
3 sf
(. 1 bits) 137993  -105.00 32 s
( of the ) 145592  -105.67 32 s
4 sf
(im\036) 149352  0.00 -1 s
52832.0 151203.0 m
(age) 56907  0.00 -1 s
3 sf
( are displayed in) 74719  -254.00 32 s
( the foreground pixel and 0 bits are displayed in the background pix\036) 149352  -233.33 32 s
52832.0 154364.0 m
(el.) 55575  0.00 -1 s
4 sf
52832.0 160641.0 m
(drawable) 63493  0.00 -1 s
3 sf
( \037) 66969  -52.00 32 s
( The destination ) 85701  -52.67 32 s
2 sf
(drawable) 96988  0.00 -1 s
3 sf
(.) 97694  0.00 -1 s
4 sf
52832.0 165427.0 m
(gcontext) 62392  0.00 -1 s
3 sf
( \037 The graphics context used to display the ) 112467  -36.00 32 s
4 sf
(image) 119363  0.00 -1 s
3 sf
(.) 120069  0.00 -1 s
4 sf
52832.0 170214.0 m
(image) 59728  0.00 -1 s
3 sf
( \037 An ) 68011  -35.00 32 s
2 sf
(image) 75220  0.00 -1 s
3 sf
( object.) 83493  -35.00 32 s
2 sf
52832.0 175000.0 m
(:src\036x) 59725  0.00 -1 s
3 sf
(,) 60431  0.00 -1 s
( ) 61086  -51.00 32 s
2 sf
(:src\036y) 67979  0.00 -1 s
3 sf
( \037 ) 72111  -51.00 32 s
2 sf
(card16) 80419  0.00 -1 s
3 sf
( values defining the upper\036left position of the ) 131741  -50.50 32 s
4 sf
(image) 138637  0.00 -1 s
3 sf
( region to) 149352  -50.50 32 s
57912.0 178161.0 m
(display.) 66770  0.00 -1 s
2 sf
52832.0 182948.0 m
(:x) 55182  0.00 -1 s
3 sf
(,) 55888  0.00 -1 s
( ) 56419  -175.00 32 s
2 sf
(:y) 58769  0.00 -1 s
3 sf
( \037 The position in the ) 83902  -175.00 32 s
4 sf
(drawable) 94563  0.00 -1 s
3 sf
( where the ) 106497  -175.00 32 s
4 sf
(image) 113393  0.00 -1 s
3 sf
( region is displayed. These) 142869  -175.00 32 s
( argu\036) 149352  -176.00 32 s
57912.0 186109.0 m
(ments) 64653  0.00 -1 s
( are) 68767  -37.00 32 s
( required.) 79542  -38.00 32 s
2 sf
52832.0 190895.0 m
(:width) 60669  0.00 -1 s
3 sf
(,) 61375  0.00 -1 s
( ) 62049  -32.00 32 s
2 sf
(:height ) 71187  -32.00 32 s
3 sf
(\037 ) 74683  -32.00 32 s
2 sf
(card16) 82991  0.00 -1 s
3 sf
( values defining the size of the ) 117953  -32.57 32 s
4 sf
(image) 124849  0.00 -1 s
3 sf
( region displayed.) 144927  -32.50 32 s
2 sf
52832.0 195682.0 m
(:bitmap\036p) 64901  0.00 -1 s
3 sf
( \037 If ) 71914  65.00 32 s
4 sf
(image) 78810  0.00 -1 s
3 sf
( is depth 1, then if true, foreground and) 123533  65.00 32 s
( background pixels are) 149352  64.33 32 s
57912.0 198842.0 m
(used) 63085  0.00 -1 s
( to display 1 and 0 bits of the ) 96346  -23.56 32 s
4 sf
(image) 103242  0.00 -1 s
3 sf
(.) 103948  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
142511.0 8195.0 m
(Images) 149043  0.00 -1 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(7\03685) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(copy\036image) 48336  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 49020  -22.00 32 s
/timsps10i 4 declareFont
4 sf
(image ) 56600  -22.00 32 s
3 sf
(&key \() 64493  -22.00 32 s
2 sf
(:x) 66843  0.00 -1 s
3 sf
( 0\) \() 71499  -22.50 32 s
2 sf
(:y) 73849  0.00 -1 s
3 sf
( 0\) ) 77566  -22.50 32 s
2 sf
(:width :height :result\036type) 109180  -22.50 32 s
3 sf
( ) 109863  -23.00 32 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
52832.0 28900.0 m
( ) 53506  -32.00 32 s
4 sf
(new\036image) 65887  0.00 -1 s
3 sf
( \037 Type ) 76530  -32.00 32 s
2 sf
(image) 83739  0.00 -1 s
3 sf
(.) 84445  0.00 -1 s
( ) 85118  -33.00 32 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( a new image, of the given ) 91413  -109.00 32 s
2 sf
(:result\036type) 105359  0.00 -1 s
3 sf
(, containing a copy of the portion of the) 149352  -95.00 32 s
52832.0 36779.0 m
4 sf
(image) 59728  0.00 -1 s
3 sf
( defined by ) 73046  -28.00 32 s
2 sf
(:x) 75396  0.00 -1 s
3 sf
(, ) 76780  -28.00 32 s
2 sf
(:y) 79130  0.00 -1 s
3 sf
(, ) 80515  -27.00 32 s
2 sf
(:width) 88352  0.00 -1 s
3 sf
(, and ) 94490  -27.50 32 s
2 sf
(:height) 102954  0.00 -1 s
3 sf
(. By default, ) 117557  -18.33 32 s
2 sf
(:width) 125394  0.00 -1 s
3 sf
( is:) 128738  -28.00 32 s
52832.0 43056.0 m
(\(-) 55182  0.00 -1 s
( \() 56808  -19.00 32 s
2 sf
(image\036width) 71854  0.00 -1 s
3 sf
( ) 72541  -19.00 32 s
4 sf
(image) 79437  0.00 -1 s
3 sf
(\)) 80376  0.00 -1 s
( ) 81062  -20.00 32 s
2 sf
(:x) 83412  0.00 -1 s
3 sf
(\)) 84351  0.00 -1 s
52832.0 49332.0 m
(and) 56907  0.00 -1 s
( ) 57591  -22.00 32 s
2 sf
(:height) 66055  0.00 -1 s
3 sf
( is:) 69404  -23.00 32 s
52832.0 55609.0 m
(\(-) 55182  0.00 -1 s
( \() 56789  -38.00 32 s
2 sf
(image\036height) 72462  0.00 -1 s
3 sf
( ) 73130  -38.00 32 s
4 sf
(image) 80026  0.00 -1 s
3 sf
(\) ) 81671  0.00 32 s
2 sf
(:y) 84021  0.00 -1 s
3 sf
(\)) 84960  0.00 -1 s
52832.0 61886.0 m
(If) 54710  0.00 -1 s
( necessary, the new image is converted to the ) 105626  -89.89 32 s
2 sf
(:result\036type) 119572  0.00 -1 s
3 sf
(, that can be one of the fol\036) 149352  -89.57 32 s
52832.0 65047.0 m
(lowing) 60670  0.00 -1 s
( values:) 69314  -56.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 71594.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
('image\036x) 68410  0.00 -1 s
3 sf
( \037 A basic ) 81793  -24.75 32 s
2 sf
(image) 89002  0.00 -1 s
3 sf
( object is returned.) 109931  -24.67 32 s
6 sf
52832.0 78142.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
('image\036xy) 69821  0.00 -1 s
3 sf
( \037 An ) 78122  -29.00 32 s
2 sf
(image\036xy) 89092  0.00 -1 s
3 sf
( is returned.) 102435  -29.00 32 s
6 sf
52832.0 84689.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
('image\036z) 68252  0.00 -1 s
3 sf
( \037 An) 75886  -24.00 32 s
( ) 76567  -25.00 32 s
2 sf
(image\036z) 85968  0.00 -1 s
3 sf
( is returned.) 99320  -24.50 32 s
4 sf
52832.0 90966.0 m
(image) 59728  0.00 -1 s
3 sf
( \037 An ) 68011  -35.00 32 s
2 sf
(image) 75220  0.00 -1 s
3 sf
( object.) 83493  -35.00 32 s
2 sf
52832.0 95752.0 m
(:x) 55182  0.00 -1 s
3 sf
(,) 55888  0.00 -1 s
( ) 56608  14.00 32 s
2 sf
(:y) 58958  0.00 -1 s
3 sf
( \037 ) 63221  14.50 32 s
2 sf
(card16) 71529  0.00 -1 s
3 sf
( values defining the position of the upper\036left corner of the subimage) 149352  14.45 32 s
57912.0 98913.0 m
(copied.) 66141  0.00 -1 s
2 sf
52832.0 103700.0 m
(:width) 60669  0.00 -1 s
3 sf
(,) 61375  0.00 -1 s
( ) 62046  -35.00 32 s
2 sf
(:height) 70510  0.00 -1 s
3 sf
( \037 ) 74674  -35.00 32 s
2 sf
(card16) 82982  0.00 -1 s
3 sf
( values defining the size of subimage copied.) 133525  -34.86 32 s
2 sf
52832.0 108486.0 m
(:result\036type) 66778  0.00 -1 s
3 sf
( \037 One of ) 79371  -26.00 32 s
2 sf
('image\036x) 89869  0.00 -1 s
3 sf
(,) 90575  0.00 -1 s
( ) 91254  -27.00 32 s
2 sf
('image\036xy) 103163  0.00 -1 s
3 sf
(, or ) 107578  -26.50 32 s
2 sf
('image\036z) 117918  0.00 -1 s
3 sf
(.) 118624  0.00 -1 s
2 sf
34544.0 113273.0 m
(get\036image) 46295  0.00 -1 s
3 sf
( ) 46972  -29.00 32 s
4 sf
(drawable ) 58310  -29.00 32 s
3 sf
(&key ) 65257  -29.00 32 s
2 sf
(:x) 67607  0.00 -1 s
3 sf
( ) 68284  -29.00 32 s
2 sf
(:y) 70634  0.00 -1 s
3 sf
( ) 71311  -29.00 32 s
2 sf
(:width) 79148  0.00 -1 s
3 sf
( ) 79825  -29.00 32 s
2 sf
(:height) 88289  0.00 -1 s
3 sf
( ) 88966  -29.00 32 s
2 sf
(:plane\036mask ) 104535  -29.00 32 s
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 116434.0 m
(\() 53771  0.00 -1 s
2 sf
(:format) 63013  0.00 -1 s
( :z\036format) 75140  -13.00 32 s
3 sf
(\)) 76079  0.00 -1 s
2 sf
( :result\036type) 90718  -13.00 32 s
34544.0 119594.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
52832.0 122755.0 m
( ) 53505  -33.00 32 s
4 sf
(image) 60401  0.00 -1 s
3 sf
( \037 Type ) 71039  -33.67 32 s
2 sf
(image) 78248  0.00 -1 s
3 sf
(.) 78954  0.00 -1 s
52832.0 127474.0 m
(Returns) 61610  0.00 -1 s
( an ) 65499  -93.50 32 s
4 sf
(image) 72395  0.00 -1 s
3 sf
( containing pixel values from the region of the ) 124612  -93.56 32 s
4 sf
(drawable) 135273  0.00 -1 s
3 sf
( given by ) 146296  -62.33 32 s
2 sf
(:x) 148646  0.00 -1 s
3 sf
(,) 149352  0.00 -1 s
52832.0 130635.0 m
2 sf
(:y) 55182  0.00 -1 s
3 sf
(,) 55888  0.00 -1 s
( ) 56408  -186.00 32 s
2 sf
(:width) 64245  0.00 -1 s
3 sf
(, and ) 70066  -186.00 32 s
2 sf
(:height) 78530  0.00 -1 s
3 sf
(. The bits for all planes selected by 1 bits in the ) 130495  -170.00 32 s
2 sf
(:plane\036mask) 145387  0.00 -1 s
3 sf
( are) 149352  -186.00 32 s
52832.0 133796.0 m
(returned) 62233  0.00 -1 s
( as zero; the default ) 83962  -215.00 32 s
2 sf
(:plane\036mask) 98854  0.00 -1 s
3 sf
( is all 1 bits. The ) 117302  -178.83 32 s
2 sf
(:format) 126544  0.00 -1 s
3 sf
( of the returned pixel) 149352  -214.50 32 s
52832.0 136957.0 m
(values) 60042  0.00 -1 s
( may be) 68911  -33.00 32 s
( either ) 76680  -33.50 32 s
2 sf
(:xy\036format) 89683  0.00 -1 s
3 sf
( or ) 93411  -17.00 32 s
2 sf
(:z\036format) 104845  0.00 -1 s
3 sf
(.) 105551  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Images) 26852  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(7\03684) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 3 declareFont
3 sf
52832.0 22578.0 m
(If the ) 59614  22.00 32 s
2 sf
(:data) 65883  0.00 -1 s
3 sf
( is a list, each element must be a bitmap of equal size. ) 127519  20.38 32 s
2 sf
(:width) 135356  0.00 -1 s
3 sf
( and ) 140888  22.50 32 s
2 sf
(:height) 149352  0.00 -1 s
3 sf
52832.0 25739.0 m
(default) 60667  0.00 -1 s
( to the bitmap width \037  \() 88708  -81.43 32 s
2 sf
(array\036dimension) 108773  0.00 -1 s
3 sf
( ) 109384  -95.00 32 s
2 sf
(bitmap) 118006  0.00 -1 s
3 sf
( 1\) \037 and) 129181  -63.33 32 s
( the bitmap height) 149352  -95.67 32 s
52832.0 28900.0 m
(\037) 55654  0.00 -1 s
( \() 57198  -101.00 32 s
2 sf
(array\036dimension) 77263  0.00 -1 s
3 sf
( ) 77868  -101.00 32 s
2 sf
(bitmap) 86490  0.00 -1 s
3 sf
( 0\) \037 respectively. ) 108422  -101.00 32 s
2 sf
(:depth) 116260  0.00 -1 s
3 sf
( defaults to the) 132651  -101.00 32 s
( number of bit\036) 149352  -101.67 32 s
52832.0 32060.0 m
(maps.) 59495  0.00 -1 s
52832.0 38337.0 m
(If) 54710  0.00 -1 s
( the ) 62528  1479.00 32 s
2 sf
(:data) 68797  0.00 -1 s
3 sf
( is a ) 78488  1479.33 32 s
2 sf
(pixarray) 88991  0.00 -1 s
3 sf
(, ) 91882  1479.00 32 s
2 sf
(:width) 99719  0.00 -1 s
3 sf
( and ) 108165  1479.50 32 s
2 sf
(:height) 116629  0.00 -1 s
3 sf
( default to the ) 138849  1479.50 32 s
2 sf
(pixarray) 149352  0.00 -1 s
3 sf
52832.0 41498.0 m
(width) 59259  0.00 -1 s
( \037 \() 68778  2173.00 32 s
2 sf
(array\036dimension pixarray) 102225  2173.00 32 s
3 sf
( 1\),) 108160  2173.00 32 s
( and the pixarray height \037) 149352  2172.40 32 s
52832.0 44659.0 m
(\() 53771  0.00 -1 s
2 sf
(array\036dimension) 73836  0.00 -1 s
( pixarray) 85678  633.00 32 s
3 sf
( 0\), respectively. ) 107091  633.00 32 s
2 sf
(:depth) 114929  0.00 -1 s
3 sf
( defaults to \() 131011  632.33 32 s
2 sf
(pixarray\036depth) 149352  0.00 -1 s
52832.0 47820.0 m
(:data) 59101  0.00 -1 s
3 sf
(\).) 60746  0.00 -1 s
( The ) 66082  -232.00 32 s
2 sf
(:bits\036per\036pixel) 83165  0.00 -1 s
3 sf
( is rounded to a valid size, if necessary. By default, the ) 143084  -212.25 32 s
2 sf
(:bits\036) 149352  0.00 -1 s
52832.0 50981.0 m
(per\036pixel) 63647  0.00 -1 s
3 sf
( is equal to the ) 80661  -30.60 32 s
2 sf
(:depth) 88499  0.00 -1 s
3 sf
(.) 89205  0.00 -1 s
52832.0 57257.0 m
(If) 54710  0.00 -1 s
( the) 58667  -197.00 32 s
( ) 59175  -198.00 32 s
2 sf
(:data) 65444  0.00 -1 s
3 sf
( is an array of ) 80678  -197.40 32 s
2 sf
(card8) 87575  0.00 -1 s
3 sf
(, the ) 92746  -197.50 32 s
2 sf
(:width) 100583  0.00 -1 s
3 sf
( and ) 105675  -197.50 32 s
2 sf
(:height) 114139  0.00 -1 s
3 sf
( are required to interpret the im\036) 149352  -164.67 32 s
52832.0 60418.0 m
(age) 56749  0.00 -1 s
( data correctly. The) 77918  -257.00 32 s
( ) 78366  -258.00 32 s
2 sf
(:bits\036per\036pixel) 95449  0.00 -1 s
3 sf
( defaults to the ) 112077  -193.00 32 s
2 sf
(:depth) 119915  0.00 -1 s
3 sf
(, and the ) 129489  -257.67 32 s
2 sf
(:depth) 137327  0.00 -1 s
3 sf
( defaults to) 149352  -257.50 32 s
52832.0 63579.0 m
(1.) 54949  0.00 -1 s
( ) 55633  -22.00 32 s
2 sf
(:bytes\036per\036line) 73185  0.00 -1 s
3 sf
( defaults to: ) 87150  -21.67 32 s
52832.0 69856.0 m
(\() 53771  0.00 -1 s
2 sf
(floor) 59569  0.00 -1 s
3 sf
( \() 61214  0.00 32 s
2 sf
(length) 68739  0.00 -1 s
( :data) 75694  -20.00 32 s
3 sf
(\)) 76633  0.00 -1 s
( \(* ) 80354  -20.50 32 s
2 sf
(:bits\036per\036pixel :height) 106586  -21.00 32 s
3 sf
(\)\)) 108464  0.00 -1 s
52832.0 76132.0 m
(The) 57220  0.00 -1 s
( ) 57632  -294.00 32 s
2 sf
(:format) 66874  0.00 -1 s
3 sf
( defines the storage format of image data bytes and can be one of the) 140636  -273.00 32 s
( follow\036) 149352  -295.00 32 s
52832.0 79293.0 m
(ing) 56438  0.00 -1 s
( values:) 65092  -46.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 85841.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:xy\036pixmap) 71706  0.00 -1 s
3 sf
( \037 The ) 81067  11.00 32 s
2 sf
(:data) 87336  0.00 -1 s
3 sf
( is organized as a set of bitmaps representing image bit) 149352  10.10 32 s
57912.0 89002.0 m
(planes,) 65828  0.00 -1 s
( appearing in most\036significant to  least\036significant bit) 125465  -23.14 32 s
( order.) 132802  -28.00 32 s
6 sf
52832.0 95549.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:z\036pixmap) 70137  0.00 -1 s
3 sf
( \037 The ) 79387  -26.00 32 s
2 sf
(:data) 85656  0.00 -1 s
3 sf
( is organized as a set of pixel values in scanline order.) 146214  -23.55 32 s
6 sf
52832.0 102097.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:bitmap) 67473  0.00 -1 s
3 sf
( \037 Similar to ) 83258  -91.00 32 s
2 sf
(:xy\036pixmap) 97052  0.00 -1 s
3 sf
(, except that the ) 115263  -91.00 32 s
2 sf
(:depth) 123101  0.00 -1 s
3 sf
( must be 1,  and 1 and) 147327  -78.00 32 s
( 0) 149352  -92.00 32 s
57912.0 105258.0 m
(bits) 61989  0.00 -1 s
( represent the foreground and background pixels, respectively.) 132125  -45.00 32 s
52832.0 111534.0 m
(By) 56125  0.00 -1 s
( default, the ) 70178  -18.00 32 s
2 sf
(:format) 79420  0.00 -1 s
3 sf
( is ) 82678  -18.00 32 s
2 sf
(:bitmap) 92239  0.00 -1 s
3 sf
( if) 94650  -18.00 32 s
( ) 95337  -19.00 32 s
2 sf
(:depth) 103175  0.00 -1 s
3 sf
( is 1; otherwise, ) 121678  -18.50 32 s
2 sf
(:z\036pixmap) 133903  0.00 -1 s
3 sf
(.) 134609  0.00 -1 s
2 sf
52832.0 117811.0 m
(:bit\036lsb\036first\036p) 69913  0.00 -1 s
3 sf
( \037 For a returned image, true if the order of bits in each ) 134825  52.00 32 s
2 sf
(:data) 141094  0.00 -1 s
3 sf
( byte is) 149352  52.50 32 s
57912.0 120972.0 m
(least\036significant) 75935  0.00 -1 s
( bit first.) 85592  8.00 32 s
2 sf
52832.0 125758.0 m
(:bits\036per\036pixel) 69915  0.00 -1 s
( ) 70597  -24.00 32 s
3 sf
(\037 One of 1, 4,) 87432  -24.00 32 s
( 8, 16, 24, or 32.) 105890  -24.60 32 s
2 sf
52832.0 130545.0 m
(:blue\036mask) 66313  0.00 -1 s
3 sf
( \037 For ) 75079  -31.00 32 s
2 sf
(:true\036color) 88083  0.00 -1 s
3 sf
( or ) 91784  -30.50 32 s
2 sf
(:direct\036color) 106825  0.00 -1 s
3 sf
( images, a pixel mask.) 131786  -30.50 32 s
2 sf
52832.0 135331.0 m
(:byte\036lsb\036first\036p) 71793  0.00 -1 s
3 sf
( \037 For a returned ) 91403  -263.00 32 s
/timsps10i 4 declareFont
4 sf
(image) 98299  0.00 -1 s
3 sf
(,) 99005  0.00 -1 s
( true if the ) 110333  -263.50 32 s
2 sf
(:data) 116602  0.00 -1 s
3 sf
( byte order is least\036significant) 149352  -197.75 32 s
57912.0 138492.0 m
(byte) 62771  0.00 -1 s
( first.) 68727  0.00 32 s
2 sf
52832.0 143279.0 m
(:bytes\036per\036line) 70384  0.00 -1 s
3 sf
( \037 For a returned) 90479  -31.00 32 s
( ) 91153  -32.00 32 s
4 sf
(image) 98049  0.00 -1 s
3 sf
(, the number of ) 115871  -31.50 32 s
2 sf
(:data) 122140  0.00 -1 s
3 sf
( bytes per scanline.) 143708  -21.00 32 s
2 sf
52832.0 148065.0 m
(:data) 59101  0.00 -1 s
3 sf
( \037 Either a ) 72795  -25.00 32 s
2 sf
(list) 76400  0.00 -1 s
3 sf
( of ) 80113  -24.50 32 s
2 sf
(bitmaps) 89833  0.00 -1 s
3 sf
(, a ) 93155  -24.50 32 s
2 sf
(pixarray) 103658  0.00 -1 s
3 sf
(, or an array of ) 120955  -19.60 32 s
2 sf
(card8) 127852  0.00 -1 s
3 sf
( bytes.) 135196  -25.00 32 s
2 sf
52832.0 152852.0 m
(:depth) 60670  0.00 -1 s
3 sf
( \037 The number of bits per displayed) 102092  -28.00 32 s
( pixel.) 109118  -29.00 32 s
2 sf
52832.0 157638.0 m
(:format) 62074  0.00 -1 s
3 sf
( \037 One of ) 74691  -20.00 32 s
2 sf
(:bitmap) 84252  0.00 -1 s
3 sf
(, ) 85644  -20.00 32 s
2 sf
(:xy\036format) 98647  0.00 -1 s
3 sf
(, or) 102389  -20.00 32 s
( ) 103074  -21.00 32 s
2 sf
(:z\036format) 114508  0.00 -1 s
3 sf
(.) 115214  0.00 -1 s
2 sf
52832.0 162425.0 m
(:green\036mask) 67877  0.00 -1 s
3 sf
( \037 For ) 76634  -34.00 32 s
2 sf
(:true\036color) 89638  0.00 -1 s
3 sf
( or ) 93332  -34.00 32 s
2 sf
(:direct\036color) 108373  0.00 -1 s
3 sf
( images, a pixel mask.) 133322  -33.50 32 s
2 sf
52832.0 167211.0 m
(:height) 61296  0.00 -1 s
3 sf
( \037 A ) 68192  -27.00 32 s
2 sf
(card16) 76500  0.00 -1 s
3 sf
( for the image height in) 102777  -27.00 32 s
( pixels.) 110902  -28.00 32 s
2 sf
52832.0 171998.0 m
(:name) 60354  0.00 -1 s
3 sf
( \037 An optional) 77898  -31.00 32 s
( ) 78572  -32.00 32 s
2 sf
(stringable) 90643  0.00 -1 s
3 sf
( for the image name.) 113792  -31.50 32 s
2 sf
52832.0 176784.0 m
(:plist) 58945  0.00 -1 s
( ) 59634  -17.00 32 s
3 sf
(\037 An optional) 76531  -17.00 32 s
( image property list.) 99207  -17.67 32 s
2 sf
52832.0 181570.0 m
(:red\036mask) 65213  0.00 -1 s
3 sf
( \037 For ) 73979  -31.00 32 s
2 sf
(:true\036color) 86983  0.00 -1 s
3 sf
( or) 90008  -31.00 32 s
( ) 90682  -32.00 32 s
2 sf
(:direct\036color) 105723  0.00 -1 s
3 sf
( images, a pixel mask.) 130680  -31.50 32 s
2 sf
52832.0 186357.0 m
(:width) 60669  0.00 -1 s
3 sf
( \037 A ) 67577  -23.00 32 s
2 sf
(card16) 75885  0.00 -1 s
3 sf
( for the image) 91567  -23.00 32 s
( width in pixels.) 109683  -23.67 32 s
2 sf
52832.0 191143.0 m
(:x\036hot) 60040  0.00 -1 s
3 sf
( \037 For a ) 70764  -23.50 32 s
2 sf
(cursor ) 79284  -23.00 32 s
3 sf
(image, the x position of the hot spot.) 120430  -23.57 32 s
2 sf
52832.0 195930.0 m
(:y\036hot) 60040  0.00 -1 s
3 sf
( \037 For a cursor image, the y position of the hot) 113590  -20.00 32 s
( spot.) 119685  -21.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
142511.0 8195.0 m
(Images) 149043  0.00 -1 s
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(7\03683) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 3 declareFont
3 sf
52832.0 23233.0 m
0.0 0.0 m
newpath
149013 21674 av
52967 21676 as
[] 0 setdash
dp
149352.0 23233.0 m
20320.0 26055.0 m
35312.0 h
2 sf
(XY\036Format) 49413  0.00 -1 s
52832.0 h
(7.2.2) 58477  0.00 -1 s
3 sf
() 58477  0.00 -1 s
60672.0 h
(The ) 65726  -40.00 32 s
2 sf
(image\036xy) 76696  0.00 -1 s
3 sf
( subtype represents an image as a sequence of bitmaps,) 138402  -40.56 32 s
20320.0 29216.0 m
40775.0 h
2 sf
(Images) 49396  0.00 -1 s
52832.0 h
3 sf
(one) 56907  0.00 -1 s
( for each plane of the image, in most\036significant to least\036significant bit order. The) 149352  39.85 32 s
52832.0 32377.0 m
(following) 63804  0.00 -1 s
( paragraphs describe) 86821  -88.00 32 s
( the additional CLX functions that can be used to access) 149352  -79.70 32 s
52832.0 35537.0 m
2 sf
(image\036xy) 63802  0.00 -1 s
3 sf
( objects.) 73129  -79.00 32 s
2 sf
34544.0 41814.0 m
(image\036xy\036bitmap\036list) 59619  0.00 -1 s
3 sf
( ) 60273  -52.00 32 s
/timsps10i 4 declareFont
4 sf
(image) 67169  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 44975.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 48136.0 m
(  bitmaps) 63152  -14.00 32 s
3 sf
( \037 Type) 73157  -14.00 32 s
( ) 73848  -15.00 32 s
2 sf
(list) 77453  0.00 -1 s
3 sf
( of ) 81186  -14.50 32 s
2 sf
(bitmap) 89808  0.00 -1 s
3 sf
(.) 90514  0.00 -1 s
52832.0 52855.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73695  -21.00 32 s
2 sf
(setf) 77924  0.00 -1 s
3 sf
(\) changes the list of bitmap planes for the ) 125155  -20.56 32 s
4 sf
(image) 132051  0.00 -1 s
3 sf
(.) 132757  0.00 -1 s
4 sf
52832.0 59131.0 m
(image) 59728  0.00 -1 s
( \037 ) 63571  -39.00 32 s
3 sf
(An ) 67686  -39.00 32 s
2 sf
(image\036xy) 78656  0.00 -1 s
3 sf
( object.) 86924  -40.00 32 s
52832.0 64572.0 m
0.0 0.0 m
newpath
149013 63013 av
52967 63015 as
[] 0 setdash
dp
149352.0 64572.0 m
20320.0 67395.0 m
37502.0 h
2 sf
(Z\036Format) 49411  0.00 -1 s
52832.0 h
(7.2.3) 58477  0.00 -1 s
3 sf
() 58477  0.00 -1 s
60672.0 h
(The ) 65727  -39.00 32 s
2 sf
(image\036z) 75128  0.00 -1 s
3 sf
( subtype represents an image as a two\036dimensional array) 138605  -39.25 32 s
20320.0 70556.0 m
40775.0 h
2 sf
(Images) 49396  0.00 -1 s
52832.0 h
3 sf
(of pixels,) 63335  0.00 32 s
( in scanline order. The following paragraphs describe the additional) 149352  1076.33 32 s
52832.0 73716.0 m
(CLX functions) 69683  0.00 32 s
( that can be used to access ) 99757  -36.71 32 s
2 sf
(image\036z) 109158  0.00 -1 s
3 sf
( objects. ) 119233  -18.50 32 s
2 sf
34544.0 79993.0 m
(image\036z\036bits\036per\036pixel) 61028  0.00 -1 s
3 sf
( ) 61650  -84.00 32 s
4 sf
(image) 68546  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 83154.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 86315.0 m
(  pixel\036data\036size) 70813  -22.00 32 s
3 sf
( \037 One of 1, 4, 8, 16, 24, or 32.) 106815  -21.60 32 s
52832.0 91034.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73437  -107.00 32 s
2 sf
(setf) 77666  0.00 -1 s
3 sf
(\) changes the number of bits per data unit used to contain a pixel) 149352  -98.54 32 s
52832.0 94194.0 m
(value) 58944  0.00 -1 s
( for the ) 67541  -86.00 32 s
4 sf
(image) 74437  0.00 -1 s
3 sf
(. Depending on the storage format for image data, this value can) 146069  -78.18 32 s
( be) 149352  -87.00 32 s
52832.0 97355.0 m
(larger) 59411  0.00 -1 s
( than the) 69054  -38.00 32 s
( actual ) 77127  -38.50 32 s
4 sf
(image) 84023  0.00 -1 s
3 sf
( depth.) 91666  -39.00 32 s
4 sf
52832.0 103632.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67695  -36.00 32 s
2 sf
(image\036z) 77096  0.00 -1 s
3 sf
( object.) 85367  -37.00 32 s
2 sf
34544.0 108418.0 m
(image\036z\036pixarray) 55387  0.00 -1 s
( ) 55961  -132.00 32 s
4 sf
(image) 62857  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 111579.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 114740.0 m
(  pixarray) 63890  -36.50 32 s
3 sf
( \037 Type ) 74519  -36.67 32 s
2 sf
(pixarray) 85022  0.00 -1 s
3 sf
(.) 85728  0.00 -1 s
52832.0 119459.0 m
(Returns) 61610  0.00 -1 s
( and) 66311  -80.00 32 s
( \(with ) 73517  -80.50 32 s
2 sf
(setf) 77746  0.00 -1 s
3 sf
(\) changes the two\036dimensional array of pixel data for the ) 141750  -72.50 32 s
4 sf
(image) 148646  0.00 -1 s
3 sf
(.) 149352  0.00 -1 s
4 sf
52832.0 125736.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67695  -36.00 32 s
2 sf
(image\036z) 77096  0.00 -1 s
3 sf
( object.) 85367  -37.00 32 s
20320.0 131245.0 m
0.0 0.0 m
newpath
20455 129621 av
149013 129619 as
[] 0 setdash
dp
149352.0 131245.0 m
/timsps12b 5 declareFont
5 sf
20320.0 134631.0 m
(Image) 29346  0.00 -1 s
( Functions) 44501  9.00 32 s
52832.0 h
2 sf
(7.3) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(The) 62943  0.00 -1 s
( following paragraphs describe the CLX functions used) 125138  -38.00 32 s
( to:) 128784  -39.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 141179.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Create) 65276  0.00 -1 s
( an ) 69262  -45.00 32 s
2 sf
(image) 76471  0.00 -1 s
3 sf
( object.) 84734  -45.00 32 s
6 sf
52832.0 147726.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Copy) 64027  0.00 -1 s
( an image) 74923  -38.00 32 s
( or a subimage.) 92050  -38.67 32 s
6 sf
52832.0 154274.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Read) 63711  0.00 -1 s
( an image from a ) 83330  -41.60 32 s
2 sf
(drawable) 94617  0.00 -1 s
3 sf
(.) 95323  0.00 -1 s
6 sf
52832.0 160822.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(Display) 66690  0.00 -1 s
( an image to a) 82370  -38.00 32 s
( ) 83037  -39.00 32 s
2 sf
(drawable) 94324  0.00 -1 s
3 sf
(.) 95030  0.00 -1 s
2 sf
34544.0 167098.0 m
(create\036image) 50054  0.00 -1 s
3 sf
( &key ) 57688  -24.00 32 s
2 sf
(:bit\036lsb\036first\036p :bits\036per\036pixel :blue\036mask ) 107380  -23.67 32 s
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
52832.0 170259.0 m
2 sf
(:byte\036lsb\036first\036p) 71793  0.00 -1 s
( :bytes\036per\036line :data :depth :format ) 116140  -16.80 32 s
52832.0 173420.0 m
(:green\036mask) 67877  0.00 -1 s
( :height) 77024  -23.00 32 s
( :name :plist :red\036mask :width ) 114289  -23.60 32 s
52832.0 176581.0 m
(:x\036hot) 60040  0.00 -1 s
( :y\036hot   ) 70036  -9.00 32 s
34544.0 179742.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
52832.0 182903.0 m
( ) 53505  -33.00 32 s
4 sf
(image) 60401  0.00 -1 s
3 sf
( \037 Type ) 71039  -33.67 32 s
2 sf
(image) 78248  0.00 -1 s
3 sf
(.) 78954  0.00 -1 s
52832.0 187621.0 m
(Creates) 61294  0.00 -1 s
( an ) 64908  -231.00 32 s
2 sf
(image) 72117  0.00 -1 s
3 sf
( object from the given ) 96590  -231.00 32 s
2 sf
(:data) 102859  0.00 -1 s
3 sf
( and returns either) 122618  -231.00 32 s
( an ) 126231  -231.50 32 s
2 sf
(image) 133440  0.00 -1 s
3 sf
(, ) 134852  0.00 32 s
2 sf
(image\036xy) 145822  0.00 -1 s
3 sf
(, or) 149352  -232.00 32 s
52832.0 190782.0 m
(an) 55496  0.00 -1 s
( ) 56066  -136.00 32 s
2 sf
(image\036z) 65467  0.00 -1 s
3 sf
(, depending on the type of image ) 102294  -136.00 32 s
2 sf
(:data) 108563  0.00 -1 s
3 sf
(. If the ) 116305  -136.00 32 s
2 sf
(:data) 122574  0.00 -1 s
3 sf
( is a) 126985  -68.00 32 s
( list, it is assumed to) 149352  -136.60 32 s
52832.0 193943.0 m
(be) 55496  0.00 -1 s
( a ) 57677  -242.00 32 s
2 sf
(list) 61282  0.00 -1 s
3 sf
( of ) 64560  -242.00 32 s
2 sf
(bitmaps) 74280  0.00 -1 s
3 sf
( and an ) 82411  -242.00 32 s
2 sf
(image\036xy) 93381  0.00 -1 s
3 sf
( is created. If the ) 112005  -193.20 32 s
2 sf
(:data) 118274  0.00 -1 s
3 sf
( is a ) 122803  -241.33 32 s
2 sf
(pixarray) 133306  0.00 -1 s
3 sf
(, an ) 137605  -241.50 32 s
2 sf
(image\036z) 147006  0.00 -1 s
3 sf
( is) 149352  -242.00 32 s
52832.0 197104.0 m
(created. Otherwise,) 74692  0.00 32 s
( the ) 79500  -26.00 32 s
2 sf
(:data) 85769  0.00 -1 s
3 sf
( must be an array of bytes \() 116386  -26.00 32 s
2 sf
(card8) 123283  0.00 -1 s
3 sf
(\), in) 127803  -26.00 32 s
( which case a basic) 149352  -20.00 32 s
52832.0 200265.0 m
2 sf
(image) 60041  0.00 -1 s
3 sf
( object is) 70157  -37.00 32 s
( created.) 79677  -38.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Images) 26852  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(7\03682) 25492  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(image\036height) 50217  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 50835  -88.00 32 s
/timsps10i 4 declareFont
4 sf
(image) 57731  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  height) 61228  -35.00 32 s
3 sf
( \037 Type ) 71860  -35.67 32 s
2 sf
(card16) 80168  0.00 -1 s
3 sf
(.) 80874  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the ) 66418  -26.00 32 s
4 sf
(height) 73472  0.00 -1 s
3 sf
( of the ) 81310  -26.00 32 s
4 sf
(image) 88206  0.00 -1 s
3 sf
( in) 91081  -26.00 32 s
( pixels.) 99207  -27.00 32 s
4 sf
52832.0 39895.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 44681.0 m
(image\036name) 49275  0.00 -1 s
3 sf
( ) 49887  -94.00 32 s
4 sf
(image) 56783  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 47842.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 51003.0 m
(  name) 60306  -25.00 32 s
3 sf
( \037 Type ) 70968  -25.67 32 s
2 sf
(stringable) 83039  0.00 -1 s
3 sf
( or ) 86750  -25.50 32 s
2 sf
(null) 91456  0.00 -1 s
3 sf
(.) 92162  0.00 -1 s
52832.0 55722.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73665  -31.00 32 s
2 sf
(setf) 77894  0.00 -1 s
3 sf
(\) changes the ) 93396  -31.00 32 s
4 sf
(name) 99508  0.00 -1 s
3 sf
( string optionally associated with the ) 141524  -25.50 32 s
4 sf
(image) 148420  0.00 -1 s
3 sf
(.) 149126  0.00 -1 s
4 sf
52832.0 61999.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 66785.0 m
(image\036plist) 47866  0.00 -1 s
3 sf
( ) 48532  -40.00 32 s
4 sf
(image) 55428  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 69946.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 73107.0 m
(  plist) 59093  -6.00 32 s
3 sf
( \037 Type ) 69812  -6.67 32 s
2 sf
(list) 73417  0.00 -1 s
3 sf
(.) 74123  0.00 -1 s
52832.0 77826.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73617  -47.00 32 s
2 sf
(setf) 77846  0.00 -1 s
3 sf
(\) changes the ) 93300  -47.00 32 s
4 sf
(image) 100196  0.00 -1 s
3 sf
( property list. The property list is) 137191  -39.17 32 s
( a hook for) 149352  -47.67 32 s
52832.0 80986.0 m
(added) 59571  0.00 -1 s
( application extensions.) 85976  -83.00 32 s
4 sf
52832.0 87263.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 92050.0 m
(image\036red\036mask) 54134  0.00 -1 s
3 sf
( ) 54741  -99.00 32 s
4 sf
(image) 61637  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 95210.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 98371.0 m
(  mask) 60003  -20.00 32 s
3 sf
( \037 Type) 69996  -20.00 32 s
( ) 70681  -21.00 32 s
2 sf
(pixel) 76482  0.00 -1 s
3 sf
( or ) 80203  -20.50 32 s
2 sf
(null) 84909  0.00 -1 s
3 sf
(.) 85615  0.00 -1 s
52832.0 103090.0 m
(Returns) 61610  0.00 -1 s
( \(and with ) 73353  -135.00 32 s
2 sf
(setf) 77582  0.00 -1 s
3 sf
(\) changes the ) 92772  -135.00 32 s
4 sf
(mask) 98571  0.00 -1 s
3 sf
( which selects the pixel subfield for red inten\036) 149352  -117.75 32 s
52832.0 106251.0 m
(sity) 56909  0.00 -1 s
( values. The ) 70893  -146.00 32 s
4 sf
(mask) 76692  0.00 -1 s
3 sf
( is non\036) 84866  -146.00 32 s
2 sf
(nil) 88003  0.00 -1 s
3 sf
( only for images for ) 110538  -116.80 32 s
2 sf
(:direct\036color) 125579  0.00 -1 s
3 sf
( or ) 129048  -146.50 32 s
2 sf
(:true\036color) 142052  0.00 -1 s
3 sf
( visual) 149352  -147.00 32 s
52832.0 109412.0 m
(types.) 59495  0.00 -1 s
4 sf
52832.0 115689.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 120475.0 m
(image\036width) 49590  0.00 -1 s
3 sf
( ) 50226  -70.00 32 s
4 sf
(image) 57122  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 123636.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 126797.0 m
(  width) 60451  -32.50 32 s
3 sf
( \037 Type ) 71092  -32.67 32 s
2 sf
(card16) 79400  0.00 -1 s
3 sf
(.) 80106  0.00 -1 s
52832.0 131516.0 m
(Returns) 61610  0.00 -1 s
( the ) 66422  -24.00 32 s
4 sf
(width) 72694  0.00 -1 s
3 sf
( of the ) 80538  -24.00 32 s
4 sf
(image) 87434  0.00 -1 s
3 sf
( in) 90311  -24.00 32 s
( pixels.) 98439  -25.00 32 s
4 sf
52832.0 137792.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 142579.0 m
(image\036x\036hot) 48961  0.00 -1 s
3 sf
( ) 49594  -73.00 32 s
4 sf
(image) 56490  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 145740.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 148900.0 m
(  x\036position) 65476  -27.00 32 s
3 sf
( \037 Type ) 76134  -27.00 32 s
2 sf
(card16) 84442  0.00 -1 s
3 sf
( or ) 88150  -27.00 32 s
2 sf
(null) 92856  0.00 -1 s
3 sf
(.) 93562  0.00 -1 s
52832.0 153619.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73143  -205.00 32 s
2 sf
(setf) 77372  0.00 -1 s
3 sf
(\) changes the x position of the hot spot for an image used as a cur\036) 149352  -191.20 32 s
52832.0 156780.0 m
(sor) 56280  0.00 -1 s
( glyph. The hot spot position is specified relative to the upper\036left origin) 134667  -253.92 32 s
( of the ) 141750  -277.67 32 s
4 sf
(image) 148646  0.00 -1 s
3 sf
(.) 149352  0.00 -1 s
4 sf
52832.0 163057.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 167843.0 m
(image\036y\036hot) 48961  0.00 -1 s
3 sf
( ) 49594  -73.00 32 s
4 sf
(image) 56490  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 171004.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 174165.0 m
( y\036position) 64797  -27.00 32 s
3 sf
( \037 Type ) 75455  -27.00 32 s
2 sf
(card16) 83763  0.00 -1 s
3 sf
( or ) 87471  -27.00 32 s
2 sf
(null) 92177  0.00 -1 s
3 sf
(.) 92883  0.00 -1 s
4 sf
( ) 93562  -27.00 32 s
3 sf
52832.0 178884.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73143  -205.00 32 s
2 sf
(setf) 77372  0.00 -1 s
3 sf
(\) changes the y position of the hot spot for an image used as a cur\036) 149352  -191.20 32 s
52832.0 182045.0 m
(sor) 56280  0.00 -1 s
( glyph. The hot spot position is specified relative to the upper\036left origin) 134667  -253.92 32 s
( of the ) 141750  -277.67 32 s
4 sf
(image) 148646  0.00 -1 s
3 sf
(.) 149352  0.00 -1 s
4 sf
52832.0 188321.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
143841.0 208619.0 m
(7\03681) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 7 declareFont
7 sf
20410.0 39376.0 m
95255.0 39466.0 m
(IMAGES) 115856  0.00 -1 s
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
140362 39315 av
146750 26351 as
146750 23300 as
133517 23300 as
133517 27876 as
137624 27876 as
137624 26351 as
142643 26351 as
136255 39315 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
133517 23300 av
133517 23300 as
newpath
133517 43891 av
133517 43891 as
newpath
147206 43891 av
147206 43891 as
newpath
147206 23300 av
147206 23300 as
149351.0 39376.0 m
7 sf
/timsps10 3 declareFont
3 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 5 declareFont
5 sf
20320.0 46871.0 m
(Introduction) 38756  0.00 -1 s
52832.0 h
2 sf
(7.1) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(The X protocol) 75322  -237.00 32 s
( provides for the transfer of images \(two\036dimensional arrays of pix\036) 149352  -213.80 32 s
52832.0 50032.0 m
(el) 54869  0.00 -1 s
( data\) between a client program and a ) 97240  -91.00 32 s
2 sf
(drawable) 108527  0.00 -1 s
3 sf
(. The) 114236  -91.00 32 s
( format for image data can vary) 149352  -76.33 32 s
52832.0 53193.0 m
(considerably.) 67957  0.00 -1 s
( In order to present a uniform data representation for the) 129413  -201.60 32 s
( manipulation of a) 149352  -224.67 32 s
52832.0 56354.0 m
(variety) 60667  0.00 -1 s
( of images, CLX defines a special ) 99349  -27.29 32 s
2 sf
(image) 106558  0.00 -1 s
3 sf
( data type. Additional ) 131592  -31.50 32 s
2 sf
(image) 138801  0.00 -1 s
3 sf
( subtypes) 149352  -32.00 32 s
52832.0 59515.0 m
(\037) 55654  0.00 -1 s
( ) 56476  116.00 32 s
2 sf
(image\036xy) 67446  0.00 -1 s
3 sf
( and ) 73165  116.00 32 s
2 sf
(image\036z) 82566  0.00 -1 s
3 sf
( \037 allow for the representation of an image either) 139994  103.11 32 s
( as a se\036) 149352  115.33 32 s
52832.0 62676.0 m
(quence) 60824  0.00 -1 s
( of bit planes or as an array of pixels. CLX includes functions for accessing ) 145279  -85.60 32 s
2 sf
(im\036) 149352  0.00 -1 s
52832.0 65837.0 m
(age) 56907  0.00 -1 s
3 sf
( objects;) 66391  0.00 32 s
( for transferring) 84195  -29.00 32 s
( image data between ) 107900  -29.50 32 s
2 sf
(image) 115109  0.00 -1 s
3 sf
( objects, ) 125162  -29.50 32 s
2 sf
(drawables) 137547  0.00 -1 s
3 sf
(, and files;) 149352  -15.00 32 s
52832.0 68998.0 m
(and) 56907  0.00 -1 s
( also for direct transfer of raw image) 98059  -20.00 32 s
( data.) 104151  -21.00 32 s
20320.0 75997.0 m
0.0 0.0 m
newpath
20455 74373 av
149013 74371 as
[] 0 setdash
dp
149352.0 75997.0 m
5 sf
20320.0 79383.0 m
(Image) 29346  0.00 -1 s
( Types) 38856  8.00 32 s
52832.0 h
2 sf
(7.2) 56360  0.00 -1 s
3 sf
() 56360  0.00 -1 s
58555.0 h
(The) 62943  0.00 -1 s
( ) 63512  -137.00 32 s
2 sf
(image) 70721  0.00 -1 s
3 sf
( data type is the base type for all ) 106719  -136.67 32 s
2 sf
(image) 113928  0.00 -1 s
3 sf
( objects. ) 123767  -136.50 32 s
2 sf
(image\036xy) 134737  0.00 -1 s
3 sf
( and ) 139951  -136.50 32 s
2 sf
(image\036z) 149352  0.00 -1 s
3 sf
52832.0 82544.0 m
(are) 56277  0.00 -1 s
( subtypes of the ) 74404  -93.00 32 s
2 sf
(image) 81613  0.00 -1 s
3 sf
( type) 87085  -93.00 32 s
( which furnish accessors specialized for different image) 149352  -93.57 32 s
52832.0 85705.0 m
(representations.) 70620  0.00 -1 s
52832.0 92637.0 m
0.0 0.0 m
newpath
149013 91078 av
52967 91080 as
[] 0 setdash
dp
149352.0 92637.0 m
20320.0 95459.0 m
33663.0 h
2 sf
(Basic) 40091  0.00 -1 s
( Images) 49378  -40.00 32 s
52832.0 h
(7.2.1) 58477  0.00 -1 s
3 sf
() 58477  0.00 -1 s
60672.0 h
(The) 65060  0.00 -1 s
( following paragraphs describe the CLX functions that can be used to access) 149352  -159.58 32 s
52832.0 98620.0 m
(all) 55653  0.00 -1 s
( types of ) 66001  -25.67 32 s
2 sf
(image) 73210  0.00 -1 s
3 sf
( objects.) 82590  -26.00 32 s
2 sf
34544.0 104896.0 m
(image\036blue\036mask) 55234  0.00 -1 s
3 sf
( ) 55848  -92.00 32 s
/timsps10i 4 declareFont
4 sf
(image) 62744  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 108057.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 111218.0 m
(  mask) 60003  -20.00 32 s
3 sf
( \037 Type) 69996  -20.00 32 s
( ) 70681  -21.00 32 s
2 sf
(pixel) 76482  0.00 -1 s
3 sf
( or ) 80203  -20.50 32 s
2 sf
(null) 84909  0.00 -1 s
3 sf
(.) 85615  0.00 -1 s
52832.0 115937.0 m
(Returns) 61610  0.00 -1 s
( \(and with ) 72954  -268.00 32 s
2 sf
(setf) 77183  0.00 -1 s
3 sf
(\) changes the ) 91974  -268.00 32 s
4 sf
(mask) 97773  0.00 -1 s
3 sf
( that selects the pixel subfield for blue intensity) 149352  -234.25 32 s
52832.0 119098.0 m
(values.) 60748  0.00 -1 s
( The ) 67098  275.00 32 s
4 sf
(mask) 72897  0.00 -1 s
3 sf
( is non\036) 81914  275.50 32 s
2 sf
(nil) 85051  0.00 -1 s
3 sf
( only for images for ) 109272  220.40 32 s
2 sf
(:direct\036color) 124313  0.00 -1 s
3 sf
( or ) 128626  275.50 32 s
2 sf
(:true\036color) 141630  0.00 -1 s
3 sf
( visual) 149352  275.00 32 s
52832.0 122259.0 m
(types.) 59495  0.00 -1 s
4 sf
52832.0 128535.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 133322.0 m
(image\036depth) 49591  0.00 -1 s
3 sf
( ) 50203  -94.00 32 s
4 sf
(image) 57099  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 136483.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 139644.0 m
(  depth) 60446  -34.00 32 s
3 sf
( \037 Type ) 71081  -34.67 32 s
2 sf
(card8) 77978  0.00 -1 s
3 sf
(.) 78684  0.00 -1 s
52832.0 144362.0 m
(Returns) 61610  0.00 -1 s
( the ) 66432  -19.00 32 s
4 sf
(depth) 72702  0.00 -1 s
3 sf
( \(that is, the) 85970  -19.00 32 s
( number of bits per pixel\) for the ) 123431  -19.50 32 s
4 sf
(image) 130327  0.00 -1 s
3 sf
(. ) 131719  -20.00 32 s
4 sf
52832.0 150639.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
2 sf
34544.0 155425.0 m
(image\036green\036mask) 56798  0.00 -1 s
3 sf
( ) 57383  -121.00 32 s
4 sf
(image) 64279  0.00 -1 s
2 sf
139373.0 h
3 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 158586.0 m
52832.0 h
3 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 161747.0 m
(  mask) 60003  -20.00 32 s
3 sf
( \037 Type) 69996  -20.00 32 s
( ) 70681  -21.00 32 s
2 sf
(pixel) 76482  0.00 -1 s
3 sf
( or ) 80203  -20.50 32 s
2 sf
(null) 84909  0.00 -1 s
3 sf
(.) 85615  0.00 -1 s
52832.0 166466.0 m
(Returns) 61610  0.00 -1 s
( \(and with ) 73317  -147.00 32 s
2 sf
(setf) 77546  0.00 -1 s
3 sf
(\) changes the mask that selects the pixel subfield for green inten\036) 149352  -133.55 32 s
52832.0 169627.0 m
(sity) 56909  0.00 -1 s
( values. The mask is non\036) 84959  -159.00 32 s
2 sf
(nil) 88096  0.00 -1 s
3 sf
( only for images for ) 110577  -127.60 32 s
2 sf
(:direct\036color) 125618  0.00 -1 s
3 sf
( or ) 129061  -159.50 32 s
2 sf
(:true\036color) 142065  0.00 -1 s
3 sf
( visual) 149352  -160.00 32 s
52832.0 172788.0 m
(types.) 59495  0.00 -1 s
4 sf
52832.0 179064.0 m
(image) 59728  0.00 -1 s
( \037 ) 63577  -36.00 32 s
3 sf
(An ) 67696  -35.00 32 s
2 sf
(image) 74905  0.00 -1 s
3 sf
( object.) 83177  -36.00 32 s
eop
initialstate restore
