%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 9 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps10i /ILtimsi 10 map
	/timsps8i /ILtimsi 8 map
	/timsps18b /ILtimsb 18 map
	/timsps18 /ILtims 18 map
	/timsps10b /ILtimsb 10 map
	/timsps12b /ILtimsb 12 map
	/symbb8 /ILsymbb 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 9 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Cursors) 27611  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(10\036110) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18 3 declareFont
3 sf
20320.0 24271.0 m
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
141720.0 8195.0 m
(Cursors) 149011  0.00 -1 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(10\036109) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(query\036best\036cursor ) 56818  -61.00 32 s
/timsps10i 4 declareFont
4 sf
(width height display) 79587  -60.50 32 s
2 sf
139373.0 h
/timsps10 5 declareFont
5 sf
(Function) 149407  0.00 -1 s
34544.0 25739.0 m
52832.0 h
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
( width) 59769  -41.00 32 s
5 sf
(,) 60475  0.00 -1 s
4 sf
( height \037 ) 72033  -41.00 32 s
5 sf
(Type ) 78497  -41.00 32 s
2 sf
(card16) 86805  0.00 -1 s
5 sf
(.) 87511  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the cursor size closest to the requested ) 104770  -189.00 32 s
4 sf
(width) 111042  0.00 -1 s
5 sf
( and ) 116151  -189.00 32 s
4 sf
(height) 123205  0.00 -1 s
5 sf
( that is best suited to the) 149352  -188.83 32 s
52832.0 36779.0 m
(display.) 61690  0.00 -1 s
( The ) 67135  -177.50 32 s
4 sf
(width) 73407  0.00 -1 s
5 sf
( and ) 78539  -177.50 32 s
4 sf
(height) 85593  0.00 -1 s
5 sf
( returned define the largest cursor size supported by the X) 149352  -159.80 32 s
52832.0 39940.0 m
(server.) 60431  0.00 -1 s
( Clients should always be prepared to limit cursor sizes to those supported by the) 149352  -176.36 32 s
52832.0 43101.0 m
(server.) 60431  0.00 -1 s
4 sf
52832.0 49378.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67875  -28.67 32 s
2 sf
(display) 76501  0.00 -1 s
5 sf
( object.) 84780  -29.00 32 s
4 sf
52832.0 54164.0 m
(width) 59104  0.00 -1 s
5 sf
(,) 59810  0.00 -1 s
4 sf
( height) 67570  0.00 32 s
5 sf
( \037 The requested cursor size.) 101108  -32.00 32 s
( ) 101781  -33.00 32 s
2 sf
34544.0 58951.0 m
(recolor\036cursor) 51938  0.00 -1 s
5 sf
( ) 52553  -91.00 32 s
4 sf
(cursor foreground) 73236  -91.00 32 s
( background) 87331  -92.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 63669.0 m
(Changes) 62551  0.00 -1 s
( the color of the specified ) 93043  171.00 32 s
4 sf
(cursor) 100412  0.00 -1 s
5 sf
(. If the cursor is displayed on a screen, the) 149352  152.11 32 s
52832.0 66830.0 m
(change) 60824  0.00 -1 s
( is visible immediately.) 87037  -41.67 32 s
4 sf
52832.0 73107.0 m
(cursor) 60201  0.00 -1 s
5 sf
( \037 A ) 67085  -31.00 32 s
2 sf
(cursor) 74922  0.00 -1 s
5 sf
( object.) 83199  -31.00 32 s
4 sf
52832.0 77893.0 m
(foreground) 65531  0.00 -1 s
5 sf
( \037 A ) 72394  -38.00 32 s
2 sf
(color) 78506  0.00 -1 s
5 sf
( object specifying the new foreground color.) 128355  -37.83 32 s
4 sf
52832.0 82680.0 m
(background) 66313  0.00 -1 s
5 sf
( \037 A ) 73150  -46.67 32 s
2 sf
(color) 79262  0.00 -1 s
5 sf
( object specifying the new background color.) 129845  -46.50 32 s
20320.0 88189.0 m
0.0 0.0 m
newpath
20455 86565 av
148878 86563 as
[] 0 setdash
dp
149352.0 88189.0 m
/timsps12b 6 declareFont
6 sf
20320.0 91575.0 m
(Cursor) 30664  0.00 -1 s
52832.0 h
2 sf
(10.4) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(The) 64354  0.00 -1 s
( complete set of cursor attributes is discussed in the following) 149352  1524.30 32 s
2 sf
6 sf
20320.0 94962.0 m
(Attributes) 35176  0.00 -1 s
52832.0 h
5 sf
(paragraphs.) 65917  0.00 -1 s
2 sf
34544.0 101239.0 m
(cursor\036display) 51946  0.00 -1 s
5 sf
( ) 52575  -77.00 32 s
4 sf
(cursor) 59944  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 104400.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 107561.0 m
(  display ) 63036  -22.00 32 s
5 sf
(\037 Type ) 73025  -22.00 32 s
2 sf
(display) 81651  0.00 -1 s
5 sf
(. ) 83041  -22.00 32 s
52832.0 112279.0 m
(Returns) 61610  0.00 -1 s
( the ) 66416  -27.00 32 s
2 sf
(display) 75042  0.00 -1 s
5 sf
( object associated with the specified ) 116260  -27.00 32 s
4 sf
(cursor) 123629  0.00 -1 s
5 sf
(.) 124335  0.00 -1 s
( ) 125013  -28.00 32 s
4 sf
52832.0 118556.0 m
(cursor \037) 63389  -27.00 32 s
( ) 64069  -26.00 32 s
5 sf
(A) 66106  0.00 -1 s
( ) 66785  -27.00 32 s
2 sf
(cursor) 74622  0.00 -1 s
5 sf
( object. ) 83583  -26.50 32 s
2 sf
34544.0 123342.0 m
(cursor\036equal) 49906  0.00 -1 s
( ) 50557  -55.00 32 s
4 sf
(cursor\0361) 60276  0.00 -1 s
5 sf
( ) 60927  -55.00 32 s
4 sf
(cursor\0362) 70646  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 128061.0 m
(Returns) 61610  0.00 -1 s
( true if the two arguments refer to the same server) 115553  -232.00 32 s
( resource and ) 130605  -232.67 32 s
2 sf
(nil) 133742  0.00 -1 s
5 sf
( if they do not.) 149352  -232.50 32 s
4 sf
52832.0 134338.0 m
(cursor\0361) 62551  0.00 -1 s
5 sf
(,) 63257  0.00 -1 s
( ) 63931  -32.00 32 s
4 sf
(cursor\0362 ) 74324  -32.00 32 s
5 sf
(\037 ) 77820  -32.00 32 s
2 sf
(cursor) 85657  0.00 -1 s
5 sf
( objects.) 95030  -33.00 32 s
2 sf
34544.0 139124.0 m
(cursor\036id) 45673  0.00 -1 s
5 sf
( ) 46321  -58.00 32 s
4 sf
(cursor) 53690  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 142285.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 145446.0 m
(  id ) 57067  -26.00 32 s
5 sf
(\037 Type ) 67049  -25.50 32 s
2 sf
(resource\036id.) 81390  0.00 -1 s
5 sf
( ) 82070  -26.00 32 s
52832.0 150165.0 m
(Returns) 61610  0.00 -1 s
( the unique resource ID that has been assigned to the specified ) 132268  -28.83 32 s
4 sf
(cursor) 139637  0.00 -1 s
5 sf
(.) 140343  0.00 -1 s
4 sf
52832.0 156441.0 m
(cursor) 60201  0.00 -1 s
( ) 60876  -31.00 32 s
5 sf
(\037 A ) 67085  -31.00 32 s
2 sf
(cursor) 74922  0.00 -1 s
5 sf
( object.) 83199  -31.00 32 s
2 sf
34544.0 161228.0 m
(cursor\036p) 44889  0.00 -1 s
5 sf
( ) 45531  -64.00 32 s
4 sf
(cursor) 52900  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 164389.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 167550.0 m
(  cursor\036p) 63911  -26.00 32 s
5 sf
( \037 Type ) 74573  -25.67 32 s
2 sf
(boolean) 83981  0.00 -1 s
5 sf
(. ) 85367  -26.00 32 s
52832.0 172268.0 m
(Returns true if the argument is a ) 89727  -25.00 32 s
2 sf
(cursor) 97564  0.00 -1 s
5 sf
( object) 105142  -24.00 32 s
( and ) 110580  -24.50 32 s
2 sf
(nil) 113717  0.00 -1 s
5 sf
( otherwise.) 126074  -25.00 32 s
2 sf
34544.0 178545.0 m
(cursor\036plist) 48494  0.00 -1 s
5 sf
( ) 49166  -34.00 32 s
4 sf
(cursor) 56535  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 181706.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 184867.0 m
(  plist) 59093  -6.00 32 s
5 sf
( \037 A property list.) 80467  -6.00 32 s
52832.0 189586.0 m
(Returns) 61610  0.00 -1 s
( and) 66238  -153.00 32 s
( \(with ) 73298  -153.50 32 s
2 sf
(setf) 77527  0.00 -1 s
5 sf
(\) sets the property list for the specified ) 120499  -153.50 32 s
4 sf
(cursor) 127868  0.00 -1 s
5 sf
(. This function pro\036) 149352  -153.67 32 s
52832.0 192746.0 m
(vides) 58789  0.00 -1 s
( a hook where extensions can add data.) 102548  -40.86 32 s
4 sf
52832.0 199023.0 m
(cursor) 60201  0.00 -1 s
( ) 60876  -31.00 32 s
5 sf
(\037 A ) 67085  -31.00 32 s
2 sf
(cursor) 74922  0.00 -1 s
5 sf
( object.) 83199  -31.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Cursors) 27611  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(10\036108) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
52832.0 22578.0 m
(:mask) 60199  0.00 -1 s
/timsps10 5 declareFont
5 sf
( \037) 63695  -32.00 32 s
( The mask pixmap.) 85231  -32.67 32 s
2 sf
52832.0 27364.0 m
(:x) 55182  0.00 -1 s
5 sf
(,) 55888  0.00 -1 s
( ) 56571  -23.00 32 s
2 sf
(:y) 58921  0.00 -1 s
5 sf
( \037 The hot spot position in the ) 94642  -23.00 32 s
2 sf
(:source) 103418  0.00 -1 s
5 sf
(. This argument is) 123729  -23.00 32 s
( required.) 134518  -24.00 32 s
2 sf
52832.0 32151.0 m
(:foreground) 67409  0.00 -1 s
5 sf
( \037 A ) 74554  56.00 32 s
2 sf
(color) 80666  0.00 -1 s
5 sf
( object specifying the foreground color. This argument is re\036) 149352  56.22 32 s
57912.0 35312.0 m
(quired.) 65827  0.00 -1 s
2 sf
52832.0 40098.0 m
(:background) 68355  0.00 -1 s
5 sf
( \037 A ) 75068  -88.00 32 s
2 sf
(color) 81180  0.00 -1 s
5 sf
( object specifying the background color. This) 131830  -88.00 32 s
( argument is re\036) 149352  -88.67 32 s
57912.0 43259.0 m
(quired.) 65827  0.00 -1 s
2 sf
34544.0 48046.0 m
(create\036glyph\036cursor) 58365  0.00 -1 s
5 sf
( &key ) 65931  -58.00 32 s
2 sf
(:source\036font :source\036char :mask\036font) 110165  -58.00 32 s
( ) 110812  -59.00 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 51206.0 m
(\() 53771  0.00 -1 s
2 sf
(:mask\036char) 67563  0.00 -1 s
5 sf
( 0\)) 70540  -79.00 32 s
2 sf
( :foreground :background) 101894  -79.00 32 s
5 sf
34544.0 54367.0 m
52832.0 h
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
/timsps10i 4 declareFont
4 sf
52832.0 57528.0 m
( cursor \037 ) 64730  -32.67 32 s
5 sf
(Type ) 71202  -33.00 32 s
2 sf
(cursor) 79039  0.00 -1 s
5 sf
(.) 79745  0.00 -1 s
52832.0 62247.0 m
(Creates) 61294  0.00 -1 s
( and returns a cursor defined by font glyphs. The source bitmap) 130561  -215.00 32 s
( is defined by the) 149352  -161.75 32 s
52832.0 65408.0 m
2 sf
(:source\036font) 67405  0.00 -1 s
5 sf
( and ) 73324  216.00 32 s
2 sf
(:source\036char) 88525  0.00 -1 s
5 sf
(. The mask bitmap is defined by the ) 131191  189.38 32 s
2 sf
(:mask\036font) 144355  0.00 -1 s
5 sf
( and) 149352  216.00 32 s
52832.0 68569.0 m
2 sf
(:mask\036char) 66624  0.00 -1 s
5 sf
(.) 67330  0.00 -1 s
( It is an error if the ) 87870  -189.00 32 s
2 sf
(:source\036char) 103071  0.00 -1 s
5 sf
( and ) 108369  -94.50 32 s
2 sf
(:mask\036char) 122161  0.00 -1 s
5 sf
( are not valid indexes for) 149352  -188.60 32 s
52832.0 71730.0 m
(the) 56280  0.00 -1 s
( ) 56926  -60.00 32 s
2 sf
(:source\036font) 71499  0.00 -1 s
5 sf
( and ) 76866  -60.00 32 s
2 sf
(:mask\036font) 90030  0.00 -1 s
5 sf
(, respectively. The) 110816  -30.00 32 s
( hot spot position is defined by the) 149352  -60.57 32 s
52832.0 74890.0 m
(\177character) 64423  0.00 -1 s
( origin" of  the source glyph, that is, the position [- ) 122435  -38.50 32 s
4 sf
(char\036left\036bearing) 141870  0.00 -1 s
5 sf
(, ) 143240  -42.00 32 s
4 sf
(char\036) 149352  0.00 -1 s
52832.0 78051.0 m
(ascent) 60042  0.00 -1 s
5 sf
(] relative) 70148  0.00 32 s
( to the upper left corner) 96567  -29.00 32 s
( of the source glyph bitmap.) 128084  -29.60 32 s
52832.0 84328.0 m
(Source) 60668  0.00 -1 s
( and mask bits are compared after aligning the character origins of the source and) 149352  -225.64 32 s
52832.0 87489.0 m
(mask) 58789  0.00 -1 s
( glyphs. The source and mask glyphs need not have the same size) 130952  -145.75 32 s
( or character ori\036) 149352  -159.67 32 s
52832.0 90650.0 m
(gin) 56438  0.00 -1 s
( position.) 66924  -20.00 32 s
( If the ) 74306  -20.67 32 s
2 sf
(:mask\036font) 87470  0.00 -1 s
5 sf
( is omitted, all source pixels are drawn.) 131628  -17.57 32 s
52832.0 96926.0 m
(An) 56280  0.00 -1 s
( X server) 66260  -181.00 32 s
( may not be able to support every cursor size. A server is free to modify any) 149352  -170.19 32 s
52832.0 100087.0 m
(component) 65372  0.00 -1 s
( of the cursor to satisfy hardware or software limitations.) 129280  -21.67 32 s
52832.0 106364.0 m
(Either) 59727  0.00 -1 s
( of the ) 67574  -23.00 32 s
2 sf
(:source\036font) 82147  0.00 -1 s
5 sf
( or ) 85862  -23.50 32 s
2 sf
(:mask\036font) 99026  0.00 -1 s
5 sf
( can be closed after the cursor is created.) 144701  -20.63 32 s
2 sf
52832.0 112641.0 m
(:source\036font) 67405  0.00 -1 s
5 sf
( \037 The source font. This is a required argument.) 122259  -26.89 32 s
2 sf
52832.0 117427.0 m
(:source\036char) 68033  0.00 -1 s
5 sf
( \037 An index specifying a glyph in the source font. This is) 131274  -197.08 32 s
( a required argu\036) 149352  -215.67 32 s
57912.0 120588.0 m
(ment.) 64261  0.00 -1 s
2 sf
52832.0 125374.0 m
(:mask\036font) 65996  0.00 -1 s
5 sf
( \037 The mask font.) 87163  -18.75 32 s
4 sf
( ) 87850  -19.00 32 s
2 sf
52832.0 130161.0 m
(:mask\036char) 66624  0.00 -1 s
5 sf
( \037 An index specifying a glyph in the mask font.) 122214  -29.70 32 s
2 sf
52832.0 134947.0 m
(:foreground) 67409  0.00 -1 s
5 sf
( \037 A ) 73673  -237.67 32 s
2 sf
(color) 79785  0.00 -1 s
5 sf
( object specifying the foreground color. This is a required argu\036) 149352  -213.80 32 s
57912.0 138108.0 m
(ment.) 64261  0.00 -1 s
2 sf
52832.0 142895.0 m
(:background) 68355  0.00 -1 s
5 sf
( \037 A ) 74891  -147.00 32 s
2 sf
(color) 81003  0.00 -1 s
5 sf
( object specifying the background color. This is a required ar\036) 149352  -132.00 32 s
57912.0 146056.0 m
(gument.) 67083  0.00 -1 s
4 sf
( ) 67733  -56.00 32 s
2 sf
34544.0 150842.0 m
(free\036cursor) 48018  0.00 -1 s
5 sf
( ) 48646  -78.00 32 s
4 sf
(cursor) 56015  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 155561.0 m
(Destroys) 62863  0.00 -1 s
( the ) 67329  -197.00 32 s
2 sf
(cursor) 75166  0.00 -1 s
5 sf
( object. Cursor server resources are) 113986  -197.00 32 s
( freed when no other  references) 149352  -164.67 32 s
52832.0 158722.0 m
(remain.) 61373  0.00 -1 s
4 sf
52832.0 164998.0 m
(cursor) 60201  0.00 -1 s
5 sf
( \037 A ) 67085  -31.00 32 s
2 sf
(cursor) 74922  0.00 -1 s
5 sf
( object.) 83199  -31.00 32 s
20320.0 170507.0 m
0.0 0.0 m
newpath
20455 168883 av
148878 168881 as
[] 0 setdash
dp
149352.0 170507.0 m
/timsps12b 6 declareFont
6 sf
20320.0 173894.0 m
(Cursor) 30664  0.00 -1 s
52832.0 h
2 sf
(10.3) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(The) 64354  0.00 -1 s
( following paragraphs describe the CLX functions used to operate) 138357  -41.00 32 s
6 sf
20320.0 177281.0 m
(Functions) 34619  0.00 -1 s
52832.0 h
5 sf
(on) 55654  0.00 -1 s
( ) 56304  -56.00 32 s
2 sf
(cursor) 64141  0.00 -1 s
5 sf
( objects.) 73491  -56.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(10\036107) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 7 declareFont
7 sf
20410.0 39376.0 m
91620.0 39466.0 m
(CURSORS) 115887  0.00 -1 s
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0.0 sw
270.0 sw
0.0 sw
270.0 sw
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
144272 39315 av
146476 37028 as
146476 25588 as
144272 23300 as
139132 23300 as
139132 23300 as
140233 26351 as
140233 26351 as
143171 26351 as
143171 36265 as
140233 36265 as
140233 36265 as
139132 39315 as
139132 39315 as
144272 39315 as
fp
newpath
144272 39315 av
146476 37028 as
146476 25588 as
144272 23300 as
139132 23300 as
[] 0 setdash
dp
newpath
0.0 sw
139132 23300 av
140233 26351 as
newpath
270.0 sw
140233 26351 av
143171 26351 as
143171 36265 as
140233 36265 as
[] 0 setdash
dp
newpath
0.0 sw
140233 36265 av
139132 39315 as
newpath
270.0 sw
139132 39315 av
144272 39315 as
[] 0 setdash
dp
0.0 sw
270.0 sw
0.0 sw
270.0 sw
/drawmode PL_REPLACE def
newpath
0.0 sw
/drawmode PL_SET def
139132 39315 av
140233 36265 as
140233 36265 as
140233 26351 as
140233 26351 as
139132 23300 as
139132 23300 as
136929 25588 as
136929 37028 as
139132 39315 as
fp
newpath
139132 39315 av
140233 36265 as
newpath
270.0 sw
140233 36265 av
140233 26351 as
[] 0 setdash
dp
newpath
0.0 sw
140233 26351 av
139132 23300 as
newpath
270.0 sw
139132 23300 av
136929 25588 as
136929 37028 as
139132 39315 as
[] 0 setdash
dp
0.0 sw
newpath
135827 43891 av
135827 43891 as
newpath
135827 23300 av
135827 23300 as
newpath
147577 23300 av
147577 23300 as
newpath
147577 43891 av
147577 43891 as
270.0 sw
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
134900 39315 av
134900 23300 as
131963 23300 as
129025 26351 as
129025 27876 as
131596 27876 as
131596 39315 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
128658 23300 av
128658 23300 as
newpath
128658 43891 av
128658 43891 as
newpath
136369 43891 av
136369 43891 as
newpath
136369 23300 av
136369 23300 as
149351.0 39376.0 m
7 sf
/timsps10 5 declareFont
5 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 6 declareFont
6 sf
20320.0 46871.0 m
(Introduction) 38756  0.00 -1 s
52832.0 h
2 sf
(10.1) 57771  0.00 -1 s
60121.0 h
() 60121  0.00 -1 s
5 sf
(A ) 62817  -47.00 32 s
/timsps10i 4 declareFont
4 sf
(cursor) 70186  0.00 -1 s
5 sf
( is a) 74639  -47.00 32 s
( visible shape that appears at the current position of the pointer de\036) 149352  -43.58 32 s
52832.0 50032.0 m
(vice.) 58239  0.00 -1 s
( The) 63435  102.00 32 s
( cursor shape moves with the pointer to provide continuous feedback to the) 149352  93.00 32 s
52832.0 53193.0 m
(user) 57533  0.00 -1 s
( about the current location) 86836  -80.00 32 s
( of the pointer. Each window can have a cursor attribute) 149352  -72.50 32 s
52832.0 56354.0 m
(that) 57064  0.00 -1 s
( defines the appearance of the pointer cursor when the pointer position lies within) 149352  15.69 32 s
52832.0 59515.0 m
(the) 56280  0.00 -1 s
( window. See) 71436  -64.00 32 s
( ) 72077  -65.00 32 s
2 sf
(window\036cursor) 90260  0.00 -1 s
5 sf
(.) 90966  0.00 -1 s
52832.0 65792.0 m
(A) 54869  0.00 -1 s
( cursor image is composed of a source bitmap, a mask bitmap, a ) 125069  -213.00 32 s
4 sf
(hot spot) 133872  -213.00 32 s
5 sf
(, a) 136324  -213.00 32 s
( foreground) 149352  -214.00 32 s
52832.0 68953.0 m
(color,) 59336  0.00 -1 s
( and a background color. Either 1\036bit pixmaps or font glyphs can be) 132583  -264.00 32 s
( used to specify) 149352  -288.67 32 s
52832.0 72113.0 m
(source) 60197  0.00 -1 s
( and mask bitmaps. The source bitmap identifies the foreground and background) 149352  -159.82 32 s
52832.0 75274.0 m
(pixels) 59573  0.00 -1 s
( of the cursor image; the mask bitmap identifies which source pixels are actually) 149352  -80.92 32 s
52832.0 78435.0 m
(drawn.) 60589  0.00 -1 s
( The mask bitmap thus allows a cursor to assume any shape. The) 131407  -192.50 32 s
( hot spot defines) 149352  -210.67 32 s
52832.0 81596.0 m
(the position) 66080  0.00 32 s
( within the cursor image that is displayed at the pointer position.) 138379  -25.55 32 s
52832.0 87873.0 m
(In) 55182  0.00 -1 s
( CLX, a cursor is represented by a ) 92141  -288.00 32 s
2 sf
(cursor) 99978  0.00 -1 s
5 sf
( object. This section describes the CLX func\036) 149352  -246.43 32 s
52832.0 91034.0 m
(tions) 58320  0.00 -1 s
( to:) 61999  -6.00 32 s
/symbb8 8 declareFont
8 sf
52832.0 97581.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Create) 65276  0.00 -1 s
( and free cursor objects ) 92185  -25.00 32 s
8 sf
52832.0 104129.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Change) 66533  0.00 -1 s
( cursor colors ) 82499  -33.00 32 s
8 sf
52832.0 110676.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Inquire) 66060  0.00 -1 s
( the best cursor size ) 88934  -17.80 32 s
8 sf
52832.0 117224.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Access) 65904  0.00 -1 s
( cursor attributes) 84836  -16.00 32 s
( ) 85525  -17.00 32 s
20320.0 124223.0 m
0.0 0.0 m
newpath
20455 122599 av
148878 122597 as
[] 0 setdash
dp
149352.0 124223.0 m
6 sf
20320.0 127610.0 m
(Creating) 33108  0.00 -1 s
( ) 33980  25.00 32 s
52832.0 h
2 sf
(10.2) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(The) 64354  0.00 -1 s
( following paragraphs describe the CLX functions used to create) 149352  1355.00 32 s
6 sf
20320.0 131335.0 m
(Cursors) 31981  0.00 -1 s
49378.0 h
5 sf
52832.0 h
(and) 56907  0.00 -1 s
( free ) 62569  -67.00 32 s
2 sf
(cursor) 70406  0.00 -1 s
5 sf
( objects.) 79812  0.00 32 s
2 sf
34544.0 137612.0 m
(create\036cursor) 50682  0.00 -1 s
5 sf
( &key ) 58250  -57.00 32 s
2 sf
(:source :mask :x :y :foreground) 96266  -57.00 32 s
( :background) 112437  -58.00 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
34544.0 140772.0 m
52832.0 h
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 143933.0 m
( cursor \037 ) 64730  -32.67 32 s
5 sf
(Type ) 71202  -33.00 32 s
2 sf
(cursor) 79039  0.00 -1 s
5 sf
(.) 79745  0.00 -1 s
52832.0 148652.0 m
(Creates) 61294  0.00 -1 s
( and returns a cursor. ) 85319  -85.00 32 s
2 sf
(:x) 87669  0.00 -1 s
5 sf
( and ) 92986  -85.00 32 s
2 sf
(:y) 95336  0.00 -1 s
5 sf
( define the position of the hot spot relative to the) 149352  -84.90 32 s
52832.0 151813.0 m
(origin) 59572  0.00 -1 s
( of the) 66576  -103.00 32 s
( ) 67178  -104.00 32 s
2 sf
(:source. :foreground) 91840  -103.00 32 s
5 sf
( and ) 97120  -103.50 32 s
2 sf
(:background) 112643  0.00 -1 s
5 sf
( colors must be specified, even if) 149352  -86.33 32 s
52832.0 154974.0 m
(the) 56280  0.00 -1 s
( server only has a ) 76630  -21.00 32 s
2 sf
(:static\036gray) 90418  0.00 -1 s
5 sf
( or ) 94138  -21.00 32 s
2 sf
(:gray\036scale) 107301  0.00 -1 s
5 sf
( screen. The ) 121677  -14.33 32 s
2 sf
(:source) 130453  0.00 -1 s
5 sf
(, ) 131843  -22.00 32 s
2 sf
(:x) 134193  0.00 -1 s
5 sf
(, and ) 140343  -21.50 32 s
2 sf
(:y) 142693  0.00 -1 s
5 sf
( argu\036) 149352  0.00 32 s
52832.0 158135.0 m
(ments) 59573  0.00 -1 s
( must also be) 74314  -25.00 32 s
( specified.) 85886  -26.00 32 s
52832.0 164411.0 m
(The) 57220  0.00 -1 s
( cursor image is drawn by drawing a pixel from the ) 113211  -231.91 32 s
2 sf
(:source) 121987  0.00 -1 s
5 sf
( bitmap at every position) 149352  -173.75 32 s
52832.0 167572.0 m
(where) 59725  0.00 -1 s
( the corresponding bit in the ) 90680  -249.00 32 s
2 sf
(:mask) 98047  0.00 -1 s
5 sf
( bitmap is 1. If the corresponding ) 134801  -213.43 32 s
2 sf
(:source) 143577  0.00 -1 s
5 sf
( bit is) 149352  -249.00 32 s
52832.0 170733.0 m
(1,) 54949  0.00 -1 s
( a pixel) 63211  -23.00 32 s
( is drawn in the ) 81199  -23.60 32 s
2 sf
(:foreground) 95776  0.00 -1 s
5 sf
( color; otherwise, a pixel is drawn in the ) 141672  -20.89 32 s
2 sf
(:back\036) 149352  0.00 -1 s
52832.0 173894.0 m
(ground) 61614  0.00 -1 s
5 sf
( color. If the ) 75564  -176.00 32 s
2 sf
(:mask) 82931  0.00 -1 s
5 sf
( is omitted, all ) 99258  -132.00 32 s
2 sf
(:source) 108034  0.00 -1 s
5 sf
( pixels are drawn. If given, the ) 141985  -176.57 32 s
2 sf
(:mask) 149352  0.00 -1 s
5 sf
52832.0 177055.0 m
(must) 58320  0.00 -1 s
( be the same size as the ) 85187  -24.71 32 s
2 sf
(:source) 93963  0.00 -1 s
5 sf
(.) 94669  0.00 -1 s
52832.0 183332.0 m
(An) 56280  0.00 -1 s
( X server may not be) 79014  -171.00 32 s
( able to support every cursor size. A server is free to modify any) 149352  -171.54 32 s
52832.0 186492.0 m
(component) 65372  0.00 -1 s
( of the cursor to satisfy hardware or software limitations.) 129280  -21.67 32 s
52832.0 192769.0 m
(The) 57220  0.00 -1 s
( ) 57683  -243.00 32 s
2 sf
(:source) 66459  0.00 -1 s
5 sf
( and ) 71460  -243.00 32 s
2 sf
(:mask) 78827  0.00 -1 s
5 sf
( can be freed immediately after the cursor is created.) 135878  -243.00 32 s
( Subsequent) 149352  -244.00 32 s
52832.0 195930.0 m
(drawing) 62078  0.00 -1 s
( in the ) 69743  -32.00 32 s
2 sf
(:source) 78519  0.00 -1 s
5 sf
( or ) 82249  -16.00 32 s
2 sf
(:mask) 89616  0.00 -1 s
5 sf
( pixmap has an undefined effect on the) 133200  -32.00 32 s
( cursor.) 141630  -33.00 32 s
2 sf
52832.0 202207.0 m
(:source) 61608  0.00 -1 s
5 sf
( \037 The source) 78202  -33.00 32 s
( pixmap. This argument is required.) 118398  -33.60 32 s
eop
initialstate restore
