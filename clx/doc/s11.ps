%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 9 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps10i /ILtimsi 10 map
	/timsps18b /ILtimsb 18 map
	/timsps18 /ILtims 18 map
	/timsps12b /ILtimsb 12 map
	/timsps10b /ILtimsb 10 map
	/timsps8i /ILtimsi 8 map
	/symbb8 /ILsymbb 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 9 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Atoms, Properties, and Selections) 50845  -25.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(11\036118) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18 3 declareFont
3 sf
20320.0 24271.0 m
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
118488.0 8466.0 m
(Atoms, Properties, and Selections) 149013  -25.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(11\036117) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(selection\036owner) 53350  0.00 -1 s
( ) 54009  -47.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 62161  0.00 -1 s
( selection) 72850  -48.00 32 s
/timsps10 5 declareFont
5 sf
( &optional ) 85611  -47.50 32 s
4 sf
(time) 90469  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  owner ) 61931  -24.67 32 s
5 sf
(\037 Type ) 71915  -24.50 32 s
2 sf
(window) 81322  0.00 -1 s
5 sf
( or ) 85035  -24.50 32 s
2 sf
(null) 89741  0.00 -1 s
5 sf
(.) 90447  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73083  -225.00 32 s
2 sf
(setf) 77312  0.00 -1 s
5 sf
(\) changes the owner and the last\036changed ) 122992  -224.86 32 s
4 sf
(time) 127850  0.00 -1 s
5 sf
( for the ) 136256  -149.67 32 s
4 sf
(selection) 146287  0.00 -1 s
5 sf
(. If) 149352  -225.00 32 s
52832.0 36779.0 m
(the) 56280  0.00 -1 s
( owner is ) 66782  -183.00 32 s
2 sf
(nil) 69919  0.00 -1 s
5 sf
(, no owner for the ) 89850  -183.00 32 s
4 sf
(selection) 99881  0.00 -1 s
5 sf
( exists.) 107538  -183.00 32 s
(  When the owner window for a ) 142772  -160.63 32 s
4 sf
(selec\036) 149352  0.00 -1 s
52832.0 39940.0 m
(tion) 57222  0.00 -1 s
5 sf
( is destroyed, the ) 77773  180.00 32 s
4 sf
(selection) 87804  0.00 -1 s
5 sf
( owner is) 98329  90.00 32 s
( set to ) 106315  179.33 32 s
2 sf
(nil) 109452  0.00 -1 s
5 sf
( without affecting the last\036changed) 149352  179.50 32 s
52832.0 43101.0 m
4 sf
(time) 57690  0.00 -1 s
5 sf
(.) 58396  0.00 -1 s
52832.0 49107.0 m
(The) 57220  0.00 -1 s
( ) 57673  -253.00 32 s
4 sf
(time) 62531  0.00 -1 s
5 sf
( argument is used) 81602  -253.00 32 s
( only when changing the ) 108786  -253.60 32 s
4 sf
(selection) 118817  0.00 -1 s
5 sf
( owner. If the ) 133710  -253.50 32 s
4 sf
(time) 138568  0.00 -1 s
5 sf
( is ) 141609  -126.50 32 s
2 sf
(nil) 144746  0.00 -1 s
5 sf
(, the) 149352  -254.00 32 s
52832.0 52268.0 m
(current) 60822  0.00 -1 s
( server time is used. If the ) 89325  -205.00 32 s
4 sf
(time) 94183  0.00 -1 s
5 sf
( is) 96566  -205.00 32 s
( earlier than the current last\036changed time of the) 149352  -179.88 32 s
52832.0 55428.0 m
4 sf
(selection) 62863  0.00 -1 s
5 sf
( or) 76416  10497.00 32 s
( if the ) 115194  10496.33 32 s
4 sf
(time) 120052  0.00 -1 s
5 sf
( is later) 149352  10496.50 32 s
52832.0 58589.0 m
(than) 57691  0.00 -1 s
( the current server time, the owner is not changed. Therefore, a client should always) 149352  -220.29 32 s
52832.0 61750.0 m
(confirm) 61764  0.00 -1 s
( successful change) 82186  -290.00 32 s
( of ownership by immediately calling ) 123683  -242.17 32 s
2 sf
(selection\036owner) 142489  0.00 -1 s
5 sf
(. If the) 149352  -290.50 32 s
52832.0 64911.0 m
(change) 60824  0.00 -1 s
( in ownership) 76386  100.00 32 s
( is successful, the last\036changed time of the ) 125439  87.00 32 s
4 sf
(selection) 135470  0.00 -1 s
5 sf
( is set to the) 149352  99.50 32 s
52832.0 68072.0 m
(specified) 63018  0.00 -1 s
( ) 63682  -42.00 32 s
4 sf
(time) 68540  0.00 -1 s
5 sf
(.) 69246  0.00 -1 s
52832.0 74078.0 m
(If) 54710  0.00 -1 s
( the change in ownership is successful and the new owner is different from the previ\036) 149352  -90.47 32 s
52832.0 77239.0 m
(ous) 56752  0.00 -1 s
( owner, and if the previous owner is not ) 100584  -198.00 32 s
2 sf
(nil) 103721  0.00 -1 s
5 sf
(, a ) 106894  -99.00 32 s
2 sf
(:selection\036clear) 125070  0.00 -1 s
5 sf
( event is generated) 145556  -198.00 32 s
( for) 149352  -199.00 32 s
52832.0 80399.0 m
(the) 56280  0.00 -1 s
( previous owner) 74369  -46.00 32 s
( window.) 84825  -47.00 32 s
52832.0 88708.0 m
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
5 17 fillpatset
newpath
52832 87883 av
149352 87883 as
149352 88001 as
52832 88001 as
closepath
fp
/drawmode PL_SET def
52832.0 91869.0 m
2 sf
(NOTE:) 61767  0.00 -1 s
( ) 62812  339.00 32 s
5 sf
(Standard conventions for inter\036client communication require that a non\036nil) 149352  296.63 32 s
52832.0 95030.0 m
(time) 57848  0.00 -1 s
( must be specified. If possible, the time should be the time) 149352  2340.18 32 s
52832.0 98191.0 m
(of) 55182  0.00 -1 s
( a user event which) 81498  1132.50 32 s
( initiated the change of ownership. Alternatively, a) 149352  1509.43 32 s
52832.0 101352.0 m
(timestamp) 64589  0.00 -1 s
( can be obtained) 83492  162.00 32 s
( by calling change\036property to append zero\036length data to) 149352  141.25 32 s
52832.0 104513.0 m
(some) 58789  0.00 -1 s
( property; the timestamp in the resulting ) 103635  -166.00 32 s
2 sf
(:property\036notify) 123224  0.00 -1 s
5 sf
( event can then be used.) 149352  -166.60 32 s
52832.0 107673.0 m
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 106848 av
149352 106848 as
149352 106966 as
52832 106966 as
closepath
fp
/drawmode PL_SET def
4 sf
52832.0 114898.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 119685.0 m
(selection) 62863  0.00 -1 s
5 sf
( \037 The ) 72101  -30.00 32 s
2 sf
(xatom) 79623  0.00 -1 s
5 sf
( for the selection) 98419  -30.00 32 s
( name.) 105912  -31.00 32 s
4 sf
52832.0 124471.0 m
(time) 57690  0.00 -1 s
5 sf
( \037 A) 63937  -12.00 32 s
( ) 64630  -13.00 32 s
2 sf
(timestamp) 77323  0.00 -1 s
5 sf
(.) 78029  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Atoms, Properties, and Selections) 50845  -25.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(11\036116) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
52832.0 22578.0 m
(When) 59571  0.00 -1 s
( multiple clients negotiate for ownership of a selection, certain race conditions) 149352  125.55 32 s
52832.0 25739.0 m
(might) 59417  0.00 -1 s
( be possible. For example, two clients might each) 114720  -63.00 32 s
( receive a user command to as\036) 149352  -53.00 32 s
52832.0 28900.0 m
(sert) 56906  0.00 -1 s
( ownership of the ) 77535  63.00 32 s
2 sf
(:primary) 88505  0.00 -1 s
5 sf
( selection, but the order in which the server) 137770  55.13 32 s
( processes) 149352  62.00 32 s
52832.0 32060.0 m
(these) 58631  0.00 -1 s
( client requests is unpredictable.) 94677  -60.00 32 s
( As a result, the ownership request initiated most) 149352  -53.00 32 s
52832.0 35221.0 m
(recently) 61920  0.00 -1 s
( by) 65401  -47.00 32 s
( the user might be incorrectly overridden by the other earlier ownership re\036) 149352  -43.58 32 s
52832.0 38382.0 m
(quest.) 59495  0.00 -1 s
( To prevent such anomalies, the server records a ) 113049  -179.56 32 s
/timsps10i 4 declareFont
4 sf
(last\036changed) 127626  0.00 -1 s
5 sf
( timestamp for each) 149352  -202.67 32 s
52832.0 41543.0 m
(change) 60824  0.00 -1 s
( of selection ownership.) 87624  -53.33 32 s
52832.0 47820.0 m
(Although) 63492  0.00 -1 s
( inter\036client communication via selections is rather complex, it offers impor\036) 149352  -42.30 32 s
52832.0 50981.0 m
(tant) 57064  0.00 -1 s
( benefits. Since selection communication is mediated by an X server, clients can) 149352  140.67 32 s
52832.0 54142.0 m
(share) 58786  0.00 -1 s
( data even though they are running on different hosts and using different network\036) 149352  -152.85 32 s
52832.0 57302.0 m
(ing) 56438  0.00 -1 s
( protocols. Data storage and conversion is distributed among clients so that the server) 149352  -268.23 32 s
52832.0 60463.0 m
(is) 54714  0.00 -1 s
( not required to) 71842  -64.00 32 s
( provide all possible data types or to store multiple forms of selection) 149352  -59.17 32 s
52832.0 63624.0 m
(data.) 58239  0.00 -1 s
52832.0 69901.0 m
(Certain) 61138  0.00 -1 s
( predefined atoms are used as standard selections, as described in the X11) 142554  -157.67 32 s
( Inter\036) 149352  -173.00 32 s
52832.0 73062.0 m
(client) 59101  0.00 -1 s
( Communications Conventions Manual. Some of) 113771  -103.00 32 s
( the standard selections covered) 149352  -77.75 32 s
52832.0 76223.0 m
(by) 55654  0.00 -1 s
( these conventions are:) 81303  -45.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 82770.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:primary) 68882  0.00 -1 s
4 sf
( \037 ) 72487  -158.00 32 s
5 sf
(The ) 77423  -158.00 32 s
4 sf
(primary selection) 97094  -158.00 32 s
5 sf
(. The main vehicle for inter\036client) 134388  -158.00 32 s
( cut and paste) 149352  -158.67 32 s
57912.0 85931.0 m
(operations.) 70373  0.00 -1 s
6 sf
52832.0 92479.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:secondary) 71079  0.00 -1 s
4 sf
( \037 ) 74596  -202.00 32 s
5 sf
(The ) 79488  -202.00 32 s
4 sf
(secondary selection) 101622  -202.00 32 s
5 sf
(. In some environments, clients can use) 144772  -202.00 32 s
( this) 149352  -203.00 32 s
57912.0 95639.0 m
(as) 60263  0.00 -1 s
( an auxiliary to ) 77845  -32.75 32 s
2 sf
(:primary) 88815  0.00 -1 s
5 sf
(.) 89521  0.00 -1 s
6 sf
52832.0 102187.0 m
(\267) 53872  0.00 -1 s
57912.0 h
2 sf
(:clipboard) 70454  0.00 -1 s
4 sf
( \037 ) 74511  68.00 32 s
5 sf
(Analogous to akill ring. Represents the) 118900  68.00 32 s
( most recently deleted data) 149352  50.50 32 s
57912.0 105348.0 m
(item.) 63634  0.00 -1 s
2 sf
34544.0 111625.0 m
(convert\036selection) 54916  0.00 -1 s
( ) 55577  -45.00 32 s
4 sf
(selection type requestor) 82448  -45.00 32 s
( ) 83108  -46.00 32 s
5 sf
(&optional ) 95213  -45.00 32 s
4 sf
(property time) 110450  -46.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 116343.0 m
(Requests) 63022  0.00 -1 s
( that the value of the ) 86261  -97.83 32 s
4 sf
(selection) 96292  0.00 -1 s
5 sf
( be converted to the specified ) 129562  -97.50 32 s
4 sf
(type) 134263  0.00 -1 s
5 sf
( and stored in) 149352  -65.00 32 s
52832.0 119504.0 m
(the) 56280  0.00 -1 s
( given ) 63892  -35.00 32 s
4 sf
(property) 73611  0.00 -1 s
5 sf
( of the ) 81422  -35.00 32 s
4 sf
(requestor) 92239  0.00 -1 s
5 sf
( window.) 102706  -36.00 32 s
52832.0 125781.0 m
(If) 54710  0.00 -1 s
( the ) 59096  -237.00 32 s
4 sf
(selection) 69127  0.00 -1 s
5 sf
( has an owner, the X server sends a :) 108217  -237.00 32 s
2 sf
(selection\036request) 128434  0.00 -1 s
5 sf
( event to the) 141833  -158.00 32 s
( owner) 149352  -238.00 32 s
52832.0 128942.0 m
(window.) 62629  0.00 -1 s
( Otherwise, if no owner exists, the server generates on the requestor a ) 141833  -1.85 32 s
2 sf
(:selec\036) 149352  0.00 -1 s
52832.0 132103.0 m
(tion\036notify) 65527  0.00 -1 s
5 sf
( event containing a ) 87461  -42.00 32 s
2 sf
(nil) 90598  0.00 -1 s
5 sf
( ) 91304  0.00 32 s
4 sf
(property) 101023  0.00 -1 s
5 sf
( atom.) 108035  -43.00 32 s
52832.0 138379.0 m
(The) 57220  0.00 -1 s
( given ) 65634  366.00 32 s
4 sf
(property) 75353  0.00 -1 s
5 sf
( specifies the requestor) 102389  366.00 32 s
( property that will receive the converted) 149352  304.50 32 s
52832.0 141540.0 m
(value.) 59650  0.00 -1 s
( If the ) 66884  -70.00 32 s
4 sf
(property) 76603  0.00 -1 s
5 sf
( is omitted, the ) 93806  -69.75 32 s
4 sf
(selection) 103837  0.00 -1 s
5 sf
( owner will define a property to use. The) 149352  -60.88 32 s
52832.0 144701.0 m
4 sf
(time) 57690  0.00 -1 s
5 sf
( furnishes a timestamp representing the time of the conversion request; by default,) 149352  -87.58 32 s
52832.0 147862.0 m
(the) 56280  0.00 -1 s
( current server time is used.) 87376  -18.80 32 s
52832.0 155087.0 m
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
5 17 fillpatset
newpath
52832 154262 av
149352 154262 as
149352 154380 as
52832 154380 as
closepath
fp
/drawmode PL_SET def
52832.0 158248.0 m
2 sf
(NOTE:) 61767  0.00 -1 s
( ) 62452  -21.00 32 s
5 sf
(Standard conventions for inter\036client communication require that both the re\036) 149352  -18.33 32 s
52832.0 161409.0 m
(questor) 61139  0.00 -1 s
( property) 71228  -176.00 32 s
( and the time must be specified. If possible, the time should be the time) 149352  -163.93 32 s
52832.0 164569.0 m
(of) 55182  0.00 -1 s
( a user event which initiated the conversion. Alternatively, a timestamp can be ob\036) 149352  100.00 32 s
52832.0 167730.0 m
(tained) 59728  0.00 -1 s
( by) 63402  146.00 32 s
( calling ) 72785  145.50 32 s
2 sf
(change\036property) 92848  0.00 -1 s
5 sf
( to append zero\036length data to some property; the) 149352  127.25 32 s
52832.0 170891.0 m
(timestamp) 64589  0.00 -1 s
( in the resulting ) 82814  -29.25 32 s
2 sf
(:property\036notify) 102403  0.00 -1 s
5 sf
( event can) 113766  -39.00 32 s
( then be used.) 129167  -39.67 32 s
52832.0 174052.0 m
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 173227 av
149352 173227 as
149352 173345 as
52832 173345 as
closepath
fp
/drawmode PL_SET def
4 sf
52832.0 181277.0 m
(selection) 62863  0.00 -1 s
( \037 ) 66723  -30.50 32 s
5 sf
(The ) 71786  -31.00 32 s
2 sf
(xatom) 79308  0.00 -1 s
5 sf
( for the selection name.) 105596  -30.50 32 s
4 sf
52832.0 186063.0 m
(type \037 ) 61392  -31.00 32 s
5 sf
(The ) 66455  -31.00 32 s
2 sf
(xatom) 73977  0.00 -1 s
5 sf
( for the requested data) 98928  -31.00 32 s
( type.) 105167  -32.00 32 s
4 sf
52832.0 190850.0 m
(requestor) 63649  0.00 -1 s
( \037 ) 67492  -39.00 32 s
5 sf
(The ) 72547  -39.00 32 s
2 sf
(window) 81954  0.00 -1 s
5 sf
( to receive the converted ) 110206  -38.60 32 s
4 sf
(selection) 120237  0.00 -1 s
5 sf
( value.) 127722  -39.00 32 s
4 sf
52832.0 195636.0 m
(property) 62551  0.00 -1 s
( \037 ) 66400  -36.00 32 s
5 sf
(The ) 71458  -36.00 32 s
2 sf
(xatom) 78980  0.00 -1 s
5 sf
( for the requestor property to) 111320  -36.00 32 s
( receive the converted value.) 143572  -27.50 32 s
4 sf
52832.0 200423.0 m
(time) 57690  0.00 -1 s
( \037 ) 61585  -13.00 32 s
5 sf
(A) 63622  0.00 -1 s
( ) 64314  -14.00 32 s
2 sf
(timestamp) 77007  0.00 -1 s
5 sf
(.) 77713  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
118488.0 8466.0 m
(Atoms, Properties, and Selections) 149013  -25.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(11\036115) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
52832.0 22578.0 m
(If) 54710  0.00 -1 s
( \() 56089  -266.00 32 s
2 sf
(mod) 61419  0.00 -1 s
5 sf
( ) 61859  -266.00 32 s
/timsps10i 4 declareFont
4 sf
(delta) 67502  0.00 -1 s
5 sf
( \() 68881  -266.00 32 s
2 sf
(length) 76406  0.00 -1 s
5 sf
( ) 76846  -266.00 32 s
4 sf
(properties) 88447  0.00 -1 s
5 sf
(\)\) is non\036zero, a ) 105954  -266.00 32 s
2 sf
(:property\036notify) 125543  0.00 -1 s
5 sf
( event is generated) 146091  -177.33 32 s
( on) 149352  -267.00 32 s
52832.0 25739.0 m
(the) 56280  0.00 -1 s
( window for each property, in the same order as they appear in the ) 133612  133.21 32 s
4 sf
(properties) 145213  0.00 -1 s
5 sf
( se\036) 149352  143.00 32 s
52832.0 28900.0 m
(quence.) 61530  0.00 -1 s
4 sf
52832.0 35176.0 m
(window) 61613  0.00 -1 s
( \037 ) 65459  -37.50 32 s
5 sf
(A ) 68164  -38.00 32 s
2 sf
(window) 77571  0.00 -1 s
5 sf
(.) 78277  0.00 -1 s
4 sf
52832.0 39963.0 m
(properties) 64433  0.00 -1 s
( \037 ) 68288  -33.00 32 s
5 sf
(A sequence of ) 85037  -33.00 32 s
2 sf
(xatom) 92559  0.00 -1 s
5 sf
( values.) 101148  -33.00 32 s
4 sf
52832.0 44749.0 m
(delta) 58475  0.00 -1 s
( \037 ) 62326  -35.00 32 s
5 sf
(The index interval between source and destination elements of ) 133252  -34.67 32 s
4 sf
(properties) 144853  0.00 -1 s
5 sf
(.) 145559  0.00 -1 s
20320.0 50258.0 m
0.0 0.0 m
newpath
20455 48634 av
148878 48632 as
[] 0 setdash
dp
149352.0 50258.0 m
/timsps12b 7 declareFont
7 sf
20320.0 53645.0 m
(Selections) 34614  0.00 -1 s
52832.0 h
2 sf
(11.3) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(A) 62003  0.00 -1 s
( selection is an atom used to identify data that can be shared among all client) 149352  49.60 32 s
52832.0 56806.0 m
(programs) 63489  0.00 -1 s
( connected to an X server. Unlike properties, the data represented by a selec\036) 149352  -56.00 32 s
52832.0 59967.0 m
(tion) 57222  0.00 -1 s
( is stored by some client program,) 95399  -25.00 32 s
( not by the server.) 115621  -19.25 32 s
52832.0 66243.0 m
(The) 57220  0.00 -1 s
( data named by a selection is associated with) 105798  -237.00 32 s
( a client window, which is referred to as) 149352  -207.88 32 s
52832.0 69404.0 m
(the) 56280  0.00 -1 s
( ) 56694  -292.00 32 s
4 sf
(selection owner) 74194  -292.00 32 s
5 sf
(. The server always knows which window is the owner of a) 138202  -265.45 32 s
( selection.) 149352  -293.00 32 s
52832.0 72565.0 m
(Selections) 64432  0.00 -1 s
( can be created freely by clients using ) 107767  9.63 32 s
2 sf
(intern\036atom) 122184  0.00 -1 s
5 sf
( to create an atom. CLX) 149352  10.40 32 s
52832.0 75726.0 m
(provides) 62550  0.00 -1 s
( functions to inquire or change the owner of a selection and to ) 131761  -107.85 32 s
4 sf
(convert) 140224  0.00 -1 s
5 sf
( a selec\036) 149352  -58.50 32 s
52832.0 78887.0 m
(tion.) 57928  0.00 -1 s
52832.0 85163.0 m
(Conversion) 65843  0.00 -1 s
( is the key to the use of selections for inter\036client communication. Suppose) 149352  -62.17 32 s
52832.0 88324.0 m
(Client) 59730  0.00 -1 s
( A wants to paste) 79116  -13.00 32 s
( the contents of the data named by selection ) 129090  -12.00 32 s
4 sf
(S) 130501  0.00 -1 s
5 sf
( into his window) 149352  -13.67 32 s
52832.0 91485.0 m
4 sf
(WA) 56906  0.00 -1 s
5 sf
(.) 57612  0.00 -1 s
( Client A calls ) 73675  -217.00 32 s
2 sf
(convert\036selection) 94047  0.00 -1 s
5 sf
( on selection atom ) 114716  -162.75 32 s
4 sf
(S) 116127  0.00 -1 s
5 sf
(, sending a conversion request) 149352  -217.00 32 s
52832.0 94646.0 m
(to) 55027  0.00 -1 s
( the server. The server, in turn, sends a ) 98453  -103.56 32 s
2 sf
(:selection\036request) 119609  0.00 -1 s
5 sf
( event to the current owner) 149352  -116.60 32 s
52832.0 97807.0 m
(of) 55182  0.00 -1 s
( ) 55630  -258.00 32 s
4 sf
(S) 57041  0.00 -1 s
5 sf
(, which is window ) 77408  -258.00 32 s
4 sf
(WB) 81482  0.00 -1 s
5 sf
( belonging to Client B. The ) 111526  -258.00 32 s
2 sf
(:selection\036request) 132682  0.00 -1 s
5 sf
( event contains) 149352  -129.50 32 s
52832.0 100968.0 m
(the) 56280  0.00 -1 s
( ) 56716  -270.00 32 s
4 sf
(requestor) 67533  0.00 -1 s
5 sf
( window \() 78434  -270.50 32 s
4 sf
(WA) 82508  0.00 -1 s
5 sf
(\), the selection atom \() 105956  -270.50 32 s
4 sf
(S) 107367  0.00 -1 s
5 sf
(\), an atom identifying a requested data) 149352  -225.50 32 s
52832.0 104129.0 m
(type,) 58397  0.00 -1 s
( and the name of a property of ) 92984  -26.00 32 s
4 sf
(WA) 97058  0.00 -1 s
5 sf
( into which the value of ) 124360  -21.67 32 s
4 sf
(S) 125771  0.00 -1 s
5 sf
( will be stored.) 142466  -26.00 32 s
52832.0 110405.0 m
(Since) 59102  0.00 -1 s
( ) 59562  -246.00 32 s
4 sf
(WB) 63636  0.00 -1 s
5 sf
( is the owner of ) 80667  -246.00 32 s
4 sf
(S) 82078  0.00 -1 s
5 sf
(, it must be associated with) 111418  -246.00 32 s
( the data defined by Client B as the) 149352  -215.75 32 s
52832.0 113566.0 m
(value) 58944  0.00 -1 s
( of ) 62388  -159.00 32 s
4 sf
(S) 63799  0.00 -1 s
5 sf
(. When ) 72338  -159.00 32 s
4 sf
(WB) 76412  0.00 -1 s
5 sf
( gets the ) 86045  -159.67 32 s
2 sf
(:selection\036request) 107201  0.00 -1 s
5 sf
( event, Client B is expected to convert) 149352  -136.71 32 s
52832.0 116727.0 m
(the) 56280  0.00 -1 s
( value of ) 66194  -222.00 32 s
4 sf
(S) 67605  0.00 -1 s
5 sf
( to the requested data type \(if possible\) and store the converted value in the) 149352  -206.64 32 s
52832.0 119888.0 m
(given) 59102  0.00 -1 s
( requestor property. Client B) 91110  -90.00 32 s
( is then expected to send a ) 120599  -120.57 32 s
2 sf
(:selection\036notify) 139874  0.00 -1 s
5 sf
( event to) 149352  -120.50 32 s
52832.0 123049.0 m
(the) 56280  0.00 -1 s
( requestor window ) 78454  155.33 32 s
4 sf
(WA) 82528  0.00 -1 s
5 sf
(, informing the requestor) 111283  233.00 32 s
( that the converted value for ) 145121  232.50 32 s
4 sf
(S) 146532  0.00 -1 s
5 sf
( is) 149352  232.00 32 s
52832.0 126210.0 m
(ready. Upon) 66781  0.00 32 s
( receiving the ) 82039  -269.00 32 s
2 sf
(:selection\036notify) 101314  0.00 -1 s
5 sf
( event, Client A can call ) 127683  -268.50 32 s
2 sf
(get\036property) 142883  0.00 -1 s
5 sf
( to re\036) 149352  -134.50 32 s
52832.0 129371.0 m
(trieve) 59256  0.00 -1 s
( the converted) 75186  -28.00 32 s
( value and to paste it into ) 104067  -28.57 32 s
4 sf
(WA) 108141  0.00 -1 s
5 sf
(.) 108847  0.00 -1 s
52832.0 138695.0 m
149352.0 h
0.0 sw
/drawmode PL_REPLACE def
0.0 0.0 m
5 17 fillpatset
newpath
52832 137870 av
149352 137870 as
149352 137988 as
52832 137988 as
closepath
fp
/drawmode PL_SET def
52832.0 141856.0 m
2 sf
(NOTE:) 61767  0.00 -1 s
( ) 62312  -161.00 32 s
5 sf
(Clients using selections must always be prepared to handle ) 128196  -142.89 32 s
2 sf
(:selection\036request) 149352  0.00 -1 s
5 sf
52832.0 145017.0 m
(events) 60042  0.00 -1 s
( and/or ) 68323  -170.00 32 s
2 sf
(:selection\036notify) 87598  0.00 -1 s
5 sf
( events. There is no way for a client to ask not to receive) 149352  -156.92 32 s
52832.0 148178.0 m
(these) 58631  0.00 -1 s
( types of events.) 76877  -31.67 32 s
52832.0 151339.0 m
149352.0 h
/drawmode PL_REPLACE def
0.0 0.0 m
newpath
52832 150514 av
149352 150514 as
149352 150632 as
52832 150632 as
closepath
fp
/drawmode PL_SET def
52832.0 159173.0 m
(Type) 58631  0.00 -1 s
( atoms used in selection conversion can represent arbitrary client\036defined) 139180  -218.67 32 s
( interpre\036) 149352  -247.00 32 s
52832.0 162334.0 m
(tations) 60357  0.00 -1 s
( of) 63264  -149.00 32 s
( the selection data. For example, if the value of selection ) 126270  -135.91 32 s
4 sf
(S) 127681  0.00 -1 s
5 sf
( is a text string, Cli\036) 149352  -149.60 32 s
52832.0 165495.0 m
(ent) 56280  0.00 -1 s
( A might request its typeface by requesting conversion to the ) 123153  -226.27 32 s
2 sf
(:font) 128950  0.00 -1 s
5 sf
( type. A type ) 143241  -248.50 32 s
2 sf
(atom) 149352  0.00 -1 s
5 sf
52832.0 168656.0 m
(can) 56749  0.00 -1 s
( also represent a request to the selection owner to perform some action as a side\036ef\036) 149352  -90.40 32 s
52832.0 171817.0 m
(fect) 57061  0.00 -1 s
( of conversion \(for example, ) 89341  -95.20 32 s
2 sf
(:delete) 97331  0.00 -1 s
5 sf
(\). Some of the predefined atoms) 132943  -119.00 32 s
( of an X server) 149352  -89.75 32 s
52832.0 174978.0 m
(are) 56277  0.00 -1 s
( intended to be used as selection types \(for example, ) 115890  -3.00 32 s
2 sf
(:colormap) 128271  0.00 -1 s
5 sf
(, ) 129683  0.00 32 s
2 sf
(:bitmap) 139244  0.00 -1 s
5 sf
(, ) 140653  -3.00 32 s
2 sf
(:string) 148646  0.00 -1 s
5 sf
(,) 149352  0.00 -1 s
52832.0 178139.0 m
(and) 56907  0.00 -1 s
( so forth\) However, X does not impose any requirements on the interpretation of type) 149352  -276.57 32 s
52832.0 181300.0 m
(atoms.) 60279  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Atoms, Properties, and Selections) 50845  -25.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(11\036114) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(get\036property) 49744  0.00 -1 s
( ) 50419  -31.00 32 s
/timsps10i 4 declareFont
4 sf
(window property) 69594  -31.00 32 s
( ) 70268  -32.00 32 s
/timsps10 5 declareFont
5 sf
(&key ) 77213  -31.00 32 s
2 sf
(:type) 83324  0.00 -1 s
5 sf
( \() 84937  -32.00 32 s
2 sf
(:start) 91516  0.00 -1 s
5 sf
( 0\) ) 95215  -31.50 32 s
2 sf
(:end :delete\036p ) 112392  -31.50 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 25739.0 m
(\() 53771  0.00 -1 s
2 sf
(:result\036type) 67717  0.00 -1 s
( 'list) 72971  4.00 32 s
5 sf
(\) ) 74620  4.00 32 s
2 sf
(:transform) 87782  0.00 -1 s
34544.0 28900.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 32060.0 m
(  data ) 59877  -30.00 32 s
5 sf
(\037 Type ) 69850  -30.00 32 s
2 sf
(sequence) 80667  0.00 -1 s
5 sf
(.) 81373  0.00 -1 s
4 sf
( ) 82048  -31.00 32 s
52832.0 35221.0 m
(  type ) 59582  -23.00 32 s
5 sf
(\037 Type ) 69569  -23.00 32 s
2 sf
(xatom) 77091  0.00 -1 s
5 sf
(.) 77797  0.00 -1 s
4 sf
( ) 78480  -23.00 32 s
52832.0 38382.0 m
(  format ) 62409  -22.00 32 s
5 sf
(\037) 65231  0.00 -1 s
( Type) 71715  -21.00 32 s
( \() 73338  -22.00 32 s
2 sf
(member 8 16 32) 92475  -21.33 32 s
5 sf
(\).) 94120  0.00 -1 s
4 sf
( ) 94804  -22.00 32 s
52832.0 41543.0 m
(  bytes\036after ) 66937  -27.00 32 s
5 sf
(\037 Type ) 76916  -27.00 32 s
2 sf
(card32) 85224  0.00 -1 s
5 sf
(.) 85930  0.00 -1 s
( ) 86608  -28.00 32 s
52832.0 46262.0 m
(Returns) 61610  0.00 -1 s
( a subsequence) 78040  -249.00 32 s
( of the data for the window property. The ) 123128  -249.56 32 s
2 sf
(:start) 129707  0.00 -1 s
5 sf
( and ) 134945  -124.50 32 s
2 sf
(:end) 140275  0.00 -1 s
5 sf
( indexes) 149352  -250.00 32 s
52832.0 49423.0 m
(specify) 60981  0.00 -1 s
( the property ) 75737  -123.00 32 s
4 sf
(data) 80754  0.00 -1 s
5 sf
( elements returned. The ) 107612  -123.00 32 s
2 sf
(:transform) 120774  0.00 -1 s
5 sf
( function is) 133349  -61.50 32 s
( called for ele\036) 149352  -123.67 32 s
52832.0 52584.0 m
(ments) 59573  0.00 -1 s
( of the specified subsequence to compute) 105825  -24.00 32 s
( the ) 110660  -12.50 32 s
4 sf
(data) 115677  0.00 -1 s
5 sf
( sequence returned. The prop\036) 149352  -24.50 32 s
52832.0 55745.0 m
(erty) 57219  0.00 -1 s
( ) 57755  -170.00 32 s
4 sf
(type) 62456  0.00 -1 s
5 sf
( and ) 67603  -170.00 32 s
4 sf
(format) 75128  0.00 -1 s
5 sf
( are also returned. The final return value gives the actual number of) 149352  -155.58 32 s
52832.0 58905.0 m
(data) 57533  0.00 -1 s
( bytes \(not elements\) following the last) 101420  -26.67 32 s
( data element returned.) 127181  -32.67 32 s
52832.0 65182.0 m
(If) 54710  0.00 -1 s
( the ) 59262  -154.00 32 s
4 sf
(property) 68981  0.00 -1 s
5 sf
( does not exist, the returned ) 99957  -154.00 32 s
4 sf
(data) 104974  0.00 -1 s
5 sf
( and ) 110153  -154.00 32 s
4 sf
(type) 114854  0.00 -1 s
5 sf
( are ) 119403  -154.00 32 s
2 sf
(nil) 122540  0.00 -1 s
5 sf
( and the returned ) 141827  -115.25 32 s
4 sf
(format) 149352  0.00 -1 s
5 sf
52832.0 68343.0 m
(and) 56907  0.00 -1 s
( ) 57577  -36.00 32 s
4 sf
(bytes\036after) 69645  0.00 -1 s
5 sf
( are zero.) 79993  -35.50 32 s
52832.0 74620.0 m
(If) 54710  0.00 -1 s
( the given ) 66429  -39.00 32 s
2 sf
(:type) 72540  0.00 -1 s
4 sf
( ) 73207  -39.00 32 s
5 sf
(is non\036) 80928  -39.00 32 s
2 sf
(nil) 84065  0.00 -1 s
5 sf
( but does not) 98451  -39.00 32 s
( match the actual property type, then the ) 144335  -34.63 32 s
4 sf
(data) 149352  0.00 -1 s
5 sf
52832.0 77780.0 m
(returned) 62233  0.00 -1 s
( is ) 65883  178.00 32 s
2 sf
(nil) 69020  0.00 -1 s
5 sf
(, the ) 74942  178.00 32 s
4 sf
(type) 79643  0.00 -1 s
5 sf
( and ) 85486  178.00 32 s
4 sf
(format) 93011  0.00 -1 s
5 sf
( returned give the actual property values, and the) 149352  156.13 32 s
52832.0 80941.0 m
4 sf
(bytes\036after) 64900  0.00 -1 s
5 sf
( returned gives the total number of bytes \(not) 114911  -116.38 32 s
( elements\) in the property data.) 149352  -133.60 32 s
52832.0 87218.0 m
(If) 54710  0.00 -1 s
( the given ) 66492  -18.00 32 s
2 sf
(:type) 72603  0.00 -1 s
5 sf
( is ) 75861  -18.00 32 s
2 sf
(nil) 78998  0.00 -1 s
5 sf
( or if it matches the actual property type, then: ) 131719  -18.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 93766.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The) 62300  0.00 -1 s
( ) 62972  -34.00 32 s
4 sf
(data) 67989  0.00 -1 s
5 sf
( returned is the transformed subsequence of the property data.) 137431  -33.67 32 s
6 sf
52832.0 100313.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The) 62300  0.00 -1 s
( ) 62965  -41.00 32 s
4 sf
(type) 67666  0.00 -1 s
5 sf
( and ) 73112  -20.50 32 s
4 sf
(format) 80637  0.00 -1 s
5 sf
( returned give the actual property values.) 126548  -41.00 32 s
6 sf
52832.0 106861.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The) 62300  0.00 -1 s
( ) 62983  -23.00 32 s
4 sf
(bytes\036after) 75051  0.00 -1 s
5 sf
( returned gives the actual number of data bytes \(not elements\) fol\036) 149352  -20.45 32 s
57912.0 110022.0 m
(lowing) 65750  0.00 -1 s
( the last data element returned.) 100252  -27.20 32 s
( ) 100923  -35.00 32 s
52832.0 116298.0 m
(In) 55182  0.00 -1 s
( this case, the ) 70218  -219.00 32 s
2 sf
(:delete\036p) 80716  0.00 -1 s
5 sf
( argument is also examined. If) 114010  -175.20 32 s
( ) 114496  -220.00 32 s
2 sf
(:delete\036p) 124994  0.00 -1 s
5 sf
( is true and ) 137284  -219.50 32 s
4 sf
(bytes\036after) 149352  0.00 -1 s
5 sf
52832.0 119459.0 m
(is) 54714  0.00 -1 s
( zero, the property is deleted and a ) 92162  -266.00 32 s
2 sf
(:property\036notify) 111751  0.00 -1 s
5 sf
( event is generated for the ) 139865  -303.50 32 s
4 sf
(window) 148646  0.00 -1 s
5 sf
(.) 149352  0.00 -1 s
4 sf
52832.0 125736.0 m
(window) 61613  0.00 -1 s
( \037 ) 65459  -37.50 32 s
5 sf
(A ) 68164  -38.00 32 s
2 sf
(window) 77571  0.00 -1 s
5 sf
(.) 78277  0.00 -1 s
4 sf
52832.0 130522.0 m
(property) 62551  0.00 -1 s
( \037 ) 66403  -34.50 32 s
5 sf
(A property name ) 86125  -34.67 32 s
2 sf
(xatom) 93647  0.00 -1 s
5 sf
(.) 94353  0.00 -1 s
2 sf
52832.0 135309.0 m
(:type) 58943  0.00 -1 s
4 sf
( \037 ) 62808  -28.00 32 s
5 sf
(The requested type ) 84902  -28.00 32 s
2 sf
(xatom) 92424  0.00 -1 s
5 sf
( or ) 96131  -27.50 32 s
2 sf
(nil) 99268  0.00 -1 s
5 sf
(.) 99974  0.00 -1 s
2 sf
52832.0 140095.0 m
(:start) 59411  0.00 -1 s
5 sf
(,) 60117  0.00 -1 s
( ) 60791  -32.00 32 s
2 sf
(:end) 66121  0.00 -1 s
4 sf
( \037 ) 69978  -32.00 32 s
5 sf
(Specify the subsequence of property ) 111588  -32.00 32 s
4 sf
(data) 116605  0.00 -1 s
5 sf
( returned. ) 128061  -31.50 32 s
2 sf
52832.0 144882.0 m
(:transform) 65994  0.00 -1 s
4 sf
( \037 ) 69657  -129.00 32 s
5 sf
(A function that transforms each data element into a data value to return.) 149352  -117.92 32 s
2 sf
52832.0 149668.0 m
(:delete\036p) 63330  0.00 -1 s
4 sf
( \037 ) 67197  -27.00 32 s
5 sf
(If) 69075  0.00 -1 s
( true, the existing ) 89266  -27.50 32 s
4 sf
(property) 98985  0.00 -1 s
5 sf
( can be deleted.) 116456  -27.67 32 s
2 sf
52832.0 154455.0 m
(:result\036type) 66778  0.00 -1 s
4 sf
( \037 ) 70657  -21.00 32 s
5 sf
(The t) 76514  -21.00 32 s
4 sf
(ype) 80431  0.00 -1 s
5 sf
( of data sequence to return. Default is) 122601  -21.00 32 s
( ) 123285  -22.00 32 s
2 sf
('list) 127829  0.00 -1 s
5 sf
(.) 128535  0.00 -1 s
2 sf
34544.0 159241.0 m
(list\036properties) 51470  0.00 -1 s
( ) 52156  -20.00 32 s
4 sf
(window ) 61623  -20.00 32 s
5 sf
(&key \() 69519  -19.00 32 s
2 sf
(:result\036type 'list) 88695  -20.00 32 s
5 sf
(\)) 89634  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 162402.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 165563.0 m
(  properties ) 66455  -32.00 32 s
5 sf
(\037) 69277  0.00 -1 s
( Type ) 76423  -32.50 32 s
2 sf
(sequence) 87240  0.00 -1 s
5 sf
( of ) 90937  -32.50 32 s
2 sf
(keyword) 101440  0.00 -1 s
5 sf
(.) 102146  0.00 -1 s
4 sf
( ) 102819  -33.00 32 s
5 sf
52832.0 170282.0 m
(Returns) 61610  0.00 -1 s
( a sequence containing the names of all ) 106304  -36.50 32 s
4 sf
(window) 115085  0.00 -1 s
5 sf
( ) 115754  -37.00 32 s
4 sf
(properties) 127355  0.00 -1 s
5 sf
(.) 128061  0.00 -1 s
4 sf
52832.0 176558.0 m
(window) 61613  0.00 -1 s
( \037 ) 65459  -37.50 32 s
5 sf
(A ) 68164  -38.00 32 s
2 sf
(window) 77571  0.00 -1 s
5 sf
(.) 78277  0.00 -1 s
2 sf
52832.0 181345.0 m
(:result\036type) 66778  0.00 -1 s
4 sf
( \037 ) 70659  -20.00 32 s
5 sf
(The type of sequence to return. Default is ) 118070  -19.75 32 s
2 sf
('list) 122614  0.00 -1 s
5 sf
(.) 123320  0.00 -1 s
2 sf
34544.0 186131.0 m
(rotate\036properties) 55071  0.00 -1 s
( ) 55733  -44.00 32 s
4 sf
(window properties ) 77439  -44.00 32 s
5 sf
(&optional \() 90484  -44.00 32 s
4 sf
(delta) 96127  0.00 -1 s
5 sf
( 1\)) 99139  -44.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 190850.0 m
(Rotates) 61297  0.00 -1 s
( the values of the given ) 87677  -97.00 32 s
4 sf
(window properties) 108668  -97.00 32 s
5 sf
(. The value of property ) 134828  -97.00 32 s
4 sf
(i) 135612  0.00 -1 s
5 sf
( in the given) 149352  -97.00 32 s
52832.0 194011.0 m
(sequence) 63175  0.00 -1 s
( is changed to the value of the property at index \() 116769  -165.00 32 s
2 sf
(mod) 122099  0.00 -1 s
5 sf
( \(+ ) 125679  -181.50 32 s
4 sf
(i) 126463  0.00 -1 s
5 sf
( ) 126987  -182.00 32 s
4 sf
(delta) 132630  0.00 -1 s
5 sf
(\) \() 135033  -181.00 32 s
2 sf
(length) 142558  0.00 -1 s
5 sf
( ) 143082  -182.00 32 s
4 sf
(prop\036) 149352  0.00 -1 s
52832.0 197172.0 m
(erties) 59102  0.00 -1 s
5 sf
(\)\).) 61686  0.00 -1 s
( This function operates much like the ) 104222  -25.57 32 s
2 sf
(rotatef) 112367  0.00 -1 s
5 sf
( macro in Common Lisp.) 140547  -29.50 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
118488.0 8466.0 m
(Atoms, Properties, and Selections) 149013  -25.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(11\036113) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/symbb8 6 declareFont
6 sf
52832.0 22849.0 m
(\267) 53872  0.00 -1 s
57912.0 h
/timsps10 5 declareFont
5 sf
(Create) 65276  0.00 -1 s
( or) 68292  -40.00 32 s
( change a property) 89092  -40.67 32 s
6 sf
52832.0 29396.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( property) 75809  -48.00 32 s
( data) 81167  -49.00 32 s
6 sf
52832.0 35944.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(List) 62302  0.00 -1 s
( window properties) 84034  -27.00 32 s
6 sf
52832.0 42491.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Delete) 65276  0.00 -1 s
( a) 67195  -40.00 32 s
( property) 77419  -41.00 32 s
2 sf
34544.0 48768.0 m
(change\036property) 54607  0.00 -1 s
( ) 55267  -46.00 32 s
/timsps10i 4 declareFont
4 sf
(window property data type) 85465  -46.00 32 s
( format ) 94309  -46.50 32 s
5 sf
(&key \() 102177  -47.00 32 s
2 sf
(:mode) 109699  0.00 -1 s
5 sf
( ) 110359  -46.00 32 s
2 sf
(:replace) 120074  0.00 -1 s
5 sf
(\) ) 121672  -47.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 51929.0 m
(\() 53771  0.00 -1 s
2 sf
(:start) 60350  0.00 -1 s
5 sf
( 0\) ) 64084  -14.00 32 s
2 sf
(:end) 69414  0.00 -1 s
4 sf
( ) 70105  -15.00 32 s
2 sf
(:transform) 83267  0.00 -1 s
5 sf
52832.0 56648.0 m
(Creates) 61294  0.00 -1 s
( a new window property or) 92158  76.00 32 s
( changes an existing property. A ) 129763  62.83 32 s
2 sf
(:property\036notify) 149352  0.00 -1 s
5 sf
52832.0 59809.0 m
(event) 58944  0.00 -1 s
( is generated for the) 81215  -35.00 32 s
( ) 81885  -36.00 32 s
4 sf
(window) 90666  0.00 -1 s
5 sf
(.) 91372  0.00 -1 s
52832.0 66085.0 m
(If) 54710  0.00 -1 s
( the ) 59686  58.00 32 s
2 sf
(:mode) 67208  0.00 -1 s
5 sf
( is ) 70618  58.00 32 s
2 sf
(:replace) 80333  0.00 -1 s
5 sf
(, the new ) 91480  58.00 32 s
4 sf
(data) 96497  0.00 -1 s
5 sf
(, ) 97967  58.00 32 s
4 sf
(type) 102668  0.00 -1 s
5 sf
(,) 103374  0.00 -1 s
( and ) 108976  57.50 32 s
4 sf
(format) 116501  0.00 -1 s
5 sf
( replace any previous values.) 149352  43.00 32 s
52832.0 69246.0 m
(The) 57220  0.00 -1 s
( subsequence of previous data elements that are replaced is defined by) 133899  -231.82 32 s
( the ) 138248  -255.50 32 s
2 sf
(:start) 144827  0.00 -1 s
5 sf
( and) 149352  -256.00 32 s
52832.0 72407.0 m
2 sf
(:end) 58162  0.00 -1 s
5 sf
( indexes.) 68117  -78.00 32 s
52832.0 78684.0 m
(If) 54710  0.00 -1 s
( the ) 62332  1381.00 32 s
2 sf
(:mode) 69854  0.00 -1 s
5 sf
( is ) 75910  1381.00 32 s
2 sf
(:prepend) 86884  0.00 -1 s
5 sf
( or ) 93408  1381.00 32 s
2 sf
(:append) 103287  0.00 -1 s
5 sf
(, no previous data is changed,) 143660  1381.00 32 s
( but) 149352  1380.00 32 s
52832.0 81844.0 m
(the) 56280  0.00 -1 s
( new ) 62231  -81.00 32 s
4 sf
(data) 67248  0.00 -1 s
5 sf
( is added at the beginning or the end, respectively. For) 127729  -81.00 32 s
( these modes, if the) 149352  -61.25 32 s
52832.0 85005.0 m
4 sf
(property) 62551  0.00 -1 s
5 sf
( already exists, the new ) 89498  -34.00 32 s
4 sf
(type) 94199  0.00 -1 s
5 sf
( and ) 99618  -34.00 32 s
4 sf
(format) 107143  0.00 -1 s
5 sf
( must match) 120905  -17.00 32 s
( the previous values.) 144001  -34.67 32 s
52832.0 91282.0 m
(The) 57220  0.00 -1 s
( ) 57773  -153.00 32 s
2 sf
(:transform) 70935  0.00 -1 s
5 sf
(, if given, is a function used to) 104118  -153.00 32 s
( compute the actual property data stored.) 149352  -128.00 32 s
52832.0 94443.0 m
(The) 57220  0.00 -1 s
( ) 58146  220.00 32 s
2 sf
(:transform) 71308  0.00 -1 s
5 sf
(, which must accept a single data) 109856  220.00 32 s
( element and return a single trans\036) 149352  182.83 32 s
52832.0 97604.0 m
(formed) 60980  0.00 -1 s
( data element,) 76656  -38.00 32 s
( is called for each data element. If the ) 119447  -34.22 32 s
4 sf
(data) 124464  0.00 -1 s
5 sf
( is a string, the default) 149352  -38.60 32 s
52832.0 100765.0 m
2 sf
(:transform) 65994  0.00 -1 s
5 sf
( function transforms each character into its ASCII code; otherwise, the de\036) 149352  -58.91 32 s
52832.0 103926.0 m
(fault) 58003  0.00 -1 s
( is to) 63422  -35.00 32 s
( store the ) 74402  -23.67 32 s
4 sf
(data) 79419  0.00 -1 s
5 sf
( unchanged.) 93020  -36.00 32 s
4 sf
52832.0 110202.0 m
(window) 61613  0.00 -1 s
( \037 ) 65459  -37.50 32 s
5 sf
(A ) 68164  -38.00 32 s
2 sf
(window) 77571  0.00 -1 s
5 sf
(.) 78277  0.00 -1 s
4 sf
52832.0 114989.0 m
(property) 62551  0.00 -1 s
5 sf
( ) 63222  -35.00 32 s
4 sf
(\037 ) 66403  -34.00 32 s
5 sf
(A property name ) 86125  -34.67 32 s
2 sf
(xatom) 93647  0.00 -1 s
5 sf
(.) 94353  0.00 -1 s
4 sf
52832.0 119775.0 m
(data \037 ) 61700  -35.00 32 s
5 sf
(A sequence of property data elements.) 104783  -34.80 32 s
4 sf
52832.0 124562.0 m
(type) 57533  0.00 -1 s
( \037 ) 61382  -36.00 32 s
5 sf
(The) 65770  0.00 -1 s
( property type ) 82196  -36.67 32 s
2 sf
(xatom) 89718  0.00 -1 s
5 sf
(.) 90424  0.00 -1 s
4 sf
52832.0 129348.0 m
(format) 60357  0.00 -1 s
( \037 ) 64234  -22.00 32 s
5 sf
(One) 68935  0.00 -1 s
( of 8, 16, or 32.) 86225  -22.60 32 s
2 sf
52832.0 134135.0 m
(:mode) 60354  0.00 -1 s
4 sf
( \037 ) 64189  -43.00 32 s
5 sf
(One of ) 72567  -42.50 32 s
2 sf
(:replace) 82282  0.00 -1 s
5 sf
(, ) 83651  -43.00 32 s
2 sf
(:append) 93530  0.00 -1 s
5 sf
(, or ) 97913  -42.50 32 s
2 sf
(:prepend) 108887  0.00 -1 s
5 sf
(.) 109593  0.00 -1 s
2 sf
52832.0 138921.0 m
(:start,) 60117  0.00 -1 s
( :end ) 66751  -54.00 32 s
5 sf
(\037) 69573  0.00 -1 s
4 sf
( ) 70225  -54.00 32 s
5 sf
(Specify the subsequence) 97860  -54.00 32 s
( of previous data replaced when ) 134207  -54.50 32 s
2 sf
(:mode) 141729  0.00 -1 s
5 sf
( is ) 144968  -27.50 32 s
2 sf
(:re\036) 149352  0.00 -1 s
57912.0 142082.0 m
(place) 64182  0.00 -1 s
5 sf
(.) 64888  0.00 -1 s
2 sf
52832.0 146868.0 m
(:transform) 65994  0.00 -1 s
4 sf
( \037 ) 69851  -32.00 32 s
5 sf
(A function that) 86872  -32.00 32 s
( transforms each data element into a data value to store.) 149352  -29.30 32 s
2 sf
34544.0 151655.0 m
(delete\036property) 53192  0.00 -1 s
( ) 53809  -89.00 32 s
4 sf
(window property) 72926  -89.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 156374.0 m
(Deletes) 61294  0.00 -1 s
( the ) 65720  -217.00 32 s
4 sf
(window property) 84709  -217.00 32 s
5 sf
(. If the ) 92208  -217.00 32 s
4 sf
(property) 101927  0.00 -1 s
5 sf
( already exists, a ) 120791  -162.75 32 s
2 sf
(:property\036notify) 140380  0.00 -1 s
5 sf
( event is) 149352  -217.00 32 s
52832.0 159535.0 m
(generated) 63800  0.00 -1 s
( for) 67759  -36.00 32 s
( the ) 72546  -36.50 32 s
4 sf
(window) 81327  0.00 -1 s
5 sf
(. ) 82702  -37.00 32 s
4 sf
52832.0 165811.0 m
(window) 61613  0.00 -1 s
( \037 ) 65459  -37.50 32 s
5 sf
(A ) 68164  -38.00 32 s
2 sf
(window) 77571  0.00 -1 s
5 sf
(.) 78277  0.00 -1 s
4 sf
52832.0 170598.0 m
(property) 62551  0.00 -1 s
( \037 ) 66403  -34.50 32 s
5 sf
(A property name ) 86125  -34.67 32 s
2 sf
(xatom) 93647  0.00 -1 s
5 sf
(.) 94353  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 7925.0 m
(Atoms, Properties, and Selections) 50845  -25.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(11\036112) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
52832.0 22578.0 m
(When) 59571  0.00 -1 s
( creating a new atom, the following conventions should be obeyed in order to) 149352  190.08 32 s
52832.0 25739.0 m
(minimize) 63491  0.00 -1 s
( the conflict between atom names:) 101939  -37.60 32 s
/symbb8 6 declareFont
6 sf
52832.0 32286.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Symbol) 66693  0.00 -1 s
( names beginning with an underscore should be used for atoms that are pri\036) 149352  -170.62 32 s
57912.0 35447.0 m
(vate) 62613  0.00 -1 s
( to a particular vendor or organization. An) 108971  -184.00 32 s
( additional prefix should identify the) 149352  -184.60 32 s
57912.0 38608.0 m
(organization.) 72723  0.00 -1 s
6 sf
52832.0 45156.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Symbol) 66693  0.00 -1 s
( names beginning with two underscores should be used for atoms that are) 149352  -8.75 32 s
57912.0 48316.0 m
(private) 65747  0.00 -1 s
( to a single application or end user.) 105054  -27.86 32 s
52832.0 54593.0 m
(CLX) 58475  0.00 -1 s
( provides functions to convert between an ) 104793  -223.86 32 s
2 sf
(xatom) 112315  0.00 -1 s
5 sf
( and its corresponding ID integer.) 149352  -178.80 32 s
52832.0 57754.0 m
(The) 57220  0.00 -1 s
( data type of an atom ID is) 87007  -32.86 32 s
2 sf
( card29) 95989  -32.00 32 s
5 sf
(. The ) 102430  -32.50 32 s
2 sf
(xatom) 109952  0.00 -1 s
5 sf
( representation is usually sufficient) 149352  -24.50 32 s
52832.0 60915.0 m
(for) 56121  0.00 -1 s
( most CLX programs. However, it is occasionally useful to be able to convert an atom) 149352  -258.40 32 s
52832.0 64076.0 m
(ID) 55808  0.00 -1 s
( returned in events or properties into its corresponding) 116898  -24.50 32 s
( ) 117575  -29.00 32 s
2 sf
(xatom) 125097  0.00 -1 s
5 sf
(.) 125803  0.00 -1 s
2 sf
34544.0 70352.0 m
(atom\036name) 48177  0.00 -1 s
( ) 48836  -47.00 32 s
/timsps10i 4 declareFont
4 sf
(display atom\036id) 66424  -47.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 73513.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 76674.0 m
( ) 53504  -34.00 32 s
( atom\036name) 66869  -35.00 32 s
5 sf
( \037 Type ) 77505  -34.33 32 s
2 sf
(keyword) 88008  0.00 -1 s
5 sf
(.) 88714  0.00 -1 s
4 sf
( ) 89385  -35.00 32 s
5 sf
52832.0 81393.0 m
(Returns) 61610  0.00 -1 s
( the atom) 72057  -28.00 32 s
( keyword for the ) 91377  -28.50 32 s
4 sf
(atom\036id) 100154  0.00 -1 s
5 sf
( on the given ) 115404  -28.50 32 s
4 sf
(display) 123556  0.00 -1 s
5 sf
( server.) 131832  -29.00 32 s
4 sf
52832.0 87670.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
5 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
5 sf
( object.) 84463  -30.00 32 s
4 sf
52832.0 92456.0 m
(atom\036id) 61609  0.00 -1 s
( \037 ) 65453  -38.50 32 s
5 sf
(A ) 68157  -39.00 32 s
2 sf
(card29) 76465  0.00 -1 s
5 sf
(.) 77171  0.00 -1 s
2 sf
34544.0 97242.0 m
(find\036atom) 46455  0.00 -1 s
( ) 47112  -49.00 32 s
4 sf
(display) 55264  0.00 -1 s
( atom\036name) 68614  -50.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 100403.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 103564.0 m
(  atom\036id) 62968  -26.50 32 s
5 sf
( \037 Type ) 73627  -26.67 32 s
2 sf
(card29) 81935  0.00 -1 s
5 sf
( or ) 85644  -26.50 32 s
2 sf
(null) 90350  0.00 -1 s
5 sf
(.) 91056  0.00 -1 s
52832.0 108283.0 m
(Returns) 61610  0.00 -1 s
( the atom ID for the given ) 90478  -164.00 32 s
4 sf
(atom\036nam) 101919  0.00 -1 s
5 sf
(e, if it exists. If no atom of that name exists) 149352  -147.60 32 s
52832.0 111444.0 m
(for) 56121  0.00 -1 s
( the display server,) 77387  -17.00 32 s
( ) 78075  -18.00 32 s
2 sf
(nil) 81212  0.00 -1 s
5 sf
( is returned.) 94578  -17.50 32 s
4 sf
52832.0 117721.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
5 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
5 sf
( object.) 84463  -30.00 32 s
4 sf
52832.0 122507.0 m
(atom\036name) 65526  0.00 -1 s
( \037 ) 69367  -40.00 32 s
5 sf
(An ) 73481  -40.00 32 s
2 sf
(xatom) 81003  0.00 -1 s
5 sf
(.) 81709  0.00 -1 s
2 sf
34544.0 127294.0 m
(intern\036atom) 48961  0.00 -1 s
( ) 49606  -61.00 32 s
4 sf
(display atom\036name) 71097  -61.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 130454.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 133615.0 m
(  atom\036id) 62968  -26.50 32 s
5 sf
( \037 Type ) 73627  -26.67 32 s
2 sf
(card29) 81935  0.00 -1 s
5 sf
( or) 84965  -26.00 32 s
2 sf
( null) 90350  -27.00 32 s
5 sf
(.) 91056  0.00 -1 s
52832.0 138334.0 m
(Creates) 61294  0.00 -1 s
( an atom with the given name and returns its atom ID. The atom can survive the) 149352  -124.69 32 s
52832.0 141495.0 m
(interning) 63020  0.00 -1 s
( client; it exists until the last server connection has been closed) 133081  -79.09 32 s
( and the server) 149352  -87.67 32 s
52832.0 144656.0 m
(resets) 59257  0.00 -1 s
( itself.) 66334  23.00 32 s
4 sf
52832.0 150932.0 m
(display) 60984  0.00 -1 s
( \037 ) 64845  -30.00 32 s
5 sf
(A ) 67559  -29.00 32 s
2 sf
(display) 76185  0.00 -1 s
5 sf
( object.) 84463  -30.00 32 s
4 sf
52832.0 155719.0 m
(atom\036name) 65526  0.00 -1 s
( \037 ) 69367  -40.00 32 s
5 sf
(An) 72815  0.00 -1 s
2 sf
( xatom) 81003  -40.00 32 s
5 sf
(.) 81709  0.00 -1 s
20320.0 161228.0 m
0.0 0.0 m
newpath
20455 159604 av
148878 159602 as
[] 0 setdash
dp
149352.0 161228.0 m
/timsps12b 7 declareFont
7 sf
20320.0 164615.0 m
(Properties) 35362  0.00 -1 s
52832.0 h
2 sf
(11.2) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(For) 63885  0.00 -1 s
( each window, an X server can record a set of ) 113712  -214.64 32 s
4 sf
(properties) 125313  0.00 -1 s
5 sf
(. Properties are a gen\036) 149352  -161.00 32 s
52832.0 167775.0 m
(eral) 57061  0.00 -1 s
( mechanism for) 74479  -68.00 32 s
( clients to associate arbitrary data with a window, and for clients to) 149352  -62.83 32 s
52832.0 170936.0 m
(communicate) 68035  0.00 -1 s
( window data to) 86134  -2.00 32 s
( each other via the server. No interpretation is placed on) 149352  -2.30 32 s
52832.0 174097.0 m
(property) 62391  0.00 -1 s
( data by the server itself.) 90018  -23.00 32 s
52832.0 180374.0 m
(A) 54869  0.00 -1 s
( property consists of a name, a type, a) 96017  -186.00 32 s
( data format, and data. The name of a property is) 149352  -167.90 32 s
52832.0 183535.0 m
(given) 59102  0.00 -1 s
( by an atom. The property type is another atom used to denote the intended) 142618  -75.21 32 s
( inter\036) 149352  -82.00 32 s
52832.0 186696.0 m
(pretation) 62862  0.00 -1 s
( of the property data. The property formats specifies whether the property) 144126  -163.64 32 s
( data) 149352  -181.00 32 s
52832.0 189857.0 m
(should) 60358  0.00 -1 s
( be treated) 72285  87.00 32 s
( as a set of 8\036, 16\036, or 32\036bit elements. The property format must be) 149352  80.29 32 s
52832.0 193017.0 m
(specified) 63018  0.00 -1 s
( so that the X server can communicate property data with the) 128777  -270.00 32 s
( correct byte order.) 149352  -297.67 32 s
52832.0 199294.0 m
(CLX) 58475  0.00 -1 s
( provides functions to:) 83696  -32.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(11\036111) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 8 declareFont
8 sf
20410.0 39376.0 m
61027.0 33506.0 m
(ATOMS, PROPERTIES,) 115846  -71.00 32 s
69900.0 39105.0 m
( AND SELECTIONS) 115846  -28.00 32 s
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
145738 39316 av
145738 23300 as
142800 23300 as
139863 26351 as
139863 27876 as
142433 27876 as
142433 39316 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
139495 23300 av
139495 23300 as
newpath
139495 43891 av
139495 43891 as
newpath
147206 43891 av
147206 43891 as
newpath
147206 23300 av
147206 23300 as
270.0 sw
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
138152 39316 av
138152 23300 as
135214 23300 as
132277 26351 as
132277 27876 as
134847 27876 as
134847 39316 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
131909 23300 av
131909 23300 as
newpath
131909 43891 av
131909 43891 as
newpath
139620 43891 av
139620 43891 as
newpath
139620 23300 av
139620 23300 as
149351.0 39376.0 m
8 sf
/timsps10 5 declareFont
5 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 7 declareFont
7 sf
20320.0 46871.0 m
(Atoms) 29722  0.00 -1 s
52832.0 h
2 sf
(11.1) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(In) 62316  0.00 -1 s
( X, an ) 69076  -255.00 32 s
/timsps10i 4 declareFont
4 sf
(atom) 74719  0.00 -1 s
5 sf
( is a unique ID used as the) 102640  -255.00 32 s
( name for certain server resources \037 prop\036) 149352  -255.57 32 s
52832.0 50032.0 m
(erties) 58943  0.00 -1 s
( and) 63692  -32.00 32 s
( selections.) 76200  -33.00 32 s
52832.0 56309.0 m
(In) 55182  0.00 -1 s
( CLX, an atom is represented by a keyword symbol. For convenience, CLX functions) 149352  -183.77 32 s
52832.0 59470.0 m
(also) 57378  0.00 -1 s
( allow atoms to be specified by strings and non\036keyword symbols. ) 131360  -129.09 32 s
2 sf
(xatom) 138882  0.00 -1 s
5 sf
( is a CLX) 149352  -142.00 32 s
52832.0 62631.0 m
(data) 57533  0.00 -1 s
( type that permits either string or symbol values. A string is equivalent to the ) 141830  -201.27 32 s
2 sf
(xatom) 149352  0.00 -1 s
5 sf
52832.0 65792.0 m
(given) 59102  0.00 -1 s
( by \() 64135  -70.00 32 s
2 sf
(intern) 71502  0.00 -1 s
5 sf
( ) 72138  -70.00 32 s
4 sf
(string) 78724  0.00 -1 s
5 sf
( ) 79360  -70.00 32 s
2 sf
('keyword) 90802  0.00 -1 s
5 sf
(\). A symbol is equivalent to the ) 126598  -59.71 32 s
2 sf
(xatom) 134120  0.00 -1 s
5 sf
( given by \() 146060  -69.67 32 s
2 sf
(in\036) 149352  0.00 -1 s
52832.0 68953.0 m
(tern) 57846  0.00 -1 s
5 sf
( \() 59629  138.00 32 s
2 sf
(symbol\036name) 75774  0.00 -1 s
5 sf
( ) 76617  137.00 32 s
4 sf
(symbol) 84611  0.00 -1 s
5 sf
(\) ) 86394  138.00 32 s
2 sf
('keyword) 97836  0.00 -1 s
5 sf
(\). The symbol name string of an ) 135499  117.86 32 s
2 sf
(xatom) 143021  0.00 -1 s
5 sf
( must) 149352  137.00 32 s
52832.0 72113.0 m
(consist) 60671  0.00 -1 s
( only of ISO Latin characters. Note that the case of ) 118611  -18.91 32 s
2 sf
(xatom) 126133  0.00 -1 s
5 sf
( strings is important;) 149352  -20.67 32 s
52832.0 75274.0 m
(the) 56280  0.00 -1 s
( ) 56956  -30.00 32 s
2 sf
(xatom) 64478  0.00 -1 s
5 sf
( \177Atom" is not the same as) 94583  -25.00 32 s
( the ) 99382  -30.50 32 s
2 sf
(xatom) 106904  0.00 -1 s
5 sf
( \177ATOM".) 119098  -31.00 32 s
52832.0 81551.0 m
(Certain) 61138  0.00 -1 s
( atoms are already predefined by every X server. Predefined atoms are designed) 149352  -164.92 32 s
52832.0 84712.0 m
(to) 55027  0.00 -1 s
( represent common names that are likely to be useful for many client applications.) 149352  130.00 32 s
52832.0 87873.0 m
(Note) 58317  0.00 -1 s
( that these atoms are predefined only in the sense of having ) 123529  -195.50 32 s
2 sf
(xatom) 131051  0.00 -1 s
5 sf
( and ) 136147  -195.50 32 s
2 sf
(card29) 144455  0.00 -1 s
5 sf
( val\036) 149352  -196.00 32 s
52832.0 91034.0 m
(ues,) 57300  0.00 -1 s
( not in the sense of having required semantics. No interpretation is placed on the) 149352  98.07 32 s
52832.0 94194.0 m
(meaning) 62550  0.00 -1 s
( or use of an atom by the server. The ) 105766  113.00 32 s
2 sf
(xatom) 113288  0.00 -1 s
5 sf
( objects predefined by CLX are) 149352  113.00 32 s
52832.0 97355.0 m
(listed) 58946  0.00 -1 s
( below.) 67214  -40.00 32 s
2 sf
52832.0 103632.0 m
(:arc) 57688  0.00 -1 s
82296.0 h
(:italic_angle) 97029  0.00 -1 s
103632.0 h
119888.0 h
(:string) 127881  0.00 -1 s
52832.0 106793.0 m
(:atom) 59882  0.00 -1 s
82296.0 h
(:max_space) 96402  0.00 -1 s
103632.0 h
119888.0 h
(:subscript_x) 134781  0.00 -1 s
52832.0 109954.0 m
(:bitmap) 62393  0.00 -1 s
82296.0 h
(:min_space) 95933  0.00 -1 s
103632.0 h
119888.0 h
(:subscript_y) 134781  0.00 -1 s
52832.0 113115.0 m
(:cap_height) 66940  0.00 -1 s
82296.0 h
(:norm_space) 97813  0.00 -1 s
103632.0 h
119888.0 h
(:superscript_x) 137287  0.00 -1 s
52832.0 116276.0 m
(:cardinal) 63805  0.00 -1 s
82296.0 h
(:notice) 90444  0.00 -1 s
103632.0 h
119888.0 h
(:superscript_y) 137287  0.00 -1 s
52832.0 119436.0 m
(:colormap) 65213  0.00 -1 s
82296.0 h
(:pixmap) 92329  0.00 -1 s
103632.0 h
119888.0 h
(:underline_position) 143406  0.00 -1 s
52832.0 122597.0 m
(:copyright) 65371  0.00 -1 s
82296.0 h
(:point) 89507  0.00 -1 s
103632.0 h
119888.0 h
(:underline_thickness) 144973  0.00 -1 s
52832.0 125758.0 m
(:cursor) 61608  0.00 -1 s
82296.0 h
(:point_size) 95306  0.00 -1 s
103632.0 h
119888.0 h
(:visualid) 130237  0.00 -1 s
52832.0 128919.0 m
(:cut_buffer0) 67876  0.00 -1 s
82296.0 h
(:primary) 93266  0.00 -1 s
103632.0 h
119888.0 h
(:weight) 128820  0.00 -1 s
52832.0 132080.0 m
(:cut_buffer1) 67876  0.00 -1 s
82296.0 h
(:quad_width) 97662  0.00 -1 s
103632.0 h
119888.0 h
(:window) 130234  0.00 -1 s
52832.0 135241.0 m
(:cut_buffer2) 67876  0.00 -1 s
82296.0 h
(:rectangle) 94361  0.00 -1 s
103632.0 h
119888.0 h
(:wm_class) 132269  0.00 -1 s
52832.0 138402.0 m
(:cut_buffer3) 67876  0.00 -1 s
82296.0 h
(:resolution) 95306  0.00 -1 s
103632.0 h
119888.0 h
(:wm_client_machine) 144807  0.00 -1 s
52832.0 141563.0 m
(:cut_buffer4) 67876  0.00 -1 s
82296.0 h
(:resource_manager) 105647  0.00 -1 s
119888.0 h
(:wm_command) 138538  0.00 -1 s
52832.0 144724.0 m
(:cut_buffer5) 67876  0.00 -1 s
82296.0 h
(:rgb_best_map) 100479  0.00 -1 s
103632.0 h
119888.0 h
(:wm_hints) 132584  0.00 -1 s
52832.0 147884.0 m
(:cut_buffer6) 67876  0.00 -1 s
82296.0 h
(:rgb_blue_map) 100795  0.00 -1 s
103632.0 h
119888.0 h
(:wm_icon_name) 139636  0.00 -1 s
52832.0 151045.0 m
(:cut_buffer7) 67876  0.00 -1 s
82296.0 h
(:rgb_color_map) 101732  0.00 -1 s
103632.0 h
119888.0 h
(:wm_icon_size) 137441  0.00 -1 s
52832.0 154206.0 m
(:drawable) 65058  0.00 -1 s
82296.0 h
(:rgb_default_map) 104084  0.00 -1 s
119888.0 h
(:wm_name) 133208  0.00 -1 s
52832.0 157367.0 m
(:end_space) 66157  0.00 -1 s
82296.0 h
(:rgb_gray_map) 101106  0.00 -1 s
103632.0 h
119888.0 h
(:wm_normal_hints) 142773  0.00 -1 s
52832.0 160528.0 m
(:family_name) 69444  0.00 -1 s
82296.0 h
(:rgb_green_map) 102359  0.00 -1 s
103632.0 h
(:wm_size_hints) 122127  0.00 -1 s
52832.0 163689.0 m
(:font) 58629  0.00 -1 s
82296.0 h
(:rgb_red_map) 99695  0.00 -1 s
103632.0 h
119888.0 h
(:wm_transient_for) 142454  0.00 -1 s
52832.0 166850.0 m
(:font_name) 66623  0.00 -1 s
82296.0 h
(:secondary) 95463  0.00 -1 s
103632.0 h
119888.0 h
(:wm_zoom_hints) 140420  0.00 -1 s
52832.0 170011.0 m
(:full_name) 65841  0.00 -1 s
82296.0 h
(:strikeout_ascent) 102984  0.00 -1 s
103632.0 h
(:x_height) 114918  0.00 -1 s
52832.0 173172.0 m
(:integer) 62233  0.00 -1 s
82296.0 h
(:strikeout_descent) 104395  0.00 -1 s
eop
initialstate restore
