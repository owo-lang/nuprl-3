%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 9 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps10i /ILtimsi 10 map
	/timsps8i /ILtimsi 8 map
	/timsps18b /ILtimsb 18 map
	/timsps10b /ILtimsb 10 map
	/timsps18 /ILtims 18 map
	/timsps12b /ILtimsb 12 map
	/symbb8 /ILsymbb 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 9 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036182) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18 3 declareFont
3 sf
20320.0 24271.0 m
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
132373.0 8195.0 m
(Control Functions) 149013  -14.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036181) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(set\036screen\036saver) 53817  0.00 -1 s
( ) 54479  -44.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 62631  0.00 -1 s
( timeout period blanking exposures ) 102932  -44.60 32 s
2 sf
139373.0 h
/timsps10 5 declareFont
5 sf
(Function) 149407  0.00 -1 s
52832.0 27297.0 m
(Changes) 62551  0.00 -1 s
( the current control values for the ) 99578  -184.71 32 s
4 sf
(display) 107730  0.00 -1 s
5 sf
( server screen saver. The screen saver) 149352  -153.83 32 s
52832.0 30457.0 m
(is) 54714  0.00 -1 s
( reset. The screen saver is also disabled if:) 102164  -15.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 37005.0 m
(\267) 53872  0.00 -1 s
57912.0 h
4 sf
(timeout) 66376  0.00 -1 s
5 sf
( is zero, or) 78232  -18.67 32 s
6 sf
52832.0 43553.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Both) 63400  0.00 -1 s
( ) 64375  269.00 32 s
4 sf
(blanking) 74251  0.00 -1 s
5 sf
( and ) 80276  269.00 32 s
4 sf
(exposures) 91562  0.00 -1 s
5 sf
( are disabled and the server cannot regenerate the) 149352  269.50 32 s
57912.0 46713.0 m
(screen) 65119  0.00 -1 s
( contents without sending ) 94549  -50.00 32 s
2 sf
(:exposure) 106305  0.00 -1 s
5 sf
( events.) 114876  -51.00 32 s
52832.0 52990.0 m
(The) 57220  0.00 -1 s
( ) 57915  -11.00 32 s
4 sf
(timeout ) 67074  -11.00 32 s
5 sf
(specifies the \(non\036negative\) number of seconds of input device inactivity) 149352  -9.67 32 s
52832.0 56151.0 m
(that) 57064  0.00 -1 s
( must elapse before the screen saver is activated. The ) 116615  -102.60 32 s
4 sf
(timeout) 125079  0.00 -1 s
5 sf
( can be set to) 139358  -114.00 32 s
( ) 139949  -115.00 32 s
2 sf
(:default) 149352  0.00 -1 s
5 sf
52832.0 59312.0 m
(to) 55027  0.00 -1 s
( restore the server default) 83600  -26.00 32 s
( timeout interval.) 102932  -13.50 32 s
52832.0 65588.0 m
(If) 54710  0.00 -1 s
( ) 55269  -147.00 32 s
4 sf
(blanking) 65145  0.00 -1 s
5 sf
( is ) 68145  -147.00 32 s
2 sf
(:yes) 72846  0.00 -1 s
5 sf
( and) 77480  -147.00 32 s
( the screen hardware supports blanking, blanking is enabled; that) 149352  -147.56 32 s
52832.0 68749.0 m
(is,) 55420  0.00 -1 s
( the screen) 67023  -232.00 32 s
( saver will simply blank all screens when it is activated. ) 128340  -211.36 32 s
4 sf
(blanking) 138216  0.00 -1 s
5 sf
( can be set) 149352  -232.67 32 s
52832.0 71910.0 m
(to) 55027  0.00 -1 s
( ) 55711  -22.00 32 s
2 sf
(:default) 65114  0.00 -1 s
5 sf
( to restore the server default state for) 106433  -18.86 32 s
( blanking.) 117698  -23.00 32 s
52832.0 78187.0 m
(If) 54710  0.00 -1 s
( ) 55336  -80.00 32 s
4 sf
(exposures) 66622  0.00 -1 s
5 sf
( is ) 69756  -80.00 32 s
2 sf
(:yes) 74457  0.00 -1 s
5 sf
(, exposures are enabled. If exposures are enabled, or if the server) 146845  -72.73 32 s
( is) 149352  -81.00 32 s
52832.0 81348.0 m
(capable) 61450  0.00 -1 s
( of regenerating) 79326  6.00 32 s
( screen contents without sending ) 116891  4.40 32 s
2 sf
(:exposure) 128647  0.00 -1 s
5 sf
( events, the screen) 149352  5.33 32 s
52832.0 84509.0 m
(saver) 58786  0.00 -1 s
( will display some) 78908  -164.67 32 s
( server\036dependent image when activated. Frequently, this image) 149352  -247.57 32 s
52832.0 87670.0 m
(will consist) 65766  0.00 32 s
( of a repeating animation sequence, in) 107506  -188.00 32 s
( which case ) 120811  -188.67 32 s
4 sf
(period) 128179  0.00 -1 s
5 sf
( specifies the \(non\036) 149352  -125.67 32 s
52832.0 90830.0 m
(negative\)) 63331  0.00 -1 s
( number of) 75219  -247.00 32 s
( seconds for each repetition. A ) 109168  -206.33 32 s
4 sf
(period) 116536  0.00 -1 s
5 sf
( of zero is a hint that no repeti\036) 149352  -247.50 32 s
52832.0 93991.0 m
(tion) 57222  0.00 -1 s
( should occur.) 73039  -47.00 32 s
4 sf
52832.0 100268.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 105054.0 m
(timeout) 61296  0.00 -1 s
5 sf
( \037 Specifies the delay until timeout takes over.) 114763  -27.75 32 s
4 sf
52832.0 109841.0 m
(period) 60200  0.00 -1 s
5 sf
( \037 Specifies the periodic change interval, if used.) 116366  -32.63 32 s
4 sf
52832.0 114627.0 m
(blanking) 62708  0.00 -1 s
5 sf
( \037 Specifies whether) 86966  -38.00 32 s
( the blanking option is available.) 123613  -38.60 32 s
4 sf
52832.0 119414.0 m
(exposures) 64118  0.00 -1 s
( ) 64782  -42.00 32 s
5 sf
(\037 Specifies whether exposures are allowed during blanking.) 133299  -41.57 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036180) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(remove\036access\036host) 57736  0.00 -1 s
( ) 58384  -58.00 32 s
/timsps10i 4 declareFont
4 sf
(display host) 71888  -58.00 32 s
2 sf
139373.0 h
/timsps10 5 declareFont
5 sf
(Function) 149407  0.00 -1 s
52832.0 27297.0 m
(Removes) 63335  0.00 -1 s
( the specified ) 79363  92.00 32 s
4 sf
(host) 84067  0.00 -1 s
5 sf
( from the access control list. Only a client running on the) 149352  92.45 32 s
52832.0 30457.0 m
(same) 58631  0.00 -1 s
( host as the server can change the access control) 112705  -26.00 32 s
( list.) 117540  -27.00 32 s
4 sf
52832.0 36734.0 m
(display) 60984  0.00 -1 s
5 sf
( \037) 64486  -26.00 32 s
( A) 67204  -25.00 32 s
( ) 67884  -26.00 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 41521.0 m
(host) 57536  0.00 -1 s
5 sf
( \037) 61035  -29.00 32 s
( A host name. Either a string or some other implementation\036dependent type.) 146530  -29.55 32 s
20320.0 47030.0 m
0.0 0.0 m
newpath
20455 45406 av
148878 45404 as
[] 0 setdash
dp
149352.0 47030.0 m
/timsps12b 7 declareFont
7 sf
20320.0 50416.0 m
(Screen) 30098  0.00 -1 s
( Saver) 39263  43.00 32 s
52832.0 h
2 sf
(14.7) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(To) 63101  0.00 -1 s
( prevent monitor damage, an X server implements a screen saver function) 149352  275.09 32 s
52832.0 53577.0 m
(which) 59728  0.00 -1 s
( blanks screens during periods of unuse. The screen saver can be in one of three) 149352  -22.87 32 s
52832.0 56738.0 m
(states:) 59886  0.00 -1 s
/symbb8 6 declareFont
6 sf
52832.0 63286.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Disabled) 67943  0.00 -1 s
( \037 No screen blanking is done and screen content remains unchanged.) 147433  -40.91 32 s
6 sf
52832.0 69833.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Deactivated) 71388  0.00 -1 s
( \037 The server is being used. When the server input devices are unused) 149352  -164.00 32 s
57912.0 72994.0 m
(for) 61201  0.00 -1 s
( a specific amount of time, the screen) 103153  -30.00 32 s
( saver becomes activated.) 131899  -30.67 32 s
6 sf
52832.0 79542.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Activated) 68882  0.00 -1 s
( \037 The server input devices are) 103154  -296.00 32 s
( unused. The screen saver blanks all server) 149352  -296.57 32 s
57912.0 82702.0 m
(screens) 66217  0.00 -1 s
( or displays) 78733  -248.00 32 s
( a server\036dependent image. As soon as an input event from either) 149352  -248.55 32 s
57912.0 85863.0 m
(the) 61360  0.00 -1 s
( pointer or the keyboard occurs,) 97192  -12.00 32 s
( the screen saver is deactivated and its timer is) 149352  -12.56 32 s
57912.0 89024.0 m
(reset.) 63945  0.00 -1 s
52832.0 95301.0 m
(The) 57220  0.00 -1 s
( following paragraphs describe the CLX functions used to:) 123094  -34.00 32 s
6 sf
52832.0 101848.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change screen saver control values.) 109006  -39.00 32 s
6 sf
52832.0 108396.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Activate) 67471  0.00 -1 s
( or reset) 76512  -24.00 32 s
( the screen saver) 95165  -24.67 32 s
2 sf
34544.0 114673.0 m
(activate\036screen\036saver) 59928  0.00 -1 s
( ) 60507  -127.00 32 s
4 sf
(display) 68659  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 119391.0 m
(Activates) 63489  0.00 -1 s
( the screen) 75508  -24.00 32 s
( saver for the ) 90925  -24.50 32 s
4 sf
(display) 99077  0.00 -1 s
5 sf
( server.) 107357  -25.00 32 s
4 sf
52832.0 125668.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 130454.0 m
(reset\036screen\036saver) 56323  0.00 -1 s
( ) 56917  -112.00 32 s
4 sf
(display) 65069  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 135173.0 m
(Deactivates) 65995  0.00 -1 s
( the screen saver for the ) 92125  -242.00 32 s
4 sf
(display) 100277  0.00 -1 s
5 sf
( server) 107634  -242.00 32 s
( \(if necessary\) and resets its timer, just) 149352  -242.57 32 s
52832.0 138334.0 m
(as) 55183  0.00 -1 s
( if) 57579  -33.00 32 s
( a pointer or keyboard event had occurred.) 105145  -33.57 32 s
4 sf
52832.0 144611.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 149397.0 m
(screen\036saver) 49588  0.00 -1 s
52832.0 h
4 sf
(display) 60984  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 152558.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 155719.0 m
(  timeout) 62656  -26.00 32 s
5 sf
(,) 63362  0.00 -1 s
4 sf
( period) 71410  -26.00 32 s
( ) 72089  -27.00 32 s
5 sf
(\037 Type ) 82069  -26.50 32 s
2 sf
(int16) 88183  0.00 -1 s
5 sf
(.) 88889  0.00 -1 s
52832.0 158880.0 m
(  ) 54196  -24.00 32 s
4 sf
(blanking) 64072  0.00 -1 s
5 sf
(,) 64778  0.00 -1 s
4 sf
( exposures ) 77429  -23.50 32 s
5 sf
(\037 One of ) 89349  -23.67 32 s
2 sf
(:yes) 94050  0.00 -1 s
5 sf
( or ) 97765  -23.50 32 s
2 sf
(:no) 101684  0.00 -1 s
5 sf
(.) 102390  0.00 -1 s
52832.0 163599.0 m
(Returns) 61610  0.00 -1 s
( the current control values for the ) 99965  5.00 32 s
4 sf
(display) 108117  0.00 -1 s
5 sf
( server screen) 123639  5.00 32 s
( saver. See ) 136505  4.33 32 s
2 sf
(set\036screen\036) 149352  0.00 -1 s
52832.0 166759.0 m
(saver) 59258  0.00 -1 s
5 sf
(.) 59964  0.00 -1 s
4 sf
52832.0 173036.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
132373.0 8195.0 m
(Control Functions) 149013  -14.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036179) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
20320.0 23300.0 m
0.0 0.0 m
newpath
20455 21676 av
148878 21674 as
[] 0 setdash
dp
149352.0 23300.0 m
/timsps12b 7 declareFont
7 sf
20320.0 26687.0 m
(Managing) 34995  0.00 -1 s
( Host) 42626  13.00 32 s
( ) 43485  12.00 32 s
52832.0 h
2 sf
(14.6) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(An) 63414  0.00 -1 s
( X server maintains a list of hosts from which client programs can be) 149352  624.23 32 s
7 sf
20320.0 30074.0 m
(Access) 29908  0.00 -1 s
52832.0 h
5 sf
(run.) 57299  0.00 -1 s
( Only clients executing on hosts that belong to this ) 113239  -191.00 32 s
/timsps10i 4 declareFont
4 sf
(access) 120605  0.00 -1 s
( control list) 133236  -191.50 32 s
5 sf
( are allowed to) 149352  -191.67 32 s
52832.0 33234.0 m
(open) 58318  0.00 -1 s
( a connection to the server. Typically, the access control list can be changed by cli\036) 149352  -174.60 32 s
52832.0 36395.0 m
(ents) 57378  0.00 -1 s
( running on the same host as the server. Some server implementations can also im\036) 149352  -98.00 32 s
52832.0 39556.0 m
(plement) 61923  0.00 -1 s
( other authorization mechanisms) 98376  -101.00 32 s
( in addition to, or in place of, this mechanism.) 149352  -101.56 32 s
52832.0 42717.0 m
(The) 57220  0.00 -1 s
( action of this mechanism can be conditional based on the authorization protocol) 149352  101.42 32 s
52832.0 45878.0 m
(name) 58944  0.00 -1 s
( and data received by the server at connection setup.) 117517  -39.89 32 s
52832.0 52155.0 m
(The) 57220  0.00 -1 s
( following paragraphs describe the CLX functions used to:) 123094  -34.00 32 s
/symbb8 6 declareFont
6 sf
52832.0 58702.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Add) 62771  0.00 -1 s
( or remove hosts) 81434  -23.00 32 s
( on the access control list.) 110473  -23.60 32 s
6 sf
52832.0 65250.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( the hosts on the access control list.) 105258  -21.86 32 s
6 sf
52832.0 71797.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change the state of the access control list mechanism) 128648  -26.80 32 s
2 sf
34544.0 78074.0 m
(access\036control) 51469  0.00 -1 s
( ) 52086  -89.00 32 s
4 sf
(display) 60238  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 81235.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 84396.0 m
(  enabled\036p) 65448  -40.00 32 s
( ) 66113  -41.00 32 s
5 sf
(\037 Type ) 76065  -40.50 32 s
2 sf
(boolean) 85473  0.00 -1 s
5 sf
(.) 86179  0.00 -1 s
52832.0 89114.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73968  70.00 32 s
2 sf
(setf) 78197  0.00 -1 s
5 sf
(\) changes the state of the access control list mechanism for the) 149352  63.73 32 s
52832.0 92275.0 m
4 sf
(display) 60984  0.00 -1 s
5 sf
( server. Returns true if access control) 101558  -225.00 32 s
( is enabled; otherwise, ) 126823  -169.25 32 s
2 sf
(nil) 129960  0.00 -1 s
5 sf
( is returned. If en\036) 149352  -225.50 32 s
52832.0 95436.0 m
(abled,) 59650  0.00 -1 s
( the access control list is used to validate each client during connection) 139218  -31.17 32 s
( setup.) 146552  -35.00 32 s
52832.0 101713.0 m
(Only) 58475  0.00 -1 s
( a client running on the same host as the server is allowed to enable or disable) 145265  -61.88 32 s
( the) 149352  -67.00 32 s
52832.0 104874.0 m
(access) 60040  0.00 -1 s
( control list) 72829  -33.00 32 s
( mechanism.) 87060  -34.00 32 s
4 sf
52832.0 111150.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 115937.0 m
(access\036hosts) 48964  0.00 -1 s
52832.0 h
4 sf
(display) 60984  0.00 -1 s
5 sf
( &key \() 69580  -12.50 32 s
2 sf
(:result\036type) 83526  0.00 -1 s
5 sf
( ) 84219  -13.00 32 s
2 sf
('list) 88763  0.00 -1 s
5 sf
(\)) 89702  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 119098.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 122259.0 m
(  hosts ) 60690  -20.67 32 s
5 sf
(\037 ) 64197  -21.00 32 s
2 sf
(sequence) 75014  0.00 -1 s
5 sf
( of ) 78735  -20.50 32 s
2 sf
(string) 85789  0.00 -1 s
5 sf
(.) 86495  0.00 -1 s
4 sf
52832.0 125420.0 m
(  enabled\036p) 65448  -40.00 32 s
( ) 66113  -41.00 32 s
5 sf
(\037 Type ) 76065  -40.50 32 s
2 sf
(boolean) 85473  0.00 -1 s
5 sf
(.) 86179  0.00 -1 s
52832.0 130138.0 m
(Returns) 61610  0.00 -1 s
( a sequence containing the ) 91437  -132.00 32 s
4 sf
(hosts) 97239  0.00 -1 s
5 sf
( that belong to the access control list of the ) 145120  -118.40 32 s
4 sf
(dis\036) 149352  0.00 -1 s
52832.0 133299.0 m
(play) 57691  0.00 -1 s
5 sf
( server. Elements of the returned ) 95995  128.00 32 s
4 sf
(hosts) 101797  0.00 -1 s
5 sf
( sequence are either strings or some other) 149352  110.14 32 s
52832.0 136460.0 m
(type) 57691  0.00 -1 s
( of) 60572  -175.00 32 s
( object recognized as a host name by ) 101508  -153.63 32 s
2 sf
(add\036access\036host) 120318  0.00 -1 s
5 sf
( and ) 125454  -175.50 32 s
2 sf
(remove\036access\036host) 148646  0.00 -1 s
5 sf
(.) 149352  0.00 -1 s
52832.0 139621.0 m
(The) 57220  0.00 -1 s
( second returned value) 82684  -1.33 32 s
( specifies whether the access control list mechanism is cur\036) 149352  -2.56 32 s
52832.0 142782.0 m
(rently enabled) 68896  0.00 32 s
( or) 71902  -50.00 32 s
( disabled \(see ) 87816  -50.67 32 s
2 sf
(access\036control) 104741  0.00 -1 s
5 sf
(\).) 106386  0.00 -1 s
4 sf
52832.0 149058.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
52832.0 153845.0 m
(:result\036type) 66778  0.00 -1 s
4 sf
( ) 67457  -27.00 32 s
5 sf
(\037 The type of hosts sequence to return.) 112415  -26.57 32 s
2 sf
34544.0 158631.0 m
(add\036access\036host) 53354  0.00 -1 s
( ) 54014  -46.00 32 s
4 sf
(display host) 67530  -46.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 163350.0 m
(Adds) 58789  0.00 -1 s
( the specified ) 74019  -174.00 32 s
4 sf
(host) 78723  0.00 -1 s
5 sf
( to the access control list. Only a client) 121144  -174.00 32 s
( running on the same host) 149352  -174.60 32 s
52832.0 166511.0 m
(as) 55183  0.00 -1 s
( the server can change the access control list.) 105664  -27.75 32 s
4 sf
52832.0 172788.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 177574.0 m
(host) 57536  0.00 -1 s
( ) 58213  -29.00 32 s
5 sf
(\037) 61035  0.00 -1 s
( A host name. Either a string or some other implementation\036dependent type.) 146530  -29.55 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036178) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(add\036to\036save\036set) 52723  0.00 -1 s
( ) 53353  -76.00 32 s
/timsps10i 4 declareFont
4 sf
(window) 62134  0.00 -1 s
2 sf
139373.0 h
/timsps10 5 declareFont
5 sf
(Function) 149407  0.00 -1 s
52832.0 27297.0 m
(Adds) 58789  0.00 -1 s
( the specified ) 73707  -278.00 32 s
4 sf
(window) 82488  0.00 -1 s
5 sf
( to the save\036set of the ) 105586  -278.00 32 s
4 sf
(window) 114367  0.00 -1 s
5 sf
( display. The ) 128898  -277.67 32 s
4 sf
(window) 137679  0.00 -1 s
5 sf
( must have) 149352  -277.50 32 s
52832.0 30457.0 m
(been) 58160  0.00 -1 s
( created by some other display. Windows are removed automatically from the) 142963  -270.00 32 s
( save\036) 149352  -271.00 32 s
52832.0 33618.0 m
(set) 55967  0.00 -1 s
( when) 62748  -37.00 32 s
( they are destroyed.) 84734  -37.67 32 s
4 sf
52832.0 39895.0 m
(window ) 62282  -37.00 32 s
5 sf
(\037) 65104  0.00 -1 s
( A) 67811  -36.00 32 s
( ) 68480  -37.00 32 s
2 sf
(window) 77887  0.00 -1 s
5 sf
(.) 78593  0.00 -1 s
2 sf
34544.0 44681.0 m
(close\036down\036mode) 55390  0.00 -1 s
( ) 55991  -105.00 32 s
4 sf
(display) 64143  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 47842.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 51003.0 m
(  mode ) 60951  -37.00 32 s
5 sf
(\037 One of ) 72831  -37.00 32 s
2 sf
(:destroy) 82704  0.00 -1 s
5 sf
(,) 83410  0.00 -1 s
2 sf
( :retain\036permanent) 106331  -38.00 32 s
5 sf
(, or ) 110724  -37.50 32 s
2 sf
(:retain\036temporary) 132661  0.00 -1 s
5 sf
(.) 133367  0.00 -1 s
52832.0 55722.0 m
(Returns) 61610  0.00 -1 s
( and \(with ) 73119  -213.00 32 s
2 sf
(setf) 77348  0.00 -1 s
5 sf
(\) sets the close\036down mode of the client's) 122801  -213.00 32 s
( resources at connection) 149352  -213.67 32 s
52832.0 58883.0 m
(close.) 59337  0.00 -1 s
( ) 60012  -31.00 32 s
4 sf
52832.0 65159.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 69946.0 m
(kill\036client) 45986  0.00 -1 s
( ) 46663  -29.00 32 s
4 sf
(display resource\036id) 68501  -29.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 74665.0 m
(Closes) 60358  0.00 -1 s
( the display connection which created the given ) 116597  231.13 32 s
4 sf
(resource\036id) 129606  0.00 -1 s
5 sf
(. The ) 136343  115.50 32 s
4 sf
(resource\036id) 149352  0.00 -1 s
5 sf
52832.0 77826.0 m
(must) 58320  0.00 -1 s
( be valid, but need not belong to the given ) 106198  -32.90 32 s
4 sf
(display) 114350  0.00 -1 s
5 sf
(.) 115056  0.00 -1 s
52832.0 84102.0 m
(If) 54710  0.00 -1 s
( the) 58783  -81.00 32 s
( closed connection was previously open, the connection is closed according to its) 149352  -74.75 32 s
52832.0 87263.0 m
(close\036down) 65840  0.00 -1 s
( mode. Otherwise, if the connection had) 111798  136.00 32 s
( been previously terminated with) 149352  101.50 32 s
52832.0 90424.0 m
(close\036down) 65840  0.00 -1 s
( mode ) 74926  702.00 32 s
2 sf
(:retain\036permanent) 97179  0.00 -1 s
5 sf
( or ) 101643  351.00 32 s
2 sf
(:retain\036temporary) 123580  0.00 -1 s
5 sf
(, then all its retained) 149352  702.00 32 s
52832.0 93585.0 m
(server) 59725  0.00 -1 s
( resources \037 both permanent and temporary) 109851  -30.83 32 s
( \037 are destroyed.) 129800  -37.67 32 s
4 sf
52832.0 99862.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 104648.0 m
(resource\036id) 65841  0.00 -1 s
5 sf
( \037 A valid ) 79043  -31.00 32 s
2 sf
(card29) 87351  0.00 -1 s
5 sf
( resource) 97583  -31.00 32 s
( ID.) 101939  -32.00 32 s
2 sf
34544.0 109434.0 m
(kill\036temporary\036clients) 60873  0.00 -1 s
( ) 61500  -79.00 32 s
4 sf
(display) 69652  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 114153.0 m
(Closes) 60358  0.00 -1 s
( the ) 65102  -58.00 32 s
4 sf
(display) 73254  0.00 -1 s
5 sf
( connection and destroys all retained temporary server resources for) 149352  -51.11 32 s
52832.0 117314.0 m
(this) 56909  0.00 -1 s
( and all previously\036terminated connections.) 105551  -45.75 32 s
52832.0 123591.0 m
(If) 54710  0.00 -1 s
( the ) 59250  -160.00 32 s
4 sf
(display) 67402  0.00 -1 s
5 sf
( connection was previously open, the connection is closed according to its) 149352  -145.45 32 s
52832.0 126752.0 m
(close\036down) 65840  0.00 -1 s
( mode. Otherwise, if the ) 92755  -212.80 32 s
4 sf
(display) 100907  0.00 -1 s
5 sf
( connection had been previously terminated) 149352  -170.00 32 s
52832.0 129913.0 m
(with) 57848  0.00 -1 s
( close\036down mode ) 78941  -101.00 32 s
2 sf
(:retain\036permanent) 101194  0.00 -1 s
5 sf
( or ) 104855  -50.50 32 s
2 sf
(:retain\036temporary) 126792  0.00 -1 s
5 sf
(, then all its retained) 149352  -101.00 32 s
52832.0 133073.0 m
(server) 59725  0.00 -1 s
( resources \037 both permanent and temporary) 109851  -30.83 32 s
( \037 are destroyed.) 129800  -37.67 32 s
4 sf
52832.0 139350.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 144137.0 m
(remove\036from\036save\036set) 60708  0.00 -1 s
( ) 61300  -114.00 32 s
4 sf
(window) 70081  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 148855.0 m
(Removes) 63335  0.00 -1 s
( the specified ) 79213  42.00 32 s
4 sf
(window) 87994  0.00 -1 s
5 sf
( from the save\036set of the ) 116301  42.00 32 s
4 sf
(window) 125082  0.00 -1 s
5 sf
( display. The) 139824  42.00 32 s
( ) 140571  41.00 32 s
4 sf
(window) 149352  0.00 -1 s
5 sf
52832.0 152016.0 m
(must) 58320  0.00 -1 s
( have been) 70668  140.00 32 s
( created by some other display. Windows are removed automatically) 149352  139.44 32 s
52832.0 155177.0 m
(from) 58316  0.00 -1 s
( the save\036set when they are destroyed.) 100990  -32.00 32 s
4 sf
52832.0 161454.0 m
(window) 61613  0.00 -1 s
( ) 62282  -37.00 32 s
5 sf
(\037 A ) 68480  -36.50 32 s
2 sf
(window) 77887  0.00 -1 s
5 sf
(.) 78593  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
132373.0 8195.0 m
(Control Functions) 149013  -14.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036177) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
52832.0 22849.0 m
(4.) 54949  0.00 -1 s
/symbb8 6 declareFont
6 sf
57912.0 h
5 sf
(Server) 65276  0.00 -1 s
( resources and colormap cells allocated by the) 116820  -59.00 32 s
( connection are freed and de\036) 149352  -59.60 32 s
57912.0 26010.0 m
(stroyed,) 66925  0.00 -1 s
( depending on the close\036down mode, as follows:) 121198  -39.71 32 s
2 sf
57912.0 32015.0 m
(:retain\036permanent) 80165  0.00 -1 s
5 sf
( \037 All resources) 99176  -63.00 32 s
( are marked ) 113010  -63.67 32 s
/timsps10i 4 declareFont
4 sf
(permanent) 125079  0.00 -1 s
5 sf
(, and no resources are) 149352  -63.50 32 s
57912.0 35176.0 m
(destroyed.) 69589  0.00 -1 s
( These resources can later be destroyed by a call to) 126662  -29.00 32 s
( ) 127338  -30.00 32 s
2 sf
(kill\036client) 138780  0.00 -1 s
5 sf
(.) 139486  0.00 -1 s
2 sf
57912.0 41385.0 m
(:retain\036temporary) 79849  0.00 -1 s
5 sf
( \037) 83377  0.00 32 s
( All resources are marked ) 113071  -0.60 32 s
4 sf
(temporary) 124827  0.00 -1 s
5 sf
(, and no resources are) 149352  -0.50 32 s
57912.0 44546.0 m
(destroyed.) 69589  0.00 -1 s
( These resources can later be destroyed by a call to ) 129037  125.36 32 s
2 sf
(kill\036client) 140479  0.00 -1 s
5 sf
( or ) 144492  125.50 32 s
2 sf
(kill\036) 149352  0.00 -1 s
57912.0 47707.0 m
(temporary\036clients) 79381  0.00 -1 s
5 sf
(.) 80087  0.00 -1 s
2 sf
57912.0 53916.0 m
(:destroy) 67785  0.00 -1 s
5 sf
( \037 All resources are destroyed.) 103384  -27.00 32 s
52832.0 60463.0 m
(When) 59571  0.00 -1 s
( server resources allocated by a display connection are destroyed \037 whether by) 149352  -15.17 32 s
52832.0 63624.0 m
(closing) 60984  0.00 -1 s
( the connection with close\036down mode ) 104384  -160.00 32 s
2 sf
(:destroy) 114257  0.00 -1 s
5 sf
( or by later calling ) 135014  -127.60 32 s
2 sf
(kill\036client) 146456  0.00 -1 s
5 sf
( or) 149352  -160.00 32 s
52832.0 66785.0 m
2 sf
(kill\036temporary\036clients) 79161  0.00 -1 s
5 sf
( \037 then an X server performs the following) 127849  -105.00 32 s
( operations on each) 149352  -120.67 32 s
52832.0 69946.0 m
(member) 62078  0.00 -1 s
( of the save\036set before actually destroying) 109058  -32.50 32 s
( resources.) 121085  -40.00 32 s
52832.0 75816.0 m
(1.) 54949  0.00 -1 s
6 sf
57912.0 h
5 sf
(If) 59790  0.00 -1 s
( the save\036set window is a descendant of a window created on the connection, the) 149352  -90.64 32 s
57912.0 78977.0 m
(save\036set) 67001  0.00 -1 s
( window is reparented. The new parent is the closest ancestor such that the) 149352  -139.92 32 s
57912.0 82138.0 m
(save\036set) 67001  0.00 -1 s
( window is no longer a descendant) 105810  -37.00 32 s
( of any window created on the connec\036) 149352  -37.57 32 s
57912.0 85299.0 m
(tion.) 63008  0.00 -1 s
( The position of the reparented window with respect to its parent remains un\036) 149352  -55.77 32 s
57912.0 88460.0 m
(changed.) 68021  0.00 -1 s
52832.0 94736.0 m
(2.) 54949  0.00 -1 s
6 sf
57912.0 h
5 sf
(If) 59790  0.00 -1 s
( the save\036set window is unmapped, then) 104695  -27.00 32 s
( it is mapped.) 119820  -27.67 32 s
52832.0 100742.0 m
(If) 54710  0.00 -1 s
( the last connection open to) 84820  -170.00 32 s
( an X server is closed with close\036down mode ) 134790  -151.56 32 s
2 sf
(:destroy) 144663  0.00 -1 s
5 sf
(, the) 149352  -171.00 32 s
52832.0 103903.0 m
(server) 59725  0.00 -1 s
( resets its state to restore all initial defaults. The server state after reset is the same) 149352  -182.81 32 s
52832.0 107064.0 m
(as) 55183  0.00 -1 s
( its initial state) 71432  -97.00 32 s
( when first started. When an X server resets, it performs the following) 149352  -89.42 32 s
52832.0 110225.0 m
(operations:) 65371  0.00 -1 s
6 sf
52832.0 116095.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(All) 61517  0.00 -1 s
( permanent and temporary server resources from previously\036closed connections) 149352  -246.00 32 s
57912.0 119256.0 m
(are) 61357  0.00 -1 s
( destroyed.) 73671  -69.00 32 s
6 sf
52832.0 125329.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(All) 61517  0.00 -1 s
( but the predefined atoms are deleted.) 103722  -31.83 32 s
6 sf
52832.0 131403.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(All) 61517  0.00 -1 s
( root window) 76507  -29.00 32 s
( properties are deleted.) 102119  -29.67 32 s
6 sf
52832.0 137476.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(All) 61517  0.00 -1 s
( device control attributes and mappings are restored to their original default val\036) 149352  -203.58 32 s
57912.0 140637.0 m
(ues.) 62380  0.00 -1 s
6 sf
52832.0 146710.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The) 62300  0.00 -1 s
( default background and) 89560  -30.00 32 s
( cursor for all root windows are restored.) 135422  -30.57 32 s
6 sf
52832.0 152784.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The) 62300  0.00 -1 s
( default font) 76044  -24.00 32 s
( path is restored.) 94623  -24.67 32 s
6 sf
52832.0 158857.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The input focus is set) 81958  -24.00 32 s
( to) 84836  -23.00 32 s
( ) 85518  -24.00 32 s
2 sf
(:pointer\036root) 101188  0.00 -1 s
5 sf
(.) 101894  0.00 -1 s
6 sf
52832.0 164931.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(The) 62300  0.00 -1 s
( access control list is reset.) 92321  -15.00 32 s
52832.0 170733.0 m
(The) 57220  0.00 -1 s
( following paragraphs describe the CLX functions used to:) 123094  -34.00 32 s
6 sf
52832.0 177281.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Add) 62771  0.00 -1 s
( or remove a) 76873  -27.00 32 s
( window from a display save\036set.) 114040  -27.60 32 s
6 sf
52832.0 183354.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change the display close\036down) 103852  -44.00 32 s
( mode.) 111489  -45.00 32 s
6 sf
52832.0 189428.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Force) 64337  0.00 -1 s
( a connection to be closed or all its server resources to be destroyed.) 140795  -26.54 32 s
6 sf
52832.0 195501.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Force) 64337  0.00 -1 s
( a connection to be closed and all temporary resources to be) 131428  -35.00 32 s
( destroyed.) 143775  -36.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036176) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(keycode\036character) 56797  0.00 -1 s
( ) 57447  -56.00 32 s
/timsps10i 4 declareFont
4 sf
(display keysym) 74396  -56.00 32 s
( ) 75045  -57.00 32 s
/timsps10 5 declareFont
5 sf
(&optional \() 88078  -56.00 32 s
4 sf
(state) 93408  0.00 -1 s
5 sf
( 0\)) 96407  -57.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  character) 65152  -32.00 32 s
( ) 65825  -33.00 32 s
5 sf
(\037 Type ) 75793  -32.50 32 s
2 sf
(character) 87388  0.00 -1 s
5 sf
( or ) 91085  -32.50 32 s
2 sf
(null) 95791  0.00 -1 s
5 sf
(.) 96497  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the ) 65882  -294.00 32 s
4 sf
(character) 76854  0.00 -1 s
5 sf
( associated with the ) 98564  -294.00 32 s
4 sf
(keysym) 106711  0.00 -1 s
5 sf
( and the ) 115470  -294.00 32 s
4 sf
(state) 120800  0.00 -1 s
5 sf
(. The ) 126718  -294.00 32 s
4 sf
(state) 132048  0.00 -1 s
5 sf
( is) 134636  0.00 32 s
( a ) 136712  -294.50 32 s
2 sf
(mask16) 145962  0.00 -1 s
5 sf
( bit) 149352  -295.00 32 s
52832.0 36779.0 m
(mask) 58789  0.00 -1 s
( representing the state of the ) 90510  -146.67 32 s
4 sf
(display) 98662  0.00 -1 s
5 sf
( modifier keys and pointer buttons. See ) 142773  -125.57 32 s
2 sf
(state\036) 149352  0.00 -1 s
52832.0 39940.0 m
(mask\036key) 64432  0.00 -1 s
5 sf
( in paragraph 1.6,) 84449  63.00 32 s
( Data Types. If the ) 106485  50.00 32 s
4 sf
(keysym) 114632  0.00 -1 s
5 sf
( does not represent a Common) 149352  62.40 32 s
52832.0 43101.0 m
(Lisp) 57849  0.00 -1 s
( character, then ) 75790  -26.67 32 s
2 sf
(nil) 78927  0.00 -1 s
5 sf
( is returned.) 92275  -26.50 32 s
52832.0 49378.0 m
(The) 57220  0.00 -1 s
( ) 57902  -24.00 32 s
4 sf
(state) 63232  0.00 -1 s
5 sf
( determines the bits attribute of the returned ) 113196  -24.00 32 s
4 sf
(character) 124168  0.00 -1 s
5 sf
(,) 124874  0.00 -1 s
( as follows:) 137860  -12.50 32 s
2 sf
52832.0 55654.0 m
(:control) 62391  0.00 -1 s
68072.0 h
(char\036control\036bit) 87348  0.00 -1 s
52832.0 58815.0 m
(:mod\0361) 61451  0.00 -1 s
68072.0 h
(char\036meta\036bit) 84681  0.00 -1 s
52832.0 61976.0 m
(:mod\0362) 61451  0.00 -1 s
68072.0 h
(char\036super\036bit) 85470  0.00 -1 s
52832.0 65137.0 m
(:mod\0363) 61451  0.00 -1 s
68072.0 h
(char\036hyper\036bit) 85783  0.00 -1 s
4 sf
52832.0 71414.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 76200.0 m
(keysym) 60979  0.00 -1 s
5 sf
( \037 A) 67178  -36.00 32 s
( ) 67847  -37.00 32 s
2 sf
(keysym) 76939  0.00 -1 s
5 sf
(.) 77645  0.00 -1 s
4 sf
52832.0 80986.0 m
(state) 58162  0.00 -1 s
5 sf
( \037 A ) 65070  -23.00 32 s
2 sf
(mask16) 74320  0.00 -1 s
5 sf
(.) 75026  0.00 -1 s
20320.0 86495.0 m
0.0 0.0 m
newpath
20455 84871 av
148878 84869 as
[] 0 setdash
dp
149352.0 86495.0 m
/timsps12b 7 declareFont
7 sf
20320.0 89882.0 m
(Client) 29160  0.00 -1 s
( ) 30028  21.00 32 s
52832.0 h
2 sf
(14.5) 57771  0.00 -1 s
60121.0 h
() 60121  0.00 -1 s
5 sf
(The) 64509  0.00 -1 s
( CLX functions affecting client termination are discussed in the) 149352  1459.33 32 s
7 sf
20320.0 93269.0 m
(Termination) 38566  0.00 -1 s
52832.0 h
5 sf
(following) 63804  0.00 -1 s
( paragraphs.) 77510  -85.00 32 s
52832.0 99545.0 m
(When) 59571  0.00 -1 s
( a display connection to an X server is closed, whether by an explicit call to ) 142614  -183.38 32 s
2 sf
(close\036) 149352  0.00 -1 s
52832.0 102706.0 m
(display) 61458  0.00 -1 s
5 sf
( or by some external condition, the server automatically performs) 133833  -160.89 32 s
( a sequence of) 149352  -181.67 32 s
52832.0 105867.0 m
(operations) 64587  0.00 -1 s
( to clean up server state information associated with the closed connection.) 149352  25.55 32 s
52832.0 109028.0 m
(The) 57220  0.00 -1 s
( effect of these operations depends the ) 101552  52.71 32 s
4 sf
(close\036down mode) 121284  61.00 32 s
5 sf
( and the ) 131110  61.67 32 s
4 sf
(save\036set) 140199  0.00 -1 s
5 sf
( that the) 149352  30.50 32 s
52832.0 112189.0 m
(client) 59101  0.00 -1 s
( has specified for the closed display connection.) 111148  -290.00 32 s
( The close\036down mode of a display) 149352  -242.17 32 s
52832.0 115350.0 m
(determines) 65213  0.00 -1 s
( whether server resources allocated by the connection are freed or not. The) 149352  -8.08 32 s
52832.0 118511.0 m
(save\036set) 61921  0.00 -1 s
( identifies windows that will remain) 102493  -20.80 32 s
( after the connection is closed.) 136686  -26.60 32 s
52832.0 124787.0 m
(The) 57220  0.00 -1 s
( display save\036set is used primarily by window managers that reparent) 134537  -74.00 32 s
( the top\036level) 149352  -37.50 32 s
52832.0 127948.0 m
(windows) 63021  0.00 -1 s
( of other clients. For example, such a window manager can automatically cre\036) 149352  -120.00 32 s
52832.0 131109.0 m
(ate) 56122  0.00 -1 s
( a frame window) 74620  -181.00 32 s
( that encloses a top\036level client window, along with a set of controls) 149352  -166.42 32 s
52832.0 134270.0 m
(used) 58005  0.00 -1 s
( for window management. Ordinarily, termination of the window manager client) 149352  44.10 32 s
52832.0 137431.0 m
(would) 59886  0.00 -1 s
( then destroy all client windows! However, the window manager) 131365  -173.33 32 s
( can prevent this) 149352  -195.67 32 s
52832.0 140592.0 m
(by) 55654  0.00 -1 s
( adding to its save\036set those windows created by other clients that should be pre\036) 149352  210.00 32 s
52832.0 143753.0 m
(served.) 60903  0.00 -1 s
52832.0 150029.0 m
(When) 59571  0.00 -1 s
( a) 61497  -33.00 32 s
( display connection closes, an X server performs the following operations:) 145130  -30.20 32 s
52832.0 156577.0 m
(1.) 54949  0.00 -1 s
/symbb8 6 declareFont
6 sf
57912.0 h
5 sf
(For) 61831  0.00 -1 s
( each selection owned by a window created on the connection, the selection) 149352  181.33 32 s
57912.0 159738.0 m
(owner) 64963  0.00 -1 s
( is) 67540  -11.00 32 s
( set to ) 74953  -11.67 32 s
2 sf
(nil) 78090  0.00 -1 s
5 sf
(.) 78796  0.00 -1 s
52832.0 166285.0 m
(2.) 54949  0.00 -1 s
6 sf
57912.0 h
5 sf
(An) 61360  0.00 -1 s
( active or passive grab established for a) 104653  -163.00 32 s
( window created on the connection is re\036) 149352  -163.57 32 s
57912.0 169446.0 m
(leased.) 65670  0.00 -1 s
52832.0 175994.0 m
(3.) 54949  0.00 -1 s
6 sf
57912.0 h
5 sf
(If) 59790  0.00 -1 s
( the connection has grabbed the server, the server is) 117798  -33.00 32 s
( ungrabbed.) 131087  -34.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
132373.0 8195.0 m
(Control Functions) 149013  -14.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036175) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(keyboard\036mapping) 57592  0.00 -1 s
( ) 58249  -49.00 32 s
/timsps10i 4 declareFont
4 sf
(displa) 65148  0.00 -1 s
/timsps10 5 declareFont
5 sf
(y &key ) 74143  -49.00 32 s
2 sf
(:first\036keycode :start :end :data) 110902  -49.00 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
(  mappings ) 65831  -31.00 32 s
5 sf
(\037) 68653  0.00 -1 s
( Type \() 76740  -31.50 32 s
2 sf
(array card32) 92461  -32.00 32 s
5 sf
( \(* *\)\).) 100155  -31.50 32 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the keysyms mapped) 85783  -68.00 32 s
( to the given range of keycodes for the ) 129357  -60.89 32 s
4 sf
(display) 137509  0.00 -1 s
5 sf
( keyboard.) 149352  -69.00 32 s
52832.0 36779.0 m
(The) 57220  0.00 -1 s
( mappings are returned in the form of a two\036dimensional array of ) 131542  15.75 32 s
2 sf
(card32) 139850  0.00 -1 s
5 sf
( keysym) 149352  17.00 32 s
52832.0 39940.0 m
(values.) 60748  0.00 -1 s
( The ) 66266  -141.00 32 s
2 sf
(:data) 72535  0.00 -1 s
5 sf
( argument, if given, must be a two\036dimensional array in) 134184  -125.33 32 s
( which the re\036) 149352  -141.67 32 s
52832.0 43101.0 m
(turned) 60041  0.00 -1 s
( mappings will be stored. In this case:) 102526  -22.00 32 s
52832.0 49378.0 m
(\() 53771  0.00 -1 s
2 sf
(array\036dimension) 73836  0.00 -1 s
( :data) 80774  -37.00 32 s
5 sf
( 1\) ) 84463  -36.50 32 s
52832.0 55654.0 m
(defines) 60981  0.00 -1 s
( the maximum number of keysyms returned) 112577  370.00 32 s
( for any keycode. Otherwise, a) 149352  443.40 32 s
52832.0 58815.0 m
(new array) 64034  0.00 32 s
( is created and returned.) 90928  -35.00 32 s
( ) 91598  -36.00 32 s
52832.0 65092.0 m
(Upon) 59102  0.00 -1 s
( return:) 67303  -26.00 32 s
( ) 67982  -27.00 32 s
52832.0 71368.0 m
(\() 53771  0.00 -1 s
2 sf
(aref) 58627  0.00 -1 s
5 sf
( ) 59329  -4.00 32 s
4 sf
(mappings) 70303  0.00 -1 s
5 sf
( \(+ ) 74238  -4.00 32 s
4 sf
(:start) 80352  0.00 -1 s
5 sf
( ) 81054  -4.00 32 s
4 sf
(i) 81838  0.00 -1 s
5 sf
(\) ) 83483  0.00 32 s
4 sf
(j) 84267  0.00 -1 s
5 sf
(\) ) 85908  -4.00 32 s
52832.0 77645.0 m
(will) 57221  0.00 -1 s
( contain keysym ) 75615  -270.00 32 s
4 sf
(j) 76399  0.00 -1 s
5 sf
( associated with keycode \(+ ) 107397  -216.00 32 s
2 sf
(:first\036keycode) 124007  0.00 -1 s
5 sf
( ) 124443  -270.00 32 s
2 sf
(i) 125227  0.00 -1 s
5 sf
(\) \(or ) 130327  -270.00 32 s
2 sf
(nil) 133464  0.00 -1 s
5 sf
(, if keysym ) 146250  -180.00 32 s
4 sf
(j) 147034  0.00 -1 s
5 sf
( is) 149352  -270.00 32 s
52832.0 80806.0 m
(undefined) 64116  0.00 -1 s
( for) 68032  -79.00 32 s
( that keycode\).) 84644  -40.00 32 s
2 sf
52832.0 87082.0 m
(:first\036keycode) 69442  0.00 -1 s
5 sf
( specifies the first keycode whose mapping is returned; by default,) 142009  -227.70 32 s
( ) 142461  -254.00 32 s
2 sf
(:first\036) 149352  0.00 -1 s
52832.0 90243.0 m
(keycode) 62551  0.00 -1 s
5 sf
( is \() 66584  -100.00 32 s
2 sf
(display\036min\036keycode) 91510  0.00 -1 s
5 sf
( ) 92116  -100.00 32 s
4 sf
(display) 100268  0.00 -1 s
5 sf
(\). ) 102619  0.00 32 s
2 sf
(:start) 109198  0.00 -1 s
5 sf
( and ) 114485  -100.00 32 s
2 sf
(:end) 119815  0.00 -1 s
5 sf
( define the subsequence of) 149352  -99.75 32 s
52832.0 93404.0 m
(the) 56280  0.00 -1 s
( returned array in which the returned mappings are stored. By default, ) 133598  -178.75 32 s
2 sf
(:start) 140177  0.00 -1 s
5 sf
( is given) 149352  -194.50 32 s
52832.0 96565.0 m
(by ) 56360  0.00 32 s
2 sf
(:first\036keycode) 72970  0.00 -1 s
5 sf
( and) 77718  -33.00 32 s
( ) 78390  -34.00 32 s
2 sf
(:end) 83720  0.00 -1 s
5 sf
( is given by: ) 98168  -33.50 32 s
52832.0 102842.0 m
(\(1+) 56774  0.00 -1 s
( \() 58363  -56.00 32 s
2 sf
(display\036max\036keycode) 83758  0.00 -1 s
5 sf
( ) 84407  -57.00 32 s
4 sf
(display) 92559  0.00 -1 s
5 sf
(\)\) ) 95143  0.00 32 s
2 sf
52832.0 109118.0 m
(:first\036keycode) 69442  0.00 -1 s
5 sf
( must not be less than \() 105723  1709.33 32 s
2 sf
(display\036min\036keycode) 130649  0.00 -1 s
5 sf
( ) 133065  1710.00 32 s
4 sf
(display) 141217  0.00 -1 s
5 sf
(\), and) 149352  1709.00 32 s
52832.0 112279.0 m
(the) 56280  0.00 -1 s
( last keycode returned must not be greater than \() 110361  -42.67 32 s
2 sf
(display\036max\036keycode) 135756  0.00 -1 s
5 sf
( ) 136462  0.00 32 s
4 sf
(display) 144614  0.00 -1 s
5 sf
(\).) 146259  0.00 -1 s
4 sf
52832.0 118556.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
52832.0 123342.0 m
(:first\036keycode) 69442  0.00 -1 s
5 sf
( \037 A ) 76308  -37.00 32 s
2 sf
(card8) 83205  0.00 -1 s
5 sf
( defining the first) 102608  -37.00 32 s
( keycode mapping returned.) 133999  -37.67 32 s
2 sf
52832.0 129619.0 m
(:start) 59411  0.00 -1 s
5 sf
(,) 60117  0.00 -1 s
( ) 60797  -26.00 32 s
2 sf
(:end ) 66807  -26.00 32 s
5 sf
(\037 Indexes for) 83054  -26.00 32 s
( the subsequence of the returned array which is modified.) 147546  -26.56 32 s
2 sf
52832.0 135896.0 m
(:data) 59101  0.00 -1 s
( ) 59779  -28.00 32 s
5 sf
(\037 If given, a) 74742  -28.00 32 s
( two\036dimensional array to receive the returned keysyms.) 138018  -28.57 32 s
52832.0 142827.0 m
0.0 0.0 m
newpath
149013 141268 av
52967 141270 as
[] 0 setdash
dp
149352.0 142827.0 m
20320.0 145649.0 m
30412.0 h
2 sf
(Using) 37311  0.00 -1 s
( Keycodes) 49378  -82.00 32 s
52832.0 h
(14.4.3) 59888  0.00 -1 s
5 sf
() 59888  0.00 -1 s
62083.0 h
(The) 66471  0.00 -1 s
( following paragraphs describe the CLX functions used to:) 132283  -41.75 32 s
20320.0 148810.0 m
33370.0 h
2 sf
(and) 37919  0.00 -1 s
( Keysyms) 49378  -63.00 32 s
52832.0 h
/symbb8 6 declareFont
6 sf
152242.0 v
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Convert) 67003  0.00 -1 s
( a keycode into a keysym) 95391  -44.00 32 s
6 sf
52832.0 158790.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Convert) 67003  0.00 -1 s
( a keysym into a character) 96362  -36.80 32 s
2 sf
34544.0 165066.0 m
(keycode\036keysym) 54294  0.00 -1 s
( ) 54924  -76.00 32 s
4 sf
(display keycode keysym\036index) 88621  -76.00 32 s
2 sf
( ) 89250  -77.00 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 168227.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 171388.0 m
(  keysym ) 63002  -31.67 32 s
5 sf
(\037 Type ) 72972  -31.50 32 s
2 sf
(keysym) 82064  0.00 -1 s
5 sf
(.) 82770  0.00 -1 s
52832.0 176107.0 m
(Returns) 61610  0.00 -1 s
( the ) 65896  -287.00 32 s
4 sf
(keysym) 74043  0.00 -1 s
5 sf
( at) 76499  -287.00 32 s
( the given ) 87472  -287.67 32 s
4 sf
(keysym\036index) 102670  0.00 -1 s
5 sf
( from the keysym list for the ) 133785  -246.43 32 s
4 sf
(keycode) 142872  0.00 -1 s
5 sf
( in the) 149352  -287.50 32 s
52832.0 179268.0 m
(current) 60822  0.00 -1 s
( keyboard mapping for the ) 91277  -37.60 32 s
4 sf
(display) 99429  0.00 -1 s
5 sf
( server.) 107696  -38.00 32 s
4 sf
52832.0 185544.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 190331.0 m
(keycode) 61919  0.00 -1 s
( ) 62570  -55.00 32 s
5 sf
(\037 A ) 68732  -54.50 32 s
2 sf
(card8) 75629  0.00 -1 s
5 sf
(.) 76335  0.00 -1 s
4 sf
52832.0 195117.0 m
(keysym\036index) 68030  0.00 -1 s
5 sf
( \037 A ) 74851  -52.00 32 s
2 sf
(card8) 81748  0.00 -1 s
5 sf
(.) 82454  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036174) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
52832.0 22578.0 m
(Other) 59256  0.00 -1 s
( interpretations of ) 81055  344.00 32 s
2 sf
(:caps\036lock) 93281  0.00 -1 s
5 sf
( are possible;) 108860  344.00 32 s
( for example, it may be viewed as) 149352  343.43 32 s
52832.0 25739.0 m
(equivalent) 64587  0.00 -1 s
( to ) 68122  -36.00 32 s
2 sf
(:shift\036lock) 80346  0.00 -1 s
5 sf
(, but only applying when the first keysym is lowercase alpha\036) 149352  -35.60 32 s
52832.0 28900.0 m
(betic) 58317  0.00 -1 s
( and the second keysym) 84872  -102.00 32 s
( is the corresponding uppercase alphabetic. No interpreta\036) 149352  -102.57 32 s
52832.0 32060.0 m
(tion) 57222  0.00 -1 s
( of keysyms beyond the first two in a list is suggested) 116821  -76.00 32 s
( here. No spatial geometry of) 149352  -76.60 32 s
52832.0 35221.0 m
(the) 56280  0.00 -1 s
( symbols on the) 73584  -164.00 32 s
( key is defined by their order in the keysym list, although a geometry) 149352  -164.54 32 s
52832.0 38382.0 m
(might) 59417  0.00 -1 s
( be defined) 71617  -169.00 32 s
( on a vendor\036specific basis. The X server does not use the mapping be\036) 149352  -169.54 32 s
52832.0 41543.0 m
(tween) 59570  0.00 -1 s
( keycodes and keysyms. Rather, the X server stores the mapping merely for read\036) 149352  -152.85 32 s
52832.0 44704.0 m
(ing) 56438  0.00 -1 s
( and writing by) 73522  -27.00 32 s
( clients.) 82273  -28.00 32 s
52832.0 50958.0 m
0.0 0.0 m
newpath
149013 49399 av
52967 49401 as
[] 0 setdash
dp
149352.0 50958.0 m
20320.0 53780.0 m
37389.0 h
2 sf
(Keyboard) 49461  0.00 -1 s
52832.0 h
(14.4.2) 59888  0.00 -1 s
5 sf
() 59888  0.00 -1 s
62083.0 h
(The) 66471  0.00 -1 s
( X server maintains a keyboard mapping) 121779  1590.00 32 s
( that associates each) 149352  1589.33 32 s
20320.0 56941.0 m
38450.0 h
2 sf
(Mapping) 49427  0.00 -1 s
52832.0 h
5 sf
(keycode) 62235  0.00 -1 s
( with one or more keysyms. The following paragraphs describe the CLX func\036) 149352  -113.50 32 s
52832.0 60102.0 m
(tions) 58320  0.00 -1 s
( used to return or change the mapping of) 103816  -34.13 32 s
( keycodes.) 115689  -40.00 32 s
2 sf
34544.0 65701.0 m
(change\036keyboard\036mapping) 66997  0.00 -1 s
( ) 67656  -47.00 32 s
/timsps10i 4 declareFont
4 sf
(display keysyms) 85712  -47.00 32 s
5 sf
( &key \() 94239  -47.00 32 s
2 sf
(:start) 100818  0.00 -1 s
5 sf
( 0\) ) 104485  -47.50 32 s
2 sf
(:end ) 110473  -48.00 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 68862.0 m
(\() 53771  0.00 -1 s
2 sf
(:first\036keycode) 70381  0.00 -1 s
( :start) 77654  -12.00 32 s
5 sf
(\)) 78593  0.00 -1 s
52832.0 73581.0 m
(Changes) 62551  0.00 -1 s
( the mapping of keycodes to ) 95229  12.00 32 s
4 sf
(keysyms) 104474  0.00 -1 s
5 sf
(. A ) 108653  12.00 32 s
2 sf
(:mapping\036notify) 128247  0.00 -1 s
5 sf
( event is generated) 149352  8.33 32 s
52832.0 76742.0 m
(for) 56121  0.00 -1 s
( all clients.) 68411  -8.00 32 s
52832.0 82341.0 m
(The) 57220  0.00 -1 s
( new ) 63278  -27.50 32 s
4 sf
(keysyms) 72523  0.00 -1 s
5 sf
( are specified as a two\036dimensional array in which: ) 130500  -27.56 32 s
52832.0 88618.0 m
(\() 53771  0.00 -1 s
2 sf
(aref) 58627  0.00 -1 s
5 sf
( ) 59333  0.00 32 s
4 sf
(keysyms) 68578  0.00 -1 s
5 sf
( \(+ ) 72513  -4.00 32 s
2 sf
(:start) 79092  0.00 -1 s
5 sf
( ) 79794  -4.00 32 s
4 sf
(i) 80578  0.00 -1 s
5 sf
(\) ) 82219  -4.00 32 s
4 sf
(j) 83003  0.00 -1 s
5 sf
(\) ) 84644  -4.00 32 s
52832.0 94894.0 m
(is) 54714  0.00 -1 s
( ) 55679  259.00 32 s
4 sf
(keysym) 63826  0.00 -1 s
5 sf
( ) 64791  259.00 32 s
4 sf
(j) 65575  0.00 -1 s
5 sf
( associated with keycode \(+ ) 98689  207.20 32 s
2 sf
(:first\036keycode) 115299  0.00 -1 s
5 sf
( ) 116263  258.00 32 s
4 sf
(i) 117047  0.00 -1 s
5 sf
(\). The maximum number of) 149352  258.50 32 s
52832.0 98055.0 m
4 sf
(keysyms) 62077  0.00 -1 s
5 sf
( associated) 74342  -39.00 32 s
( with any one keycode is given by: ) 114040  -34.63 32 s
52832.0 104332.0 m
(\() 53771  0.00 -1 s
2 sf
(array\036dimension) 73836  0.00 -1 s
5 sf
( ) 74481  -61.00 32 s
4 sf
(keysyms) 83726  0.00 -1 s
5 sf
( 1\)) 86721  -61.00 32 s
4 sf
52832.0 110609.0 m
(keysyms) 62077  0.00 -1 s
5 sf
( should contain ) 79524  -168.00 32 s
2 sf
(nil) 82661  0.00 -1 s
5 sf
( elements to represent those keysyms that are undefined for a) 149352  -227.30 32 s
52832.0 113769.0 m
(given) 59102  0.00 -1 s
( keycode. ) 70123  -250.00 32 s
2 sf
(:start) 76702  0.00 -1 s
5 sf
( and ) 81689  -250.00 32 s
2 sf
(:end) 87019  0.00 -1 s
5 sf
( define the subsequence of the) 119859  -250.00 32 s
( ) 120314  -251.00 32 s
4 sf
(keysyms) 129559  0.00 -1 s
5 sf
( array that defines) 149352  -167.00 32 s
52832.0 116930.0 m
(the) 56280  0.00 -1 s
( new mapping, and the number of keycode mappings changed.) 127337  49.00 32 s
( By default, ) 141386  32.33 32 s
2 sf
(:end) 146716  0.00 -1 s
5 sf
( is) 149352  48.00 32 s
52832.0 120091.0 m
(given) 59102  0.00 -1 s
( by:) 63353  -61.00 32 s
52832.0 125690.0 m
(\() 53771  0.00 -1 s
2 sf
(array\036dimension) 73836  0.00 -1 s
5 sf
( ) 74499  -43.00 32 s
4 sf
(keysyms) 83744  0.00 -1 s
5 sf
( 0\) ) 87421  -42.50 32 s
52832.0 131967.0 m
(The) 57220  0.00 -1 s
( keycodes whose mappings are changed are given by ) 115230  -268.22 32 s
2 sf
(:first\036keycode) 131840  0.00 -1 s
5 sf
( through the fol\036) 149352  -301.67 32 s
52832.0 135128.0 m
(lowing:) 61454  0.00 -1 s
( ) 62134  -26.00 32 s
52832.0 141405.0 m
(\(+ ) 56069  0.00 32 s
2 sf
(:first\036keycode) 72679  0.00 -1 s
( ) 73371  -14.00 32 s
5 sf
(\(- ) 76413  -14.00 32 s
2 sf
(:end :start) 89014  -14.00 32 s
5 sf
(\) -1\) ) 95098  -14.00 32 s
52832.0 147681.0 m
(keycodes) 63333  0.00 -1 s
( outside this range of are not affected. ) 107656  123.38 32 s
2 sf
(:first\036keycode) 124266  0.00 -1 s
5 sf
( must not be less than) 149352  141.20 32 s
52832.0 150842.0 m
(\() 53771  0.00 -1 s
2 sf
(display\036min\036keycode) 78697  0.00 -1 s
5 sf
( ) 79403  0.00 32 s
4 sf
(display) 87555  0.00 -1 s
5 sf
(\),) 89200  0.00 -1 s
( and the last keycode modified must) 132075  353.00 32 s
( not be greater) 149352  352.33 32 s
52832.0 154003.0 m
(than \() 59336  0.00 32 s
2 sf
(display\036max\036keycode) 84731  0.00 -1 s
5 sf
( ) 85278  -159.00 32 s
4 sf
(display) 93430  0.00 -1 s
5 sf
(\).) 95075  0.00 -1 s
4 sf
52832.0 160280.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 165066.0 m
(keysyms) 62077  0.00 -1 s
( \037 ) 65928  -35.00 32 s
5 sf
(A two\036dimensional array of keysym \() 108150  -34.80 32 s
2 sf
(card32) 116458  0.00 -1 s
5 sf
(\) values.) 125984  -35.00 32 s
2 sf
52832.0 169853.0 m
(:start) 59411  0.00 -1 s
5 sf
(,) 60117  0.00 -1 s
( ) 60793  -30.00 32 s
2 sf
(:end) 66123  0.00 -1 s
5 sf
( \037 Indexes for the subsequence of ) 105804  -29.86 32 s
4 sf
(keysyms) 115049  0.00 -1 s
5 sf
( used.) 121604  -30.00 32 s
2 sf
52832.0 176129.0 m
(:first\036keycode) 69442  0.00 -1 s
5 sf
( \037 A) 75629  -42.00 32 s
( ) 76292  -43.00 32 s
2 sf
(card8) 83189  0.00 -1 s
5 sf
( defining the first keycode mapping changed.) 133954  -42.50 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
132373.0 8195.0 m
(Control Functions) 149013  -14.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036173) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 5 declareFont
5 sf
52832.0 22578.0 m
(A) 54869  0.00 -1 s
( status of ) 64913  -284.00 32 s
2 sf
(:device\036busy) 79961  0.00 -1 s
5 sf
( is returned if a new keycode given for a modifier was not) 142194  -260.33 32 s
( previ\036) 149352  -285.00 32 s
52832.0 25739.0 m
(ously) 58947  0.00 -1 s
( mapped to that modifier and is currently in the down state. In this case, the map\036) 149352  -71.06 32 s
52832.0 28900.0 m
(pings) 58947  0.00 -1 s
( for) 62900  -42.00 32 s
( all modifiers remain unchanged.) 99997  -32.00 32 s
/timsps10i 4 declareFont
4 sf
52832.0 35176.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
52832.0 39963.0 m
(:shift) 59100  0.00 -1 s
5 sf
(,) 59806  0.00 -1 s
( ) 60385  -127.00 32 s
2 sf
(:lock) 66341  0.00 -1 s
5 sf
(, ) 67626  -127.00 32 s
2 sf
(:control) 77185  0.00 -1 s
5 sf
(, ) 78470  -127.00 32 s
2 sf
(:mod1) 86150  0.00 -1 s
5 sf
(, ) 87435  -127.00 32 s
2 sf
(:mod2) 95115  0.00 -1 s
5 sf
(, ) 96400  -127.00 32 s
2 sf
(:mod3) 104080  0.00 -1 s
5 sf
(, ) 105365  -127.00 32 s
2 sf
(:mod4) 113045  0.00 -1 s
5 sf
(, ) 114330  -127.00 32 s
2 sf
(:mod5) 122010  0.00 -1 s
5 sf
( \037 A) 128027  -127.00 32 s
( sequence of ) 142455  -127.67 32 s
2 sf
(card8) 149352  0.00 -1 s
5 sf
57912.0 43124.0 m
(keycodes) 68413  0.00 -1 s
( for the given modifier.) 94511  -38.75 32 s
20320.0 50123.0 m
0.0 0.0 m
newpath
20455 48499 av
148878 48497 as
[] 0 setdash
dp
149352.0 50123.0 m
/timsps12b 7 declareFont
7 sf
20320.0 53509.0 m
(Keyboard) 34805  0.00 -1 s
( ) 35673  21.00 32 s
52832.0 h
2 sf
(14.4) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(Handling) 70468  0.00 -1 s
( the great diversity of keyboard devices and) 132557  1828.00 32 s
( international) 149352  1827.00 32 s
7 sf
20320.0 56896.0 m
(Encodings) 35375  0.00 -1 s
52832.0 h
5 sf
(language character) 74063  0.00 32 s
( encodings is a difficult problem for interactive programs) 143773  642.00 32 s
( that) 149352  641.00 32 s
52832.0 60057.0 m
(need to) 61061  0.00 32 s
( receive text input but must also be portable. The X Window System) 136933  -124.00 32 s
( solves this) 149352  -62.50 32 s
52832.0 63218.0 m
(problem) 62236  0.00 -1 s
( by using different sets of encodings for device keys \() 120828  -191.00 32 s
4 sf
(keycodes) 131013  0.00 -1 s
5 sf
(\) and for) 140537  -95.50 32 s
( charac\036) 149352  -192.00 32 s
52832.0 66379.0 m
(ter) 55808  0.00 -1 s
( symbols \() 67937  185.00 32 s
4 sf
(keysyms) 77182  0.00 -1 s
5 sf
(\). Each X server maintains a ) 110970  185.00 32 s
4 sf
(keyboard mapping) 132053  0.00 32 s
5 sf
( that associates) 149352  185.00 32 s
52832.0 69540.0 m
(keycodes) 63333  0.00 -1 s
( and keysyms, and which can be returned or changed by client programs.) 145107  -43.00 32 s
52832.0 75816.0 m
(To) 55967  0.00 -1 s
( handle text input, a CLX client program must follow these steps:) 129529  -24.64 32 s
52832.0 82093.0 m
(1.) 54949  0.00 -1 s
57912.0 h
(Receive) 67001  0.00 -1 s
( a ) 69570  -48.00 32 s
2 sf
(:key\036press) 81952  0.00 -1 s
5 sf
( \(or ) 86557  -48.00 32 s
2 sf
(:key\036release) 100973  0.00 -1 s
5 sf
(\) event containing a keycode.) 133931  -48.00 32 s
52832.0 88369.0 m
(2.) 54949  0.00 -1 s
57912.0 h
(Convert) 67003  0.00 -1 s
( the keycode into its corresponding keysym, based on the current keyboard) 149352  -194.36 32 s
57912.0 91530.0 m
(mapping.) 68494  0.00 -1 s
( See ) 73761  -110.00 32 s
2 sf
(keycode\036keysym) 93511  0.00 -1 s
5 sf
(.) 94217  0.00 -1 s
52832.0 97807.0 m
(3.) 54949  0.00 -1 s
57912.0 h
(Convert) 67003  0.00 -1 s
( the keysym into the corresponding Common Lisp character. See ) 139321  -159.10 32 s
2 sf
(keysym\036) 149352  0.00 -1 s
57912.0 100968.0 m
(character) 69507  0.00 -1 s
5 sf
(.) 70213  0.00 -1 s
52832.0 107899.0 m
0.0 0.0 m
newpath
149013 106340 av
52967 106342 as
[] 0 setdash
dp
149352.0 107899.0 m
20320.0 110721.0 m
32783.0 h
2 sf
(Keycodes) 44226  0.00 -1 s
( and) 49378  -103.00 32 s
52832.0 h
(14.4.1) 59888  0.00 -1 s
5 sf
() 59888  0.00 -1 s
62083.0 h
(A) 64120  0.00 -1 s
( ) 65936  1110.00 32 s
4 sf
(keycode) 75023  0.00 -1 s
5 sf
( represents a physical \(or logical\) key. In CLX,) 137036  1110.00 32 s
( keycodes) 149352  1109.00 32 s
20320.0 113882.0 m
38585.0 h
2 sf
(Keysyms) 49401  0.00 -1 s
52832.0 h
5 sf
(are) 56277  0.00 -1 s
( values of type \() 73871  -147.00 32 s
2 sf
(integer) 82333  0.00 -1 s
5 sf
( 8) 84303  -147.00 32 s
( 255\). A keycode value carries no intrinsic information, al\036) 149352  -147.56 32 s
52832.0 117043.0 m
(though) 60671  0.00 -1 s
( server implementors may attempt to encode geometry \(for example, matrix\)) 145658  -145.00 32 s
( in\036) 149352  -146.00 32 s
52832.0 120204.0 m
(formation) 63959  0.00 -1 s
( in some fashion so it can be interpreted in a server\036 dependent fashion. The) 149352  -7.79 32 s
52832.0 123365.0 m
(mapping) 62708  0.00 -1 s
( between keys and keycodes cannot be changed.) 116659  -62.57 32 s
52832.0 129642.0 m
(A) 54869  0.00 -1 s
( ) 55363  -212.00 32 s
4 sf
(keysym) 63510  0.00 -1 s
5 sf
( is an encoding of a symbol on) 96594  -212.00 32 s
( the cap of a key. In CLX, keysyms are values of) 149352  -212.55 32 s
52832.0 132802.0 m
(type) 57691  0.00 -1 s
( ) 58557  160.00 32 s
2 sf
(card32) 66865  0.00 -1 s
5 sf
(. The set of defined keysyms include the ISO Latin character sets \(1\0364\),) 149352  160.42 32 s
52832.0 135963.0 m
(Katakana,) 64193  0.00 -1 s
( Arabic, Cyrillic, Greek, Technical, Special, Publishing,) 127447  14.00 32 s
( APL, Hebrew, and) 149352  13.33 32 s
52832.0 139124.0 m
(miscellaneous) 68820  0.00 -1 s
( keys) 74683  -16.00 32 s
( found on keyboards \(RETURN, HELP, TAB, and so on\). The en\036) 149352  -16.55 32 s
52832.0 142285.0 m
(coding) 60513  0.00 -1 s
( of keysyms is) 76650  -30.00 32 s
( defined by the X Protocol.) 107064  -30.60 32 s
52832.0 148562.0 m
(A) 54869  0.00 -1 s
( list of keysyms is associated) 87276  -56.00 32 s
( with each keycode. The length of the list can vary with) 149352  -56.55 32 s
52832.0 151723.0 m
(each) 58002  0.00 -1 s
( keycode. The list) 78244  59.00 32 s
( is intended to convey the set of symbols on the corresponding) 149352  58.45 32 s
52832.0 154884.0 m
(key.) 57613  0.00 -1 s
( By convention, if the list contains a single keysym and if that) 125473  -165.00 32 s
( keysym is alphabetic) 149352  -165.67 32 s
52832.0 158044.0 m
(and) 56907  0.00 -1 s
( case distinction is relevant, then) 93089  -131.00 32 s
( it should be treated as equivalent to a two\036element) 149352  -131.56 32 s
52832.0 161205.0 m
(list) 56282  0.00 -1 s
( of) 59179  -159.00 32 s
( the lowercase and uppercase keysyms. For example, if the list contains the single) 149352  -159.54 32 s
52832.0 164366.0 m
(keysym) 61611  0.00 -1 s
( for uppercase A, the client should treat it as if it were a pair with lowercase as the) 149352  -275.83 32 s
52832.0 167527.0 m
(first) 57376  0.00 -1 s
( keysym and uppercase A as the second keysym.) 112054  -33.00 32 s
52832.0 173804.0 m
(For) 56751  0.00 -1 s
( any keycode, the first keysym in the list should be chosen as the interpretation of a) 149352  -85.81 32 s
52832.0 176965.0 m
(key) 56907  0.00 -1 s
( press) 63572  160.00 32 s
( when no modifier keys are down. The second keysym in the list normally) 149352  159.46 32 s
52832.0 180126.0 m
(should) 60358  0.00 -1 s
( be chosen when the ) 83914  -7.00 32 s
2 sf
(:shift) 90182  0.00 -1 s
5 sf
( modifier is on, or when the ) 122107  -7.57 32 s
2 sf
(:lock) 128063  0.00 -1 s
5 sf
( modifier is on and) 149352  -7.50 32 s
52832.0 183286.0 m
2 sf
(:lock) 58788  0.00 -1 s
5 sf
( is interpreted as ) 78124  14.25 32 s
2 sf
(:shift\036lock) 90348  0.00 -1 s
5 sf
(. When the ) 103403  14.67 32 s
2 sf
(:lock) 109359  0.00 -1 s
5 sf
( modifier is on and is interpreted as) 149352  14.43 32 s
52832.0 186447.0 m
2 sf
(:caps\036lock) 65058  0.00 -1 s
5 sf
(,) 65764  0.00 -1 s
( it is suggested that the ) 91906  -59.00 32 s
2 sf
(:shift) 98174  0.00 -1 s
5 sf
( modifier first be applied to choose a keysym,) 149352  -58.88 32 s
52832.0 189608.0 m
(but) 56438  0.00 -1 s
( if that keysym is lowercase alphabetic, the corresponding uppercase keysym should) 149352  -202.73 32 s
52832.0 192769.0 m
(be) 55496  0.00 -1 s
( used instead. ) 71391  -32.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036172) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(keyboard\036control) 55549  0.00 -1 s
( ) 56104  -151.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 64256  0.00 -1 s
2 sf
139373.0 h
/timsps10 5 declareFont
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
54864.0 h
(key\036click\036percent,) 74997  0.00 -1 s
( bell\036percent) 89274  -63.00 32 s
( ) 89916  -64.00 32 s
5 sf
(\037 Type ) 99822  -63.50 32 s
2 sf
(card8) 106719  0.00 -1 s
5 sf
(.) 107425  0.00 -1 s
4 sf
52832.0 32060.0 m
54864.0 h
(bell\036pitch) 65678  0.00 -1 s
( bell\036duration ) 81884  -49.00 32 s
5 sf
(\037 Type) 91162  -49.00 32 s
( ) 91818  -50.00 32 s
2 sf
(card16) 100126  0.00 -1 s
5 sf
(.) 100832  0.00 -1 s
4 sf
52832.0 35221.0 m
54864.0 h
(led\036mask) 65050  0.00 -1 s
( ) 65703  -53.00 32 s
5 sf
(\037 Type ) 75630  -53.00 32 s
2 sf
(card32) 83938  0.00 -1 s
5 sf
(.) 84644  0.00 -1 s
4 sf
52832.0 38382.0 m
54864.0 h
(global\036auto\036repeat) 76181  0.00 -1 s
( ) 76864  -23.00 32 s
5 sf
(\037 Either ) 87947  -23.00 32 s
2 sf
(:on) 91866  0.00 -1 s
5 sf
( or ) 95582  -23.00 32 s
2 sf
(:off) 99810  0.00 -1 s
5 sf
(.) 100516  0.00 -1 s
4 sf
52832.0 41543.0 m
54864.0 h
(auto\036repeats) 69128  0.00 -1 s
( ) 69788  -46.00 32 s
5 sf
(\037 Type) 79069  -46.00 32 s
( ) 79728  -47.00 32 s
2 sf
(bit\036vector) 91479  0.00 -1 s
5 sf
(.) 92185  0.00 -1 s
52832.0 46262.0 m
(Returns) 61610  0.00 -1 s
( the current control values for the keyboard. For the LEDs, the least significant) 149352  -92.92 32 s
52832.0 49423.0 m
(bit) 55811  0.00 -1 s
( of ) 59235  -169.00 32 s
4 sf
(led\036mask) 69421  0.00 -1 s
5 sf
( corresponds to) 86325  -169.00 32 s
( LED one, and each one bit in ) 119377  -169.50 32 s
4 sf
(led\036mask) 129563  0.00 -1 s
5 sf
( indicates an LED) 149352  -169.67 32 s
52832.0 52584.0 m
(that) 57064  0.00 -1 s
( is lit. ) 63864  -86.00 32 s
4 sf
(auto\036repeats) 78128  0.00 -1 s
5 sf
( is a bit vector; each one bit indicates that auto\036repeat is) 139957  -86.00 32 s
( enabled) 149352  -87.00 32 s
52832.0 55745.0 m
(for) 56121  0.00 -1 s
( the corresponding key. The vector is represented as 32 bytes. Byte ) 132121  -28.00 32 s
4 sf
(n) 133532  0.00 -1 s
5 sf
( \(from 0\)) 143661  -28.00 32 s
( con\036) 149352  -29.00 32 s
52832.0 58905.0 m
(tains) 58162  0.00 -1 s
( the bits for keys 8) 78897  -38.60 32 s
4 sf
(n) 80308  0.00 -1 s
5 sf
( to 8) 85249  -38.50 32 s
4 sf
(n) 86660  0.00 -1 s
5 sf
(+7, with the least significant bit in the byte representing) 149352  -38.56 32 s
52832.0 62066.0 m
(key) 56907  0.00 -1 s
( 8) 58956  -68.00 32 s
4 sf
(n) 60367  0.00 -1 s
5 sf
(.) 61073  0.00 -1 s
4 sf
52832.0 68343.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 73129.0 m
(modifier\036mapping) 56489  0.00 -1 s
( ) 57144  -51.00 32 s
4 sf
(display) 65296  0.00 -1 s
( ) 65950  -52.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 76290.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 79451.0 m
54864.0 h
(shift\036keycodes) 70849  0.00 -1 s
5 sf
(,) 71555  0.00 -1 s
4 sf
( lock\036keycodes) 87966  -120.00 32 s
5 sf
(,) 88672  0.00 -1 s
4 sf
( control\036keycodes) 108534  -120.00 32 s
5 sf
(,) 109240  0.00 -1 s
4 sf
( mod1\036keycodes) 127220  -120.00 32 s
5 sf
(,) 127926  0.00 -1 s
149352.0 h
52832.0 82612.0 m
54864.0 h
4 sf
(mod2\036keycodes) 72258  0.00 -1 s
5 sf
(,) 72964  0.00 -1 s
( ) 73581  -89.00 32 s
4 sf
(mod3\036keycodes) 90975  0.00 -1 s
5 sf
(, ) 92298  -89.00 32 s
4 sf
(mod4\036keycodes) 109692  0.00 -1 s
5 sf
(, ) 111015  -89.00 32 s
4 sf
(mod5\036keycodes) 128409  0.00 -1 s
5 sf
( \037) 131848  -89.00 32 s
( ) 132464  -90.00 32 s
52832.0 85773.0 m
54864.0 h
(Type) 60663  0.00 -1 s
( ) 61338  -31.00 32 s
2 sf
(list) 64943  0.00 -1 s
5 sf
( of) 67968  -31.00 32 s
( ) 68642  -32.00 32 s
2 sf
(card8) 75539  0.00 -1 s
5 sf
(.) 76245  0.00 -1 s
52832.0 90492.0 m
(Returns) 61610  0.00 -1 s
( the set of keycodes used for each) 98155  -209.00 32 s
( modifier on the ) 116127  -209.50 32 s
4 sf
(display) 124279  0.00 -1 s
5 sf
( keyboard. Each return) 149352  -209.67 32 s
52832.0 93653.0 m
(value) 58944  0.00 -1 s
( is a list of the) 74237  -124.00 32 s
( ) 74818  -125.00 32 s
2 sf
(card8) 81715  0.00 -1 s
5 sf
( keycodes used for each modifier key. The order of keycodes) 149352  -124.50 32 s
52832.0 96814.0 m
(within) 60043  0.00 -1 s
( each list is server\036dependent.) 93382  -30.75 32 s
4 sf
52832.0 103090.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 107877.0 m
(query\036keymap) 52101  0.00 -1 s
( ) 52673  -134.00 32 s
4 sf
(display) 60825  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 111038.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 114198.0 m
(  keymap ) 63475  -31.00 32 s
5 sf
(\037 Type ) 73446  -31.00 32 s
2 sf
(bit\036vector ) 85872  -31.00 32 s
5 sf
(256.) 90811  0.00 -1 s
( ) 91485  -32.00 32 s
52832.0 118917.0 m
(Returns) 61610  0.00 -1 s
( a bit vector that describes the) 94733  -96.00 32 s
( state of the keyboard. Each one bit indicates that) 149352  -96.56 32 s
52832.0 122078.0 m
(the) 56280  0.00 -1 s
( corresponding key is currently pressed.) 100134  -226.00 32 s
( The vector is represented as 32 bytes. Byte ) 147941  -226.56 32 s
4 sf
(n) 149352  0.00 -1 s
5 sf
52832.0 125239.0 m
(\(from) 59255  0.00 -1 s
( 0\) contains the bits for keys 8) 93259  -13.00 32 s
4 sf
(n) 94670  0.00 -1 s
5 sf
( to 8) 99662  -13.00 32 s
4 sf
(n) 101073  0.00 -1 s
5 sf
(+7, with the least) 120497  -13.00 32 s
( significant bit in the byte) 149352  -13.60 32 s
52832.0 128400.0 m
(representing) 66779  0.00 -1 s
( key) 71504  -56.00 32 s
( 8) 73564  -57.00 32 s
4 sf
(n) 74975  0.00 -1 s
5 sf
(.) 75681  0.00 -1 s
4 sf
52832.0 134676.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
34544.0 139463.0 m
(set\036modifier\036mapping) 60718  0.00 -1 s
( ) 61395  -29.00 32 s
4 sf
(display ) 70224  -29.00 32 s
5 sf
(&key ) 77171  -29.00 32 s
2 sf
(:shift) 83439  0.00 -1 s
5 sf
( ) 84116  -29.00 32 s
2 sf
(:lock) 90072  0.00 -1 s
5 sf
( ) 90749  -29.00 32 s
2 sf
(:control) 100308  0.00 -1 s
5 sf
( ) 100985  -29.00 32 s
2 sf
(:mod1) 108665  0.00 -1 s
5 sf
( ) 109342  -29.00 32 s
2 sf
(:mod2) 117022  0.00 -1 s
5 sf
( ) 117698  -30.00 32 s
139373.0 h
(Function) 149407  0.00 -1 s
52832.0 142624.0 m
2 sf
(:mod3) 60512  0.00 -1 s
( :mod4) 68853  -45.00 32 s
5 sf
( ) 69513  -46.00 32 s
2 sf
(:mod5) 77193  0.00 -1 s
34544.0 145785.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 148946.0 m
(  status ) 61485  -17.00 32 s
5 sf
(\037 One of ) 73424  -17.33 32 s
2 sf
(:success) 82985  0.00 -1 s
5 sf
(, ) 84380  -17.00 32 s
2 sf
(:failed) 92059  0.00 -1 s
5 sf
(, or ) 96492  -17.50 32 s
2 sf
(:device\036busy) 111540  0.00 -1 s
5 sf
(. ) 112934  -18.00 32 s
52832.0 153664.0 m
(Changes) 62551  0.00 -1 s
( the set) 70300  -123.00 32 s
( of keycodes mapped to the specified modifier keys on the ) 135604  -112.27 32 s
4 sf
(display) 143756  0.00 -1 s
5 sf
( key\036) 149352  -124.00 32 s
52832.0 156825.0 m
(board.) 59963  0.00 -1 s
( Each keyword argument) 88090  -54.00 32 s
( contains a sequence of new ) 120105  -45.50 32 s
2 sf
(card8) 127002  0.00 -1 s
5 sf
( keycodes for a spe\036) 149352  -54.50 32 s
52832.0 159986.0 m
(cific) 57845  0.00 -1 s
( modifier. The return value) 92812  1121.00 32 s
( indicates whether the change was completed) 149352  933.67 32 s
52832.0 163147.0 m
(successfully.) 67331  0.00 -1 s
52832.0 169424.0 m
(A) 54869  0.00 -1 s
( status of ) 65249  -172.00 32 s
2 sf
(:failed) 72928  0.00 -1 s
5 sf
( is returned if hardware limitations prevent) 120168  -172.00 32 s
( the requested change. For) 149352  -129.50 32 s
52832.0 172585.0 m
(example,) 63098  0.00 -1 s
( multiple keycodes per modifier may not be supported, up transitions on a) 149352  244.83 32 s
52832.0 175745.0 m
(given) 59102  0.00 -1 s
( keycode may not be supported, or autorepeat may be mandatory for a given) 149352  323.08 32 s
52832.0 178906.0 m
(keycode.) 62941  0.00 -1 s
( If ) 66163  -34.00 32 s
2 sf
(:failed) 73842  0.00 -1 s
5 sf
( is returned, the mappings for all modifiers remain) 130422  -29.75 32 s
( unchanged.) 144024  -35.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
132373.0 8195.0 m
(Control Functions) 149013  -14.00 32 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036171) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(change\036keyboard\036control) 64954  0.00 -1 s
( ) 65579  -81.00 32 s
/timsps10i 4 declareFont
4 sf
(display) 73731  0.00 -1 s
/timsps10 5 declareFont
5 sf
( &key ) 81251  -81.00 32 s
2 sf
(:key\036click\036percent :bell\036percent) 119015  -81.00 32 s
5 sf
( ) 119640  -81.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 25739.0 m
2 sf
(:bell\036pitch) 65214  0.00 -1 s
( :bell\036duration :led :led\036mode :key :auto\036repeat\036mode) 129484  -45.00 32 s
5 sf
52832.0 30457.0 m
(Changes) 62551  0.00 -1 s
( the various aspects of the keyboard. The keyword) 120145  97.00 32 s
( arguments specify which) 149352  96.33 32 s
52832.0 33618.0 m
(controls) 61923  0.00 -1 s
( to change. ) 74823  -37.00 32 s
52832.0 39895.0 m
(The) 57220  0.00 -1 s
( ) 57655  -271.00 32 s
2 sf
(:key\036click\036percent) 79437  0.00 -1 s
5 sf
( keyword sets the volume for key clicks, if possible. A value of) 147507  -271.00 32 s
( 0) 149352  -272.00 32 s
52832.0 43056.0 m
(implies) 61141  0.00 -1 s
( off, while a value of 100 implies loud. Setting ) 114541  10.00 32 s
2 sf
(:key\036click\036percent) 136323  0.00 -1 s
5 sf
( to) 139234  10.00 32 s
( ) 139949  9.00 32 s
2 sf
(:default) 149352  0.00 -1 s
5 sf
52832.0 46217.0 m
(restores) 61607  0.00 -1 s
( the default value.) 81751  -25.00 32 s
( ) 82431  -26.00 32 s
52832.0 52493.0 m
(The) 57220  0.00 -1 s
( ) 57650  -276.00 32 s
2 sf
(:bell\036percent) 73007  0.00 -1 s
5 sf
( sets the base volume for the bell between 0 \(off\) and 100 \(loud\) if pos\036) 149352  -276.00 32 s
52832.0 55654.0 m
(sible.) 58868  0.00 -1 s
( Setting ) 68225  -25.50 32 s
2 sf
(:bell\036percent) 83582  0.00 -1 s
5 sf
( to ) 87138  -25.50 32 s
2 sf
(:default) 96541  0.00 -1 s
5 sf
( restores the default value. ) 126819  -25.60 32 s
52832.0 61931.0 m
(The) 57220  0.00 -1 s
( ) 57803  -123.00 32 s
2 sf
(:bell\036pitch) 70185  0.00 -1 s
5 sf
( sets the pitch \(specified in Hz\) of the bell, if possible. Setting the ) 143084  -122.64 32 s
2 sf
(:bell\036) 149352  0.00 -1 s
52832.0 65092.0 m
(pitch) 58946  0.00 -1 s
5 sf
( to ) 62143  -205.00 32 s
2 sf
(:default ) 72047  -205.00 32 s
5 sf
(restores the default value. The) 105315  -205.00 32 s
( ) 105815  -206.00 32 s
2 sf
(:bell\036duration) 122588  0.00 -1 s
5 sf
( sets the duration \(speci\036) 149352  -205.50 32 s
52832.0 68253.0 m
(fied) 57219  0.00 -1 s
( in milliseconds\)) 75869  -81.00 32 s
( of the bell, if possible. Setting ) 110651  -81.57 32 s
2 sf
(:bell\036pitch) 123033  0.00 -1 s
5 sf
( to ) 126477  -81.50 32 s
2 sf
(:default) 135880  0.00 -1 s
5 sf
( restores the) 149352  -81.50 32 s
52832.0 71414.0 m
(default.) 61373  0.00 -1 s
( Note that a bell generator connected with the console but not directly on the key\036) 149352  -273.80 32 s
52832.0 74574.0 m
(board) 59257  0.00 -1 s
( is treated as if it were part of the keyboard.) 108193  -19.80 32 s
52832.0 80851.0 m
(If) 54710  0.00 -1 s
( both) 60265  -168.00 32 s
( ) 60802  -169.00 32 s
2 sf
(:led\036mode) 72869  0.00 -1 s
5 sf
( and ) 78019  -168.50 32 s
2 sf
(:led) 82564  0.00 -1 s
5 sf
( are specified, then the state of that LED is changed, if possi\036) 149352  -168.50 32 s
52832.0 84012.0 m
(ble.) 56986  0.00 -1 s
( If only ) 65141  -286.00 32 s
2 sf
(:led\036mode) 77208  0.00 -1 s
5 sf
( is specified,) 90822  -286.00 32 s
( the state of all LEDs are changed, if possible. At most) 149352  -286.55 32 s
52832.0 87173.0 m
(32) 55654  0.00 -1 s
( LEDs are supported, numbered from one. No standard interpretation of) 134435  -225.00 32 s
( the LEDs are) 149352  -225.67 32 s
52832.0 90334.0 m
(defined.) 62000  0.00 -1 s
( ) 62653  -53.00 32 s
52832.0 96610.0 m
(If) 54710  0.00 -1 s
( both ) 61063  -38.00 32 s
2 sf
(:auto\036repeat\036mode) 83471  0.00 -1 s
5 sf
( and ) 88882  -38.00 32 s
2 sf
(:key) 94054  0.00 -1 s
5 sf
( are specified, the auto\036repeat mode of that key is) 149352  -37.89 32 s
52832.0 99771.0 m
(changed,) 62941  0.00 -1 s
( if possible. If only ) 86245  240.00 32 s
2 sf
(:auto\036repeat\036mode) 108653  0.00 -1 s
5 sf
( is specified, the global auto\036repeat) 149352  240.40 32 s
52832.0 102932.0 m
(mode) 59102  0.00 -1 s
( for the entire keyboard is changed, if possible, without affecting the per\036key set\036) 149352  -80.54 32 s
52832.0 106093.0 m
(tings.) 59026  0.00 -1 s
( An error occurs if ) 80448  -25.00 32 s
2 sf
(:key) 85620  0.00 -1 s
5 sf
( is specified without ) 109034  -25.00 32 s
2 sf
(:auto\036repeat\036mode) 131442  0.00 -1 s
5 sf
(.) 132148  0.00 -1 s
4 sf
52832.0 112370.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
52832.0 117156.0 m
(:key\036click\036percent) 74614  0.00 -1 s
5 sf
( \037 An) 82222  -37.00 32 s
( integer \(0 100\).) 100290  -37.67 32 s
2 sf
52832.0 123433.0 m
(:bell\036percent) 68189  0.00 -1 s
5 sf
( \037 An integer \(0) 87348  -30.00 32 s
( 100\).) 93901  -31.00 32 s
2 sf
52832.0 129709.0 m
(:bell\036pitch) 65214  0.00 -1 s
5 sf
( \037 A) 71415  -35.00 32 s
( ) 72085  -36.00 32 s
2 sf
(card16) 80393  0.00 -1 s
5 sf
(.) 81099  0.00 -1 s
2 sf
52832.0 135986.0 m
(:bell\036duration) 69605  0.00 -1 s
5 sf
( \037 A) 75784  -46.00 32 s
( ) 76443  -47.00 32 s
2 sf
(card16) 84751  0.00 -1 s
5 sf
(.) 85457  0.00 -1 s
2 sf
52832.0 142263.0 m
(:led) 57377  0.00 -1 s
( ) 58052  -31.00 32 s
5 sf
(\037 A ) 64262  -30.50 32 s
2 sf
(card8) 71159  0.00 -1 s
5 sf
(.) 71865  0.00 -1 s
2 sf
52832.0 148539.0 m
(:led\036mode) 64899  0.00 -1 s
5 sf
( \037 Either ) 76689  -15.00 32 s
2 sf
(:on) 80608  0.00 -1 s
5 sf
( or) 83649  -15.00 32 s
( ) 84339  -16.00 32 s
2 sf
(:off) 88567  0.00 -1 s
5 sf
(.) 89273  0.00 -1 s
2 sf
52832.0 154816.0 m
(:key) 58004  0.00 -1 s
( ) 58662  -48.00 32 s
5 sf
(\037) 61484  0.00 -1 s
( A ) 64836  -48.50 32 s
2 sf
(card8) 71733  0.00 -1 s
5 sf
( keycode.) 82499  -49.00 32 s
2 sf
52832.0 161092.0 m
(:auto\036repeat\036mode) 75240  0.00 -1 s
( ) 75921  -25.00 32 s
5 sf
(\037 Either ) 87000  -25.00 32 s
2 sf
(:on) 90919  0.00 -1 s
5 sf
(, ) 92306  -25.00 32 s
2 sf
(:off) 96534  0.00 -1 s
5 sf
(, or) 100271  -25.00 32 s
( ) 100951  -26.00 32 s
2 sf
(:default) 110354  0.00 -1 s
5 sf
(.) 111060  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Control Functions) 36960  -14.00 32 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(14\036170) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(pointer\036control) 52881  0.00 -1 s
( ) 53485  -102.00 32 s
/timsps10i 4 declareFont
4 sf
(displa) 60384  0.00 -1 s
/timsps10 5 declareFont
5 sf
(y) 61795  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 25739.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
( ) 63082  -18.00 32 s
4 sf
52832.0 28900.0 m
( ) 53499  -39.00 32 s
( acceleration) 68271  -40.00 32 s
5 sf
(, ) 69644  -39.00 32 s
4 sf
(threshold ) 80971  -40.00 32 s
5 sf
(\037 Type ) 90925  -39.50 32 s
2 sf
(number) 100488  0.00 -1 s
5 sf
(.) 101194  0.00 -1 s
52832.0 33618.0 m
(Returns) 61610  0.00 -1 s
( the acceleration and threshold for the) 104059  -30.00 32 s
( ) 104734  -31.00 32 s
4 sf
(display) 112886  0.00 -1 s
5 sf
( pointer. ) 122936  -30.50 32 s
4 sf
52832.0 39895.0 m
(displa) 59731  0.00 -1 s
5 sf
(y) 61142  0.00 -1 s
( \037 A ) 68042  -25.67 32 s
2 sf
(display) 76668  0.00 -1 s
5 sf
(.) 77374  0.00 -1 s
2 sf
34544.0 44681.0 m
(pointer\036mapping) 54924  0.00 -1 s
( ) 55598  -32.00 32 s
4 sf
(display) 63750  0.00 -1 s
5 sf
( &key \() 72308  -31.50 32 s
2 sf
(:result\036type 'list) 91472  -32.00 32 s
5 sf
(\)) 92411  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
2 sf
34544.0 47842.0 m
52832.0 h
5 sf
(Returns:) 62394  0.00 -1 s
52832.0 51003.0 m
(  ) 54174  -35.00 32 s
4 sf
(mapping) 64050  0.00 -1 s
5 sf
( \037 Type ) 74684  -35.00 32 s
2 sf
(sequence) 85501  0.00 -1 s
5 sf
( or ) 89194  -34.50 32 s
2 sf
(card8) 96091  0.00 -1 s
4 sf
(.) 96797  0.00 -1 s
5 sf
( ) 97468  -35.00 32 s
52832.0 55722.0 m
(Returns) 61610  0.00 -1 s
( or \(with ) 71985  -16.00 32 s
2 sf
(setf) 76214  0.00 -1 s
5 sf
(\) changes the mapping of button numbers for the ) 131795  -15.89 32 s
4 sf
(display) 139947  0.00 -1 s
5 sf
( pointer.) 149352  0.00 32 s
52832.0 58883.0 m
(The) 57220  0.00 -1 s
( ) 57918  -8.00 32 s
2 sf
(:result\036type) 71864  0.00 -1 s
5 sf
( is not used when changing the mapping. If) 120474  -8.00 32 s
( element ) 130802  -8.50 32 s
4 sf
(i) 131586  0.00 -1 s
5 sf
( of the mapping) 149352  -8.67 32 s
52832.0 62044.0 m
(sequence) 63175  0.00 -1 s
( is ) 66329  -70.00 32 s
4 sf
(j) 67113  0.00 -1 s
5 sf
(, then the events from pointer button ) 108547  -60.00 32 s
4 sf
(j) 109331  0.00 -1 s
5 sf
( are reported by the server as) 141507  -70.00 32 s
( events) 149352  -71.00 32 s
52832.0 65205.0 m
(for) 56121  0.00 -1 s
( button ) 64721  -12.00 32 s
4 sf
(i) 65505  0.00 -1 s
5 sf
(+1. \(Note that pointer buttons are numbered beginning with one, while the) 149352  -10.64 32 s
52832.0 68366.0 m
(mapping) 62708  0.00 -1 s
( sequence itself is indexed normally from zero.\)) 115346  -182.57 32 s
( If element ) 127634  -213.67 32 s
4 sf
(i) 128418  0.00 -1 s
5 sf
( of the mapping se\036) 149352  -213.50 32 s
52832.0 71526.0 m
(quence) 60824  0.00 -1 s
( is zero, then button ) 83441  -85.60 32 s
4 sf
(i) 84225  0.00 -1 s
5 sf
(+1) 87228  0.00 -1 s
( is disabled and can no longer generate input events. No) 149352  -96.80 32 s
52832.0 74687.0 m
(two) 57064  0.00 -1 s
( elements of the mapping can have the same non\036zero value.) 124787  -38.00 32 s
52832.0 80964.0 m
(The) 57220  0.00 -1 s
( length of the mapping sequence indicates the actual number of buttons on the de\036) 149352  -13.79 32 s
52832.0 84125.0 m
(vice.) 58239  0.00 -1 s
( When changing the mapping, the new mapping must have) 124188  -40.00 32 s
( this same length.) 143820  -40.67 32 s
4 sf
52832.0 90401.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
52832.0 95188.0 m
(:result\036type) 66778  0.00 -1 s
( ) 67454  -30.00 32 s
5 sf
(\037 The type of sequence to return.) 105912  -29.67 32 s
20320.0 102187.0 m
0.0 0.0 m
newpath
20455 100563 av
148878 100561 as
[] 0 setdash
dp
149352.0 102187.0 m
/timsps12b 7 declareFont
7 sf
20320.0 105574.0 m
(Keyboard) 34805  0.00 -1 s
( ) 35673  21.00 32 s
52832.0 h
2 sf
(14.3) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(The) 64354  0.00 -1 s
( following paragraphs describe the CLX functions used to:) 130183  -39.63 32 s
7 sf
20320.0 108960.0 m
(Control) 31605  0.00 -1 s
52832.0 h
/symbb8 6 declareFont
6 sf
115508.0 v
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change keyboard controls) 98146  -50.75 32 s
6 sf
52832.0 122055.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Ring) 63400  0.00 -1 s
( the keyboard bell) 83560  -46.00 32 s
6 sf
52832.0 128603.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change the mapping of modifiers) 106454  -34.00 32 s
6 sf
52832.0 135151.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( the current up/down state of all keys) 107177  -26.71 32 s
2 sf
34544.0 141427.0 m
(bell) 38934  0.00 -1 s
( ) 39605  -35.00 32 s
4 sf
(display) 47757  0.00 -1 s
( ) 48427  -36.00 32 s
5 sf
(&optional \() 61481  -35.00 32 s
4 sf
(percent\036from\036normal) 85304  0.00 -1 s
5 sf
( 0\)) 88324  -36.00 32 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 146146.0 m
(Rings) 59418  0.00 -1 s
( the bell on the keyboard) 86433  -193.00 32 s
( at a volume relative to the base volume for the keyboard,) 149352  -193.55 32 s
52832.0 149307.0 m
(if) 54555  0.00 -1 s
( possible. Percent can range from -100 to 100 inclusive, or else a) 127171  -75.00 32 s
( Value error occurs.) 149352  -75.67 32 s
52832.0 152468.0 m
(The) 57220  0.00 -1 s
( following is the bell) 80446  -33.00 32 s
( volume when percent is non\036negative:) 124087  -33.60 32 s
52832.0 158744.0 m
(\(-) 55182  0.00 -1 s
( \(+ ) 59079  -23.00 32 s
4 sf
(base percent) 73398  -23.00 32 s
5 sf
(\) \() 75959  -23.00 32 s
2 sf
(quotient) 85992  0.00 -1 s
5 sf
( \(* ) 89708  -23.00 32 s
4 sf
(base percent) 104027  -23.00 32 s
5 sf
(\) 100\)\)) 111760  -23.00 32 s
52832.0 165021.0 m
(and) 56907  0.00 -1 s
( when percent) 72665  -35.00 32 s
( is negative: ) 86902  -35.67 32 s
52832.0 171298.0 m
(\(+) 55363  0.00 -1 s
( ) 56046  -23.00 32 s
4 sf
(base) 61219  0.00 -1 s
5 sf
( \() 62841  -23.00 32 s
2 sf
(quotient) 72874  0.00 -1 s
5 sf
( \(* ) 76590  -23.00 32 s
4 sf
(base percent) 90909  -23.00 32 s
5 sf
(\) 100\)\)) 98642  -23.00 32 s
4 sf
52832.0 177574.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 182361.0 m
(percent\036from\036normal) 76655  0.00 -1 s
5 sf
( \037 An integer) 92764  -38.00 32 s
( \(-100 through 100\).) 116005  -38.67 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(14\036169) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 8 declareFont
8 sf
20410.0 39376.0 m
59063.0 39466.0 m
(CONTROL FUNCTIONS) 115846  -76.00 32 s
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0.0 sw
270.0 sw
0.0 sw
270.0 sw
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
146087 39315 av
142782 39315 as
142782 36265 as
142782 36265 as
142782 33596 as
142782 33596 as
142782 27495 as
142782 27495 as
142415 23300 as
142415 23300 as
146087 23300 as
146087 33596 as
147923 33596 as
147923 36265 as
146087 36265 as
146087 39315 as
fp
newpath
146087 39315 av
142782 39315 as
142782 36265 as
[] 0 setdash
dp
newpath
0.0 sw
142782 36265 av
142782 33596 as
newpath
270.0 sw
142782 33596 av
142782 27495 as
[] 0 setdash
dp
newpath
0.0 sw
142782 27495 av
142415 23300 as
newpath
270.0 sw
142415 23300 av
146087 23300 as
146087 33596 as
147923 33596 as
147923 36265 as
146087 36265 as
146087 39315 as
[] 0 setdash
dp
0.0 sw
270.0 sw
0.0 sw
270.0 sw
/drawmode PL_REPLACE def
newpath
0.0 sw
/drawmode PL_SET def
142782 36265 av
142782 33596 as
142782 33596 as
138743 33596 as
142782 27495 as
142782 27495 as
142415 23300 as
142415 23300 as
135806 32833 as
135806 36265 as
142782 36265 as
fp
newpath
142782 36265 av
142782 33596 as
newpath
270.0 sw
142782 33596 av
138743 33596 as
142782 27495 as
[] 0 setdash
dp
newpath
0.0 sw
142782 27495 av
142415 23300 as
newpath
270.0 sw
142415 23300 av
135806 32833 as
135806 36265 as
142782 36265 as
[] 0 setdash
dp
0.0 sw
newpath
135439 23300 av
135439 23300 as
newpath
135439 43891 av
135439 43891 as
newpath
148290 43891 av
148290 43891 as
newpath
148290 23300 av
148290 23300 as
270.0 sw
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
134088 39315 av
134088 23300 as
131150 23300 as
128213 26351 as
128213 27876 as
130783 27876 as
130783 39315 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
127845 23300 av
127845 23300 as
newpath
127845 43891 av
127845 43891 as
newpath
135556 43891 av
135556 43891 as
newpath
135556 23300 av
135556 23300 as
149351.0 39376.0 m
8 sf
/timsps10 5 declareFont
5 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 7 declareFont
7 sf
20320.0 46871.0 m
(Grabbing) 34433  0.00 -1 s
52832.0 h
2 sf
(14.1) 57771  0.00 -1 s
60121.0 h
() 60121  0.00 -1 s
5 sf
(Certain) 68427  0.00 -1 s
( cases may require that a client demand exclusive access to the) 149352  923.45 32 s
7 sf
20320.0 50258.0 m
(the) 24833  0.00 -1 s
( Server) 35312  44.00 32 s
52832.0 h
5 sf
(server, causing) 69758  0.00 32 s
( the processing for all other clients to be) 114521  -67.00 32 s
( suspended. Such exclusive ac\036) 149352  -50.75 32 s
52832.0 53419.0 m
(cess) 57534  0.00 -1 s
( is referred to as ) 76435  3.40 32 s
/timsps10i 4 declareFont
4 sf
(grabbing the server) 98703  3.50 32 s
5 sf
(. CLX provides functions to grab and release) 149352  3.00 32 s
52832.0 56580.0 m
(exclusive) 63490  0.00 -1 s
( access to) 73831  -237.00 32 s
( the server. These function should be used rarely and always with ex\036) 149352  -217.75 32 s
52832.0 59741.0 m
(treme) 59256  0.00 -1 s
( caution, since they have the potential to disrupt the entire window) 133530  -73.64 32 s
( system for all) 149352  -81.67 32 s
52832.0 62902.0 m
(clients.) 60905  0.00 -1 s
( ) 61592  -19.00 32 s
2 sf
34544.0 69178.0 m
(grab\036server) 48648  0.00 -1 s
( ) 49241  -113.00 32 s
4 sf
(display) 57393  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 73897.0 m
(Disables) 62550  0.00 -1 s
( processing of requests and close\036downs) 107587  -68.00 32 s
( on all connections other than the one) 149352  -68.57 32 s
52832.0 77058.0 m
(on) 55654  0.00 -1 s
( which this request arrived. ) 86879  -24.60 32 s
4 sf
52832.0 83335.0 m
(display) 60984  0.00 -1 s
( ) 61669  -21.00 32 s
5 sf
(\037 A ) 67899  -20.50 32 s
2 sf
(display) 76525  0.00 -1 s
5 sf
(. ) 77916  -21.00 32 s
2 sf
34544.0 88121.0 m
(ungrab\036server) 51786  0.00 -1 s
( ) 52356  -136.00 32 s
4 sf
(display) 60508  0.00 -1 s
2 sf
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 92840.0 m
(Restarts) 61923  0.00 -1 s
( processing of requests and close\036downs on other connections.) 131945  -34.88 32 s
4 sf
52832.0 99116.0 m
(display) 60984  0.00 -1 s
( ) 61669  -21.00 32 s
5 sf
(\037 A ) 67899  -20.50 32 s
2 sf
(display) 76525  0.00 -1 s
5 sf
(. ) 77916  -21.00 32 s
2 sf
34544.0 103903.0 m
(with\036server\036grabbed) 59307  0.00 -1 s
( ) 59931  -82.00 32 s
4 sf
(display ) 68708  -81.00 32 s
5 sf
(&body) 76547  0.00 -1 s
4 sf
( body) 82657  -82.00 32 s
2 sf
142014.0 h
5 sf
(Macro) 149379  0.00 -1 s
52832.0 110112.0 m
(Grabs) 59570  0.00 -1 s
( the ) 64232  -99.00 32 s
4 sf
(display) 72384  0.00 -1 s
5 sf
( server only within the dynamic extent of the ) 122823  -99.56 32 s
4 sf
(body) 128309  0.00 -1 s
5 sf
(. ) 129622  -99.00 32 s
2 sf
(ungrab\036server) 146864  0.00 -1 s
5 sf
( is) 149352  -100.00 32 s
52832.0 113273.0 m
(automatically) 68192  0.00 -1 s
( called upon exit from the ) 96294  -280.00 32 s
4 sf
(body) 101780  0.00 -1 s
5 sf
(. This macro provides the most reliable way) 149352  -280.00 32 s
52832.0 116434.0 m
(for) 56121  0.00 -1 s
( CLX clients to grab the) 83223  -19.00 32 s
( server.) 91508  -20.00 32 s
4 sf
52832.0 122710.0 m
(display) 60984  0.00 -1 s
5 sf
( \037 A ) 67884  -25.67 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
4 sf
52832.0 127497.0 m
(body) 58318  0.00 -1 s
5 sf
( \037 The forms to execute while the server is grabbed.) 117991  -27.90 32 s
20320.0 133006.0 m
0.0 0.0 m
newpath
20455 131382 av
148878 131380 as
[] 0 setdash
dp
149352.0 133006.0 m
7 sf
20320.0 136392.0 m
(Pointer) 31039  0.00 -1 s
( Control) 43214  43.00 32 s
52832.0 h
2 sf
(14.2) 57771  0.00 -1 s
5 sf
() 57771  0.00 -1 s
59966.0 h
(The) 64354  0.00 -1 s
( following paragraphs describe the CLX functions used to:) 130183  -39.63 32 s
/symbb8 6 declareFont
6 sf
52832.0 142940.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change the pointer acceleration and acceleration threshold) 134496  -45.75 32 s
6 sf
52832.0 149487.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(Return) 65592  0.00 -1 s
( or change the mapping of pointer button numbers) 121875  -38.00 32 s
2 sf
34544.0 155764.0 m
(change\036pointer\036control) 62286  0.00 -1 s
( ) 62912  -80.00 32 s
4 sf
(display) 71064  0.00 -1 s
5 sf
( &key ) 78586  -80.00 32 s
2 sf
(:acceleration :threshold) 107109  -80.00 32 s
139373.0 h
5 sf
(Function) 149407  0.00 -1 s
52832.0 160483.0 m
(Changes) 62551  0.00 -1 s
( the acceleration and/or the acceleration threshold of the pointer for the ) 140494  -243.83 32 s
4 sf
(display) 148646  0.00 -1 s
5 sf
(.) 149352  0.00 -1 s
52832.0 163644.0 m
(The) 57220  0.00 -1 s
( ) 57767  -159.00 32 s
2 sf
(:acceleration) 73280  0.00 -1 s
5 sf
( number is) 84876  -159.00 32 s
( used as a multiplier, typically specified as a rational num\036) 149352  -143.60 32 s
52832.0 166805.0 m
(ber) 56435  0.00 -1 s
( of the form ) 69505  -259.00 32 s
4 sf
(C/P) 73895  0.00 -1 s
5 sf
(, where ) 82389  -258.50 32 s
4 sf
(C) 84271  0.00 -1 s
5 sf
( is the number of pixel positions of cursor motion displayed) 149352  -232.70 32 s
52832.0 169966.0 m
(for) 56121  0.00 -1 s
( ) 56734  -93.00 32 s
4 sf
(P) 58458  0.00 -1 s
5 sf
( units of pointer device motion. The acceleration only occurs if the pointer moves) 149352  -85.77 32 s
52832.0 173126.0 m
(more) 58630  0.00 -1 s
( that ) 63870  -202.00 32 s
2 sf
(:threshold) 76254  0.00 -1 s
5 sf
( pixels at once, and only) 102880  -161.60 32 s
( applies to the motion beyond the ) 139793  -202.57 32 s
2 sf
(:thresh\036) 149352  0.00 -1 s
52832.0 176287.0 m
(old) 56596  0.00 -1 s
5 sf
(.) 57302  0.00 -1 s
( Either ) 65913  152.00 32 s
2 sf
(:acceleration) 81426  0.00 -1 s
5 sf
( or ) 85796  304.00 32 s
2 sf
(:threshold) 98180  0.00 -1 s
5 sf
( can be set to ) 115143  304.40 32 s
2 sf
(:default) 124546  0.00 -1 s
5 sf
(, that restores the de\036) 149352  304.50 32 s
52832.0 179448.0 m
(fault settings) 67332  0.00 32 s
( of the server.) 82793  -18.00 32 s
4 sf
52832.0 185725.0 m
(display) 60984  0.00 -1 s
( ) 61664  -26.00 32 s
5 sf
(\037 A ) 67884  -25.50 32 s
2 sf
(display) 76510  0.00 -1 s
5 sf
(.) 77216  0.00 -1 s
2 sf
52832.0 190511.0 m
(:acceleration) 68345  0.00 -1 s
( ) 69017  -34.00 32 s
5 sf
(\037 A number for the acceleration ratio.) 112776  -33.50 32 s
2 sf
52832.0 196788.0 m
(:threshold) 65216  0.00 -1 s
( ) 65893  -29.00 32 s
5 sf
(\037 The number of pixels required for acceleration to take effect.) 137928  -29.00 32 s
eop
initialstate restore
