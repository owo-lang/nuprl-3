%!

userdict /letter known not {/letter {} def} if
/bdf {bind def} bind def
/xdf {exch def} bdf
/ldd {load def} bdf
/PL_SET 	0 def
/PL_CLEAR	1 def
/PL_XOR		2 def
/PL_REPLACE	3 def
/drawmode	PL_SET def
/useNativeFonts	false def	
/numtextures	21 def
/whitefill	13 def
/docutmark	false def
/invertmatrix [1 0 0 -1 0 0] def
/MAXFONT 1024 def
/MAXFONT1 MAXFONT 1 sub def
/MAXCHARS 128 def
/MAXCHARS1 MAXCHARS 1 sub def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charname 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymEncoding 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch {72 mul} bdf
/sw /setlinewidth ldd
/m { /vpos xdf /hpos xdf } bdf
/v { /vpos xdf } bdf
/h { /hpos xdf } bdf
/pm /moveto ldd
/as /lineto ldd
/av /moveto ldd
/el { 0 begin	
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad  scale
  0 0 1 startangle  endangle  arc
  savematrix setmatrix
  end
} bdf
/el load 0 8 dict put
/addconic { 0 begin
  /clockwise xdf
  /endangle xdf /startangle xdf 
  /rotation xdf
  /yrad xdf /xrad xdf
  /yc xdf /xc xdf
	
  /savematrix matrix currentmatrix def
  xc yc translate
  rotation rotate
  xrad yrad scale
  0 0 1 startangle  endangle  
  clockwise 1 eq {arc} {arcn} ifelse
  savematrix setmatrix
  end
} bdf
/addconic load 0 9 dict put
/dp {
  gsave  
  1 setlinejoin
  1 setlinecap
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  stroke 
  grestore  
} bdf 
/ALIGN_NONE 0 def
/ALIGN_OPEN 1 def
/ALIGN_CLOSE 2 def
/PENPATWIDTHADJ [0 0 4 8 12 16 20] def
/MINSCALE .1 def
/pathlength { 0 begin
    flattenpath
    /dist 0 def
    { /yfirst xdf /xfirst xdf
      /ymoveto yfirst def /xmoveto xfirst def}
    { /ynext xdf /xnext xdf
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    {}
    { /ynext ymoveto def /xnext xmoveto def
      /dist dist ynext yfirst sub dup mul
	xnext xfirst sub dup mul add sqrt add def
      /yfirst ynext def /xfirst xnext def}
    pathforall
    dist
    end
} bdf
/pathlength load 0 7 dict put
/setpenpat { 0 begin
    /style xdf
    /width xdf
    /pattern xdf
    /scaleup DPIx 300 div def
    /indx width 1 add scaleup div 4 div cvi def
    indx 1 gt indx 7 lt and {
	/adj PENPATWIDTHADJ indx get def
	/adj adj scaleup mul def
	/indx 0 def
	pattern {
	    /iszero indx 2 mod def
	    iszero 0 ne
		{adj add /val xdf}
		{/val xdf}
	    ifelse
	    pattern indx val put
	    /indx indx 1 add def
	} forall
    } if
    /offset 0 def
    /patternlen 0 def
    /pathlen pathlength def
    pattern
	{patternlen add /patternlen xdf
	} forall
    style ALIGN_NONE eq {
    } if
    style ALIGN_CLOSE eq {
	/n pathlen patternlen div cvi def
	/extralen pathlen cvi patternlen cvi mod def
	/halfpatlen patternlen 2 div def
	extralen halfpatlen gt {/n n 1 add def} if
	n 0 eq {/n 1 def} if
	/scale1 pathlen n patternlen mul div def
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	} if
	/offset pattern 0 get 2 div round def
    } if
    style ALIGN_OPEN eq {
	/firstdash pattern 0 get def
	/dashpct firstdash patternlen div def
	/n pathlen patternlen div dashpct sub cvi def
	/scale1 pathlen n dashpct add patternlen mul div def
	/scale2 pathlen n dashpct add 1 add patternlen mul div def
	/x scale2 1 sub abs def
	/y scale1 1 sub abs def
	x y lt {/scale1 scale2 def} if
	scale1 MINSCALE gt {
	    /indx 0 def
	    pattern {
		scale1 mul /val xdf
		val 0 eq {/val 1 def} if
		pattern indx val round put
		/indx indx 1 add def
	    } forall
	    /offset 0 def
	} if 
    } if
    pattern offset setdash
    end
} bdf
/setpenpat load 0 50 dict put
/s {
  /mappedsp xdf
  /spAdj xdf
  /stEnd xdf
  /fstring xdf
  hpos vpos moveto
  drawmode PL_CLEAR eq {1} {0} ifelse setgray
  spAdj 0 ne mappedsp -1 ne and {
    spAdj 0 mappedsp fstring widthshow
  } {
    fstring show
  } ifelse
  /hpos stEnd def
} bdf
/PL_bitmap { 0 begin
  gsave
  /vpix xdf
  /hpix xdf
  /nbytes hpix 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  nbytes 8 mul vpix false [1 0 0 1 0 0 ] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop}
    imagemask
  grestore
  end
} bdf
/PL_bitmap load 0 4 dict put
/PL_contone { 0 begin
   gsave
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /nbytes hpix nbits mul 15 add 16 idiv 2 mul def
  /picstr nbytes string def
  hpos vpos translate
  hpix vpix nbits [1 0 0 1 0 0] 
  {currentfile picstr 0 nbytes getinterval readhexstring pop }
    image
  grestore
  end
} bdf
/PL_contone load 0 5 dict put
/PL_image { 0 begin
  gsave
  /ho xdf
  /vo xdf
  /hh xdf
  /vh xdf
  /hv xdf
  /vv xdf
  /nbits xdf
  /vpix xdf
  /hpix xdf
  /mapsz xdf
  /map xdf
  mapsz 0 ne
  {
    /mapsz mapsz 1 sub def
    {map exch mapsz mul round cvi get mapsz div} settransfer
  } if 
  /picstr hpix nbits mul 7 add 8 idiv string def
  ho vo translate
  [hh vh hv vv 0 0] concat
  nbits 1 eq mapsz 0 eq and{
    hpix vpix false [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      imagemask
  } {
    hpix vpix nbits [hpix 0 0 vpix 0 0]
    {currentfile picstr readhexstring pop }
      image
  } ifelse
  grestore
  end
} bdf
/PL_image load 0 12 dict put
/reencodesubdict 12 dict def
/ReEncode {
  reencodesubdict begin
  /newencoding xdf
  /newfontname xdf
  /basefontname xdf
	
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength 2 add dict def
  basefontdict {
    exch dup /FID ne {
      exch newfont 3 1 roll put
    } {
      pop pop
    } ifelse
  } forall
  newfont /FontName newfontname put
  newencoding -1 ne {
    newfont /Encoding newencoding put
  } if
  newfontname newfont definefont pop
  end
} bdf
/insertcharnum { 0 begin
  /encoding xdf
  /i xdf
  (char) charname copy pop
  i istr cvs pop
  charname 4 istr  putinterval
  encoding i charname cvn  put
  end
} bdf
/insertcharnum load 0 2 dict put
StandardEncoding   ILEncoding copy
  dup 5	/florin put
  dup 7	/fraction put
  dup 12 /sterling put
  dup 27 /section put
  dup 28 /periodcentered put
  dup 29 /cent put
  dup 30 /hyphen put
  dup 31 /emdash put
  dup 34 /quotedblright put
  dup 45 /endash put
      127 /quotedblleft put
  0 1 4 { ILEncoding insertcharnum } for 
  6 1 6 { ILEncoding insertcharnum } for 
  8 1 11 { ILEncoding insertcharnum } for 
  13 1 26 { ILEncoding insertcharnum } for 
/map { 0 begin
  
  /PSsize xdf
  /PSname xdf
  /PLname xdf
  /psd 2 dict def
  psd /pssize PSsize put
  psd /psname PSname put 
  fontmap PLname psd put
  end
} bdf
/map load 0 4 dict put
ILSymEncoding 32
[
/space /logicalor /arrowright /arrowdblleft /arrowdblup 
/arrowdblright /lozenge /arrowhorizex /angleleft /registersans
/Upsilon1 /plusminus /second /angle /greaterequal
/radical /ellipsis /Ifraktur /spade /lessequal
/minute /degree /fraction /florin /infinity
/approxequal /integral /propersuperset /parenrightbt /arrowup
/bracketrighttp /aleph /arrowdblboth /bracerightbt /integralbt
/notsubset /bracketleftbt /trademarksans /bracelefttp /braceleftmid
/braceleftbt /bracketlefttp /braceex /apple /angleright
/parenrightex /parenrighttp /arrowdown /divide /element
/summation /bracketleftex /parenlefttp /parenleftbt /dotmath
/copyrightsans /integralex /parenleftex /integraltp /registerserif 
/intersection /trademarkserif /arrowdbldown /gradient /logicalnot
/reflexsubset /equivalence /propersubset /partialdiff /arrowboth
/circlemultiply /heart /bracketrightex /bracerightmid /emptyset
/bracketrightbt /Rfraktur /proportional /reflexsuperset /carriagereturn
/notequal /notelement /diamond /club /bracerighttp
/arrowleft /weierstrass /bullet /circleplus /multiply
/arrowvertex /copyrightserif /union /product /logicaland
] putinterval
0 1 32 {ILSymEncoding insertcharnum } for
127 1 255 {ILSymEncoding insertcharnum } for
/declareFont {
    /PLnum xdf
    /PLname xdf 
    useNativeFonts  {
    	PSfontobj PLnum
           fontmap PLname get dup 
	    /psname get findfont 
	    invertmatrix makefont exch
	    /pssize get DPIx 72 div mul scalefont 
	put
    } {
	PSfontobj PLnum
	10 dict dup begin
	    /FontType 3 def
	    /FontMatrix [DPIx 300 div 0 0 DPIy 300 div 0 0] def
	    /FontBBox [0 0 0 0] def
	    /Encoding ILEncoding def
	    /BuildChar { 0 begin
		/char xdf
		/fontdict xdf
		/charname fontdict /Encoding get char get def
		/charinfo fontdict /CharData get charname get def
		/wx charinfo 0 get def
		charinfo 0 get BOGUSWIDTH eq 
		{puterrchar} 
		{ /charbbox charinfo 1 4 getinterval def
		  wx 0 charbbox aload pop setcachedevice	
		  charinfo 5 get charinfo 6 get true
		  fontdict /imagemaskmatrix get
		    dup 5 charinfo 8 get put
		    dup 4 charinfo 7 get  put
		  charinfo 9  get
		  imagemask
		}ifelse
	    end
	    }def
	    /BuildChar load 0 7 dict put
	    /imagemaskmatrix [1 0 0 1 0 0] def
	    /CharData MAXCHARS dict def
	end
	PLname exch definefont  put
	PSfontobj PLnum get /CharData get 
		/space [16 0 0 1 1 16 1 0 0 [<00>] cvx ] put
    } ifelse
} def
/numLoadEmptyGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/w xdf
	w fontno PSfontobj fontno get /Encoding get charno get
	LoadEmptyGlyph
	end
} bdf
/numLoadEmptyGlyph load 0 3 dict put
/LoadEmptyGlyph { 0 begin
	
	/charname xdf
	/fontno xdf
	/w xdf
	PSfontobj fontno get  /CharData get
	    charname [w 0 0 1 1 w 1 0 0 [<00>] cvx ] put
	end
} bdf
/LoadEmptyGlyph load 0 3 dict put
/puterrchar {
	PSfontobj errfontno  get dup 
	/BuildChar get  errcharno exch exec 
	(\tInterleaf::out of VM loading bitmap (?). Try breaking up document\n) 
		dup print flush
	emsg1 copy pop
} bdf
/timeToQuit {
	(\tInterleaf::completely out of memory. \n\tTry breaking up the document \n) 
		dup print flush
	emsg2 copy pop
	stop
} bdf
/LoadGlyph { 0 begin
	/charno xdf
	/fontno xdf
	/height xdf
	/vadj xdf
	/width xdf
	/hsize xdf
	/lsb xdf
	/noVMHEADROOM vmstatus exch sub exch pop dup
		VMHEADROOM 2 idiv lt {timeToQuit} if
		VMHEADROOM lt 
		{true } {false} ifelse def
	/nbytes hsize 15 add 16 idiv 2 mul height mul def	
	noVMHEADROOM not  {/glyph nbytes string def } if
	currentfile noVMHEADROOM 
		{trashheap 0 nbytes getinterval } {glyph} ifelse 
		readhexstring pop pop
	
	/hsize hsize 15 add 16 idiv 16 mul def
	
	/thefont PSfontobj fontno get	def
	/charname thefont /Encoding get charno get def
	
		
	/tx lsb  neg def
	/ty vadj neg def
	/lly  height vadj add def
	/llx  lsb def
	/urx hsize lsb add def
	/ury vadj def
	thefont /CharData get charname 
	    noVMHEADROOM
	    { [BOGUSWIDTH] }
	    {[width llx lly urx ury hsize height tx ty [glyph] cvx ]} ifelse
	put
	end
} bdf
/LoadGlyph load 0 20 dict put
/sf { PSfontobj exch get setfont } bdf
/stdsizex	32 def
/stdsizey	32 def
/patternstring	1 string def
/grayArray [
	-1	-1	-1	-1	-1	-1	-1	-1
	-1	-1	-1	-1	-1	1	.92	.8	
	.65	0	.5	.35	.2	] def
/patgrayArray [
	0	.12	.22	.32	.42	.52	.62	.72
	.82	.92	.17	.27	.37	1	.92	.8	
	.65	0	.5	.35	.2	] def
/fillpatset {
    /patchar xdf
    /pfindex xdf
    patgraylevel dup 0 ge {
	/patIsGray true def
	/patgray xdf
    } {
	pop /patIsGray false def
    } ifelse
} bdf
/fp {
    gsave
    pfindex 0 eq patchar 0 eq and {
	/patIsGray true def
	/patgray 0 def
    } if
    patIsGray {
	/oldgray currentgray def
	patgray setgray
	eofill
	oldgray setgray
    } {
	useNativeFonts {
	    patchar 0 showpattern
	} {
	    currentfont 
	    PSfontobj pfindex get setfont
	    pfill
	    dup null ne {setfont} {pop} ifelse
	} ifelse
    } ifelse
    grestore
} bdf
/pfill {
  gsave 1 setgray eofill grestore
  gsave setupfactors setupregion blastchars grestore
  newpath
} bdf
/setupfactors {
  0 setgray
  [] 0 setdash
  patternstring 0 patchar put
  /patx stdsizex def /paty stdsizey def
} bdf
/setupregion {
  eoclip	
  pathbbox
    /ry exch ceiling  def
    /rx exch ceiling  def
    /ly exch floor cvi
      dup 0 lt{paty sub}if
      dup paty mod  sub  def
    /lx exch floor cvi
      dup 0 lt{patx sub}if
      dup patx mod  sub  def
    /ry ry paty add def
    /ly ly paty sub def
  newpath
} bdf
/blastchars {
  /#chars  rx lx sub  patx div ceiling cvi  def
  ly paty ry  {
    lx exch moveto
    #chars{ patternstring show} repeat
  }for
} bdf
/patgraylevel {
  patchar grayArray length ge {
    -1
  } {
    grayArray patchar get
  } ifelse
} bdf
/setuserscreendict 22 dict def
setuserscreendict begin
 /tempctm matrix def
 /temprot matrix def
 /tempscale matrix def
 /concatprocs
  {/proc2 exch cvlit def
   /proc1 exch cvlit def
   /newproc proc1 length proc2 length add
    array def
   newproc 0 proc1 putinterval
   newproc proc1 length proc2 putinterval
   newproc cvx
  } bdf
  /resmatrix matrix def
  /findresolution
   {72 0 resmatrix defaultmatrix dtransform
    /yres xdf /xres xdf
    xres dup mul yres dup mul add sqrt
   } bdf
end
/setuserscreen
{setuserscreendict begin
   /spotfunction xdf
   /screenangle xdf
   /cellsize xdf
   /m tempctm currentmatrix def
   /rm screenangle temprot rotate def
   /sm cellsize dup tempscale scale def
   sm rm m m concatmatrix m concatmatrix pop
   1 0 m dtransform /y1 xdf /x1 xdf
   /veclength x1 dup mul y1 dup mul add sqrt def
   /veclength veclength DPIx 72 div mul def
   /frequency findresolution veclength div def
   /newscreenangle y1 x1 atan def
   m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt
   {{neg}
    /spotfunction load concatprocs
    /spotfunction xdf
   } if
   frequency newscreenangle /spotfunction load setscreen
  end
} bdf
/setpatterndict 18 dict def
setpatterndict begin
 /bitison
 {/ybit xdf /xbit xdf
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
 } bdf
end
/bitpatternspotfunction
{setpatterndict begin
  /y xdf /x xdf
  /xindex x 1 add 2 div bpside mul cvi def
  /yindex y 1 add 2 div bpside mul cvi def
  xindex yindex bitison
  {/onbits onbits 1 add def 1 }
  {/offbits offbits 1 add def 0 }
  ifelse
  end
} bdf
 
/setpattern
 {setpatterndict begin
  /cellsz xdf
  /angle  xdf
  /bwidth xdf
  /bpside xdf
  /bstring xdf
  /onbits 0 def /offbits 0 def
  cellsz angle /bitpatternspotfunction load setuserscreen
  {} settransfer
  offbits offbits onbits add div setgray
  end
 } bdf
   
/showpattern
{/ang xdf
 /patnum xdf
 patternarray patnum get 32 4 ang 72 300 32 div div setpattern
 eofill
} bdf
/patternarray [
<>
<
00000000 60c00030 60c00030 00000000 00000000 060c0003 060c0003 00000000
00000000 3060c000 3060c000 00000000 00000000 03060c00 03060c00 00000000
00000000 003060c0 003060c0 00000000 00000000 0003060c 0003060c 00000000
00000000 c0003060 c0003060 00000000 00000000 0c000306 0c000306 00000000
>
<
00000000 0c000306 0c000306 00000000 00000000 c0003060 c0003060 00000000
00000000 0003060c 0003060c 00000000 00000000 003060c0 003060c0 00000000
00000000 03060c00 03060c00 00000000 00000000 3060c000 3060c000 00000000
00000000 060c0003 060c0003 00000000 00000000 60c00030 60c00030 00000000
>
<
00030c00 00030c00 00000000 00000000 000030c0 000030c0 00000000 00000000
0000030c 0000030c 00000000 00000000 c0000030 c0000030 00000000 00000000
0c000003 0c000003 00000000 00000000 30c00000 30c00000 00000000 00000000
030c0000 030c0000 00000000 00000000 0030c000 0030c000 00000000 00000000
>
<
0030c000 0030c000 00000000 00000000 030c0000 030c0000 00000000 00000000
30c00000 30c00000 00000000 00000000 0c000003 0c000003 00000000 00000000
c0000030 c0000030 00000000 00000000 0000030c 0000030c 00000000 00000000
000030c0 000030c0 00000000 00000000 00030c00 00030c00 00000000 00000000
>
<
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
00000000 00000707 00000707 00000707 00000000 00007070 00007070 00007070
>
<
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
00000000 0e0e0e0e 0e0e0e0e 0e0e0e0e 00000000 e0e0e0e0 e0e0e0e0 e0e0e0e0
>
<
cccc0ccc cccc0ccc 00000000 00000000 cccc0ccc cccc0ccc 00000000 00000000
cccc0ccc cccc0ccc 00000000 00000000 00000000 00000000 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 0ccccccc 0ccccccc 00000000 00000000
0ccccccc 0ccccccc 00000000 00000000 00000000 00000000 00000000 00000000
>
<
88880888 88880888 00000000 00000000 88880888 88880888 00000000 00000000
88880888 88880888 00000000 00000000 00000000 00000000 00000000 00000000
08888888 08888888 00000000 00000000 08888888 08888888 00000000 00000000
08888888 08888888 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000308 00000308 00040308 00040398 000c01d0 007e01f8 01cb80fc 0309803e
0618802f 06108027 06108063 07100843 03b01843 03e01046 01f018c6 00781c9c
007c07f0 005e0080 004e0180 00c60100 10860100 30860000 208c0000 318c0000
39380002 0fe00002 01000006 0300003f c20000e5 c2000184 40000304 4000030c
>
<
00007618 00003c70 00003fe0 00000f80 00000800 00040800 00041800 000c1000
00081000 007e0000 01db0000 03138000 06138000 06310000 0c200000 0c200010
18600010 18400030 18400020 18c001f8 1880076c 1c810c4e 1d86184e 0f1c18c4
0ff83080 03e03080 02006180 02006100 06006100 04006300 04006200 00007204
>
<
00000180 00000180 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 00000198 00000198 00000000 00000000
00000198 00000198 00000000 00000000 19999998 19999998 00000000 00000000
01999998 01999998 00000000 00000000 00000000 00000000 00000000 00000000
>
<
00000400 00000000 00000100 00000180 00000000 00000000 00000190 00000198
00000000 00000000 00000198 00000198 00000000 00000000 00000998 00000998
00000000 00000000 00001998 00019990 40000000 00000000 19999980 09999980
00000000 00000000 01999800 00999000 00000000 00000000 00000000 00000000
>
] def
/bop  {/pagestate save def  } bdf
/eop  {docutmark {cutmark} if showpage pagestate restore } def
/clp {initclip newpath av as as as closepath clip } bdf
/cutmark { 0 begin
  /pw DPIx 40 div def
  /pw2 pw 2 div def
  /lnx DPIx 4 div def
  /lny DPIy 4 div def
  initclip
  pw sw
  [] 0 setdash
  newpath
  pw2 neg pw2 neg translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  0 PSpagelength pw add translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  PSpagewidth pw add neg 0 translate
  lnx neg 0 av lnx 0 as
  0 lny neg av 0 lny as
  dp
  end
} bdf
/cutmark load 0 4 dict put
/fontmap 8 dict def
	/Ops8 /ILtims 8 map
	/timsps10 /ILtims 10 map
	/timsps8i /ILtimsi 8 map
	/timsps18b /ILtimsb 18 map
	/timsps12b /ILtimsb 12 map
	/timsps10b /ILtimsb 10 map
	/timsps10i /ILtimsi 10 map
	/symbb8 /ILsymbb 8 map
/Times-Roman /ILtims ILEncoding ReEncode
/Times-Italic /ILtimsi ILEncoding ReEncode
/Times-Bold /ILtimsb ILEncoding ReEncode
/Symbol /ILsymbb -1 ReEncode
letter
/initialstate save def
/PSpagelength 223519 def
/PSpagewidth 172720 def
/DPIx 20320 def /DPIy 20320 def
72 DPIx div 72 DPIy div neg scale
0 223520 neg translate
/PSfontobj 8 array def
/useNativeFonts true def
/drawmode PL_SET def
270.0 sw
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 0 fillpatset
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Errors) 26353  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(16\036190) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(unexpected\036reply) 55391  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 55970  -127.00 32 s
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 27297.0 m
(A) 54869  0.00 -1 s
( reply was found when none was expected. This indicates a problem with the extension) 149352  -276.86 32 s
52832.0 30457.0 m
(code.) 58866  0.00 -1 s
( The following items are reported along) 103530  -27.00 32 s
( with the error:) 120294  -27.67 32 s
/symbb8 4 declareFont
4 sf
52832.0 37005.0 m
(\267) 53872  0.00 -1 s
57912.0 h
/timsps10i 5 declareFont
5 sf
(display) 66064  0.00 -1 s
3 sf
( \037 The display on which the error occurred.) 116050  -30.88 32 s
4 sf
52832.0 43553.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(req\036sequence) 72956  0.00 -1 s
3 sf
( \037 The) 81492  -43.00 32 s
( sequence number in the reply.) 115914  -43.60 32 s
4 sf
52832.0 50100.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(msg\036sequence) 73740  0.00 -1 s
3 sf
( \037 The current sequence) 101895  -53.00 32 s
( number.) 111873  -54.00 32 s
4 sf
52832.0 56648.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(length) 64966  0.00 -1 s
3 sf
( \037 The) 73528  -30.00 32 s
( message length of the reply.) 105822  -30.60 32 s
52832.0 62924.0 m
(An) 56280  0.00 -1 s
( ) 58864  1878.00 32 s
2 sf
(unexpected\036reply) 79711  0.00 -1 s
3 sf
( condition is a special) 111678  1878.00 32 s
( case of the more general) 149352  1877.40 32 s
52832.0 66085.0 m
2 sf
(x\036error) 61605  0.00 -1 s
3 sf
(.) 62311  0.00 -1 s
( \(See page 16\036190 for information on) 104046  -45.00 32 s
( ) 104706  -46.00 32 s
2 sf
(x\036error) 113479  0.00 -1 s
3 sf
(.\)) 115124  0.00 -1 s
2 sf
34544.0 72362.0 m
(unknown\036error) 53199  0.00 -1 s
( ) 53770  -135.00 32 s
3 sf
(\() 54709  0.00 -1 s
2 sf
(request\036error) 71005  0.00 -1 s
3 sf
(\) \() 73454  -135.00 32 s
2 sf
(error\036code) 86302  0.00 -1 s
3 sf
(\)) 87241  0.00 -1 s
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 77081.0 m
(An) 56280  0.00 -1 s
( error was received from the server with an unknown error code. This indicates a) 149352  138.43 32 s
52832.0 80241.0 m
(problem) 62236  0.00 -1 s
( with the extension code. The undefined error code is reported.) 132712  -36.80 32 s
52832.0 86518.0 m
(An) 56280  0.00 -1 s
( ) 57225  239.00 32 s
2 sf
(unknown\036error) 75880  0.00 -1 s
3 sf
( is a special case of the more general ) 120117  239.44 32 s
2 sf
(request\036error) 136413  0.00 -1 s
3 sf
(. \(See page) 149352  239.50 32 s
52832.0 89679.0 m
(16\036189) 60826  0.00 -1 s
( for information on ) 82891  -48.00 32 s
2 sf
(request\036error) 99187  0.00 -1 s
3 sf
(.\)) 100832  0.00 -1 s
2 sf
34544.0 95956.0 m
(value\036error) 48334  0.00 -1 s
3 sf
( \() 49887  -92.00 32 s
2 sf
(request\036error) 66183  0.00 -1 s
3 sf
(\) \() 68675  -92.00 32 s
2 sf
(value) 75103  0.00 -1 s
3 sf
(\)) 76042  0.00 -1 s
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 100674.0 m
(Some) 59260  0.00 -1 s
( numeric) 69115  -97.00 32 s
( value falls outside the range of values accepted by the request. Unless a) 149352  -97.54 32 s
52832.0 103835.0 m
(specific) 61607  0.00 -1 s
( range is specified for an argument, the full range defined by the argument's type) 149352  -264.86 32 s
52832.0 106996.0 m
(is) 54714  0.00 -1 s
( accepted. Any argument defined as a set of alternatives can generate this error. The) 149352  -1.64 32 s
52832.0 110157.0 m
(erroneous) 63958  0.00 -1 s
( value is reported.) 84057  -40.00 32 s
52832.0 116434.0 m
(A) 54869  0.00 -1 s
( ) 55322  -253.00 32 s
2 sf
(value\036error) 69112  0.00 -1 s
3 sf
( is a special case of the) 93456  -253.00 32 s
( more general ) 108915  -253.67 32 s
2 sf
(request\036error) 125211  0.00 -1 s
3 sf
(. \(See page 16\036189 for) 149352  -253.50 32 s
52832.0 119594.0 m
(information) 66154  0.00 -1 s
( on ) 70248  -70.00 32 s
2 sf
(request\036error) 86544  0.00 -1 s
3 sf
(.\)) 88189  0.00 -1 s
2 sf
34544.0 125871.0 m
(window\036error) 51313  0.00 -1 s
3 sf
( \() 52770  -188.00 32 s
2 sf
(resource\036error) 70475  0.00 -1 s
3 sf
(\)) 71414  0.00 -1 s
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 130590.0 m
(A) 54869  0.00 -1 s
( value for a ) 68219  -32.00 32 s
5 sf
(window) 77000  0.00 -1 s
3 sf
( argument does not name a defined window. ) 127452  -32.00 32 s
52832.0 136866.0 m
(A) 54869  0.00 -1 s
( ) 55272  -303.00 32 s
2 sf
(window\036error) 72041  0.00 -1 s
3 sf
( is a special case of the more general ) 111396  -303.00 32 s
2 sf
(resource\036error) 129101  0.00 -1 s
3 sf
(. \(See page 16\036189) 149352  -303.00 32 s
52832.0 140027.0 m
(for) 56121  0.00 -1 s
( information on ) 74212  -57.00 32 s
2 sf
(resource\036error) 91917  0.00 -1 s
3 sf
(.\)) 93562  0.00 -1 s
2 sf
34544.0 146304.0 m
(x\036error) 45434  0.00 -1 s
52832.0 h
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 151023.0 m
(This) 57849  0.00 -1 s
( is the most general error condition upon which all other conditions are) 137610  -28.00 32 s
( defined.) 147455  -29.00 32 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
142985.0 8195.0 m
(Errors) 149018  0.00 -1 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(16\036189) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(request\036error ) 53554  -109.00 32 s
138108.0 h
/timsps10 3 declareFont
3 sf
(Condition) 149397  0.00 -1 s
52832.0 27297.0 m
(The) 57220  0.00 -1 s
( following) 68875  -23.00 32 s
( items are reported along with the error:) 113611  -23.57 32 s
52832.0 33573.0 m
(The) 57220  0.00 -1 s
( major or minor opcode) 83754  -28.00 32 s
( does not specify a valid request. ) 121175  -28.57 32 s
/symbb8 4 declareFont
4 sf
52832.0 40121.0 m
(\267) 53872  0.00 -1 s
57912.0 h
/timsps10i 5 declareFont
5 sf
(display) 66064  0.00 -1 s
3 sf
( \037 The display on which the error occurred.) 116050  -30.88 32 s
4 sf
52832.0 46668.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(error\036key) 68568  0.00 -1 s
3 sf
( \037 The error \(sub\)type.) 95346  -25.00 32 s
4 sf
52832.0 53216.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(major) 64653  0.00 -1 s
3 sf
( \037 The major) 80449  -38.00 32 s
( opcode.) 89972  -39.00 32 s
4 sf
52832.0 59763.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(minor) 64653  0.00 -1 s
3 sf
( \037 The minor opcode.) 90130  -38.25 32 s
4 sf
52832.0 66311.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(sequence) 68255  0.00 -1 s
3 sf
( \037 The actual sequence number.) 105122  -56.00 32 s
4 sf
52832.0 72858.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(current\036sequence) 77502  0.00 -1 s
3 sf
( \037 The current sequence number.) 115621  -56.00 32 s
52832.0 79135.0 m
(A) 54869  0.00 -1 s
( ) 55718  143.00 32 s
2 sf
(request\036error) 74131  0.00 -1 s
3 sf
( condition is a special case of the more general ) 129009  143.00 32 s
2 sf
(x\036error) 137782  0.00 -1 s
3 sf
( \(see page) 149352  143.50 32 s
52832.0 82296.0 m
(16\036190) 60826  0.00 -1 s
( for information on ) 82919  -41.00 32 s
2 sf
(x\036error) 91692  0.00 -1 s
3 sf
(\).) 93337  0.00 -1 s
2 sf
34544.0 88573.0 m
(resource\036error) 54366  0.00 -1 s
( ) 54932  -140.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 93291.0 m
(All) 56437  0.00 -1 s
( X11 errors for incorrect resource IDs are built on top of) 118929  -96.00 32 s
( ) 119538  -97.00 32 s
2 sf
(resource\036error) 137243  0.00 -1 s
3 sf
(. These are) 149352  -96.50 32 s
52832.0 96452.0 m
2 sf
(colormap\036error) 71636  0.00 -1 s
3 sf
(,) 72342  0.00 -1 s
( ) 73798  750.00 32 s
2 sf
(cursor\036error) 88997  0.00 -1 s
3 sf
(, ) 91159  750.00 32 s
2 sf
(drawable\036error) 109808  0.00 -1 s
3 sf
(,) 110514  0.00 -1 s
( ) 111969  749.00 32 s
2 sf
(font\036error) 124189  0.00 -1 s
3 sf
(, ) 126351  750.00 32 s
2 sf
(gcontext\036error) 143899  0.00 -1 s
3 sf
(, ) 146060  749.00 32 s
2 sf
(id\036) 149352  0.00 -1 s
52832.0 99613.0 m
(choice\036error) 67717  0.00 -1 s
3 sf
(,) 68423  0.00 -1 s
( ) 68989  -140.00 32 s
2 sf
(pixmap\036error) 85445  0.00 -1 s
3 sf
( and ) 90652  -140.00 32 s
2 sf
(window\036error) 107421  0.00 -1 s
3 sf
(. ) 108693  -140.00 32 s
2 sf
(resource\036error) 126398  0.00 -1 s
3 sf
( is never signaled di\036) 149352  -139.50 32 s
52832.0 102774.0 m
(rectly.) 59962  0.00 -1 s
( ) 60644  -24.00 32 s
52832.0 109051.0 m
(A) 54869  0.00 -1 s
( ) 55933  358.00 32 s
2 sf
(resource\036error) 75755  0.00 -1 s
3 sf
( is a special case of the more general) 119995  358.00 32 s
( ) 121058  357.00 32 s
2 sf
(request\036error) 137354  0.00 -1 s
3 sf
( \(see page) 149352  357.50 32 s
52832.0 112212.0 m
(16\036189) 60826  0.00 -1 s
( for information on ) 82891  -48.00 32 s
2 sf
(request\036error) 99187  0.00 -1 s
3 sf
(\).) 100832  0.00 -1 s
2 sf
34544.0 118488.0 m
(sequence\036error) 52723  0.00 -1 s
( ) 53306  -123.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 123207.0 m
(All) 56437  0.00 -1 s
( X11 request replies contain the sequence number of their request. If a reply's se\036) 149352  82.21 32 s
52832.0 126368.0 m
(quence) 60824  0.00 -1 s
( does not match the request count, a ) 100069  -238.00 32 s
2 sf
(sequence\036error) 118248  0.00 -1 s
3 sf
( is signaled. A ) 134151  -237.75 32 s
2 sf
(sequence\036er\036) 149352  0.00 -1 s
52832.0 129529.0 m
(ror) 56749  0.00 -1 s
3 sf
( usually indicates a locking problem with a multi\036processing Lisp. The following) 149352  110.36 32 s
52832.0 132690.0 m
(items) 58946  0.00 -1 s
( are) 63077  -20.00 32 s
( reported along with the error:) 96904  -20.60 32 s
4 sf
52832.0 139237.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(display) 66064  0.00 -1 s
3 sf
( \037 The display on which the error occurred.) 116050  -30.88 32 s
4 sf
52832.0 145785.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(req\036sequence) 72956  0.00 -1 s
3 sf
( \037 The) 81492  -43.00 32 s
( sequence number in the reply.) 115914  -43.60 32 s
4 sf
52832.0 152332.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(msg\036sequence) 73740  0.00 -1 s
3 sf
( \037 The current sequence) 101895  -53.00 32 s
( number.) 111873  -54.00 32 s
52832.0 158609.0 m
(A) 54869  0.00 -1 s
( ) 55646  71.00 32 s
2 sf
(sequence\036error) 73825  0.00 -1 s
3 sf
( condition) 85262  71.00 32 s
( is a special case of the more general ) 127978  70.44 32 s
2 sf
(x\036error) 136751  0.00 -1 s
3 sf
(. \(See page) 149352  70.50 32 s
52832.0 161770.0 m
(16\036190) 60826  0.00 -1 s
( for information on ) 82919  -41.00 32 s
2 sf
(x\036error) 91692  0.00 -1 s
3 sf
(.\)) 93337  0.00 -1 s
2 sf
34544.0 168046.0 m
(server\036disconnect) 55702  0.00 -1 s
( ) 56309  -99.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 172765.0 m
(The) 57220  0.00 -1 s
( connection to the server was lost. The display on which the error occurred is re\036) 149352  92.20 32 s
52832.0 175926.0 m
(ported) 60041  0.00 -1 s
( along with the) 76809  -28.00 32 s
( error.) 83673  -29.00 32 s
52832.0 182203.0 m
(A) 54869  0.00 -1 s
( ) 55416  -159.00 32 s
2 sf
(server\036disconnect) 76574  0.00 -1 s
3 sf
( condition is a special case of the more general ) 128436  -158.60 32 s
2 sf
(x\036error) 137209  0.00 -1 s
3 sf
(. \(See page) 149352  -158.50 32 s
52832.0 185364.0 m
(16\036190) 60826  0.00 -1 s
( for information on ) 82919  -41.00 32 s
2 sf
(x\036error) 91692  0.00 -1 s
3 sf
(.\)) 93337  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Errors) 26353  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(16\036188) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(match\036error ) 50055  -79.00 32 s
52832.0 h
138108.0 h
/timsps10 3 declareFont
3 sf
(Condition) 149397  0.00 -1 s
52832.0 27297.0 m
(In) 55182  0.00 -1 s
( a graphics request, the root and depth of the GContext does not match that of the draw\036) 149352  -287.82 32 s
52832.0 30457.0 m
(able.) 58239  0.00 -1 s
( An ) 63295  98.00 32 s
2 sf
(:input\036only) 76778  0.00 -1 s
3 sf
( window is used as a drawable. Some argument or pair of argu\036) 149352  98.33 32 s
52832.0 33618.0 m
(ments) 59573  0.00 -1 s
( has the) 67685  -255.00 32 s
( correct type and range but fails to match in some other way required by the) 149352  -255.53 32 s
52832.0 36779.0 m
(request.) 61687  0.00 -1 s
( An ) 66273  -137.00 32 s
2 sf
(:input\036only) 79756  0.00 -1 s
3 sf
( window) 89416  -137.00 32 s
( locks this attribute. The values do not exist for an ) 145121  -137.55 32 s
2 sf
(:in\036) 149352  0.00 -1 s
52832.0 39940.0 m
(put\036only) 63023  0.00 -1 s
3 sf
( window.) 73483  -43.00 32 s
( ) 74145  -44.00 32 s
52832.0 46217.0 m
(A) 54869  0.00 -1 s
( ) 55328  -247.00 32 s
2 sf
(match\036error) 70212  0.00 -1 s
3 sf
( is a special case) 87876  -247.00 32 s
( of the more general ) 110068  -247.60 32 s
2 sf
(request\036error) 126364  0.00 -1 s
3 sf
( \(see page 16\036189 for) 149352  -247.50 32 s
52832.0 49378.0 m
(information) 66154  0.00 -1 s
( on ) 70248  -70.00 32 s
2 sf
(request\036error) 86544  0.00 -1 s
3 sf
(\).) 88189  0.00 -1 s
2 sf
34544.0 55654.0 m
(missing\036parameter) 57269  0.00 -1 s
( ) 57912  -63.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 60373.0 m
(One) 57533  0.00 -1 s
( or more of the required) 83365  -209.00 32 s
( keyword parameters is missing or ) 121608  -209.50 32 s
2 sf
(nil) 124745  0.00 -1 s
3 sf
(. The missing parame\036) 149352  -209.67 32 s
52832.0 63534.0 m
(ters) 56906  0.00 -1 s
( are reported along with the) 87911  -21.00 32 s
( error.) 94782  -22.00 32 s
52832.0 69810.0 m
(A) 54869  0.00 -1 s
( ) 55386  -189.00 32 s
2 sf
(missing\036parameter) 78111  0.00 -1 s
3 sf
( condition is a special case of the more general ) 129673  -188.60 32 s
2 sf
(x\036error) 138446  0.00 -1 s
3 sf
( \(see page) 149352  -188.50 32 s
52832.0 72971.0 m
(16\036190) 60826  0.00 -1 s
( for information on ) 82919  -41.00 32 s
2 sf
(x\036error) 91692  0.00 -1 s
3 sf
(\).) 93337  0.00 -1 s
2 sf
34544.0 79248.0 m
(name\036error) 48489  0.00 -1 s
3 sf
( ) 49107  -88.00 32 s
52832.0 h
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 83967.0 m
(A) 54869  0.00 -1 s
( font or color of the specified name does not exist. ) 112008  -21.00 32 s
52832.0 90243.0 m
(A) 54869  0.00 -1 s
( ) 55395  -180.00 32 s
2 sf
(name\036error) 69340  0.00 -1 s
3 sf
( is a special case of the) 94122  -180.00 32 s
( more general ) 109800  -180.67 32 s
2 sf
(request\036error) 126096  0.00 -1 s
3 sf
( \(see page 16\036189 for) 149352  -180.50 32 s
52832.0 93404.0 m
(information) 66154  0.00 -1 s
( on ) 70248  -70.00 32 s
2 sf
(request\036error) 86544  0.00 -1 s
3 sf
(\).) 88189  0.00 -1 s
2 sf
34544.0 99681.0 m
(pixmap\036error) 51000  0.00 -1 s
3 sf
( ) 51613  -93.00 32 s
2 sf
52832.0 h
3 sf
(Condition) 64121  0.00 -1 s
52832.0 104400.0 m
(A) 54869  0.00 -1 s
( value for a ) 68216  -32.75 32 s
/timsps10i 5 declareFont
5 sf
(pixmap) 76523  0.00 -1 s
3 sf
( argument does not name a defined pixmap. ) 126345  -32.50 32 s
52832.0 110676.0 m
(A) 54869  0.00 -1 s
( ) 55296  -279.00 32 s
2 sf
(pixmap\036error) 71752  0.00 -1 s
3 sf
( is a special case of the more general ) 111323  -279.00 32 s
2 sf
(resource\036error) 129028  0.00 -1 s
3 sf
(. \(See page 16\036189) 149352  -278.67 32 s
52832.0 113837.0 m
(for) 56121  0.00 -1 s
( information on ) 74212  -57.00 32 s
2 sf
(resource\036error) 91917  0.00 -1 s
3 sf
(.\)) 93562  0.00 -1 s
2 sf
34544.0 120114.0 m
(reply\036length\036error) 56640  0.00 -1 s
3 sf
( \() 58219  -66.00 32 s
2 sf
(x\036error) 66992  0.00 -1 s
3 sf
(\) \() 69510  -66.00 32 s
5 sf
(slots*) 76096  0.00 -1 s
3 sf
(\)) 77035  0.00 -1 s
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 124833.0 m
(The) 57220  0.00 -1 s
( reply to a request has an unexpected length. The following items) 128714  -198.00 32 s
( are reported along) 149352  -198.67 32 s
52832.0 127993.0 m
(with) 57848  0.00 -1 s
( the error:) 68953  -10.00 32 s
/symbb8 4 declareFont
4 sf
52832.0 134541.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(reply\036length) 71704  0.00 -1 s
3 sf
( \037 The) 80250  -38.00 32 s
( actual reply length.) 102548  -38.67 32 s
4 sf
52832.0 141089.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(expected\036length) 75776  0.00 -1 s
3 sf
( \037 The expected reply length.) 109818  -57.00 32 s
4 sf
52832.0 147636.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(display) 66064  0.00 -1 s
3 sf
( \037 The display on which the error occurred.) 116050  -30.88 32 s
52832.0 153913.0 m
(A) 54869  0.00 -1 s
( ) 55350  -225.00 32 s
2 sf
(reply\036length\036error) 77446  0.00 -1 s
3 sf
( is a special case of the more general ) 117503  -225.00 32 s
2 sf
(x\036error) 126276  0.00 -1 s
3 sf
( \(see) 131300  -225.00 32 s
( page 16\036190 for) 149352  -225.67 32 s
52832.0 157074.0 m
(information) 66154  0.00 -1 s
( on) 69626  -56.00 32 s
( ) 70275  -57.00 32 s
2 sf
(x\036error) 79048  0.00 -1 s
3 sf
(\).) 80693  0.00 -1 s
2 sf
34544.0 163350.0 m
(reply\036timeout) 50998  0.00 -1 s
( ) 51658  -46.00 32 s
52832.0 h
3 sf
(Condition) 64121  0.00 -1 s
52832.0 168069.0 m
(The) 57220  0.00 -1 s
( ) 57663  -263.00 32 s
2 sf
(*reply\036timeout*) 76939  0.00 -1 s
3 sf
( parameter specifies) 98978  -263.00 32 s
( the maximum number of seconds to wait for a) 149352  -263.56 32 s
52832.0 171230.0 m
(request) 60981  0.00 -1 s
( reply, or ) 72089  45.33 32 s
2 sf
(nil) 75226  0.00 -1 s
3 sf
( to wait forever \(the default\). When a reply has not been received) 149352  45.50 32 s
52832.0 174391.0 m
(after) 58000  0.00 -1 s
( *) 60192  75.00 32 s
2 sf
(reply\036timeout) 76646  0.00 -1 s
3 sf
(* seconds, the ) 93489  75.00 32 s
2 sf
(reply\036timeout) 109943  0.00 -1 s
3 sf
( condition is signaled. The) 140108  75.00 32 s
( ) 140888  74.00 32 s
5 sf
(timeout) 149352  0.00 -1 s
52832.0 177552.0 m
(period) 60200  0.00 -1 s
3 sf
( and ) 65627  -30.00 32 s
5 sf
(display) 73779  0.00 -1 s
3 sf
( are reported along with the error.) 111602  -30.00 32 s
52832.0 183828.0 m
(A) 54869  0.00 -1 s
( ) 55869  294.00 32 s
2 sf
(reply\036timeout) 72323  0.00 -1 s
3 sf
( condition is a special case of the) 111609  294.00 32 s
( more general ) 128709  293.33 32 s
2 sf
(x\036error) 137482  0.00 -1 s
3 sf
( \(see page) 149352  293.50 32 s
52832.0 186989.0 m
(16\036190) 60826  0.00 -1 s
( for information on ) 82919  -41.00 32 s
2 sf
(x\036error) 91692  0.00 -1 s
3 sf
(\).) 93337  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
142985.0 8195.0 m
(Errors) 149018  0.00 -1 s
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(16\036187) 149013  0.00 -1 s
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
2 sf
34544.0 22578.0 m
(gcontext\036error) 52092  0.00 -1 s
/timsps10 3 declareFont
3 sf
( ) 52697  -101.00 32 s
2 sf
52832.0 h
3 sf
(Condition) 64121  0.00 -1 s
52832.0 27297.0 m
(A) 54869  0.00 -1 s
( value for a ) 68211  -34.00 32 s
/timsps10i 5 declareFont
5 sf
(gcontext) 77771  0.00 -1 s
3 sf
( argument does not name a defined GContext. ) 130093  -33.50 32 s
52832.0 33573.0 m
(A) 54869  0.00 -1 s
( ) 55303  -272.00 32 s
2 sf
(gcontext\036error) 72851  0.00 -1 s
3 sf
( is a special) 85124  -272.00 32 s
( case of the more general ) 112482  -272.50 32 s
2 sf
(resource\036error) 130187  0.00 -1 s
3 sf
( \(see page 16\036189) 149352  -272.67 32 s
52832.0 36734.0 m
(for) 56121  0.00 -1 s
( information on ) 74212  -57.00 32 s
2 sf
(resource\036error) 91917  0.00 -1 s
3 sf
(\).) 93562  0.00 -1 s
2 sf
34544.0 43011.0 m
(id\036choice\036error) 52721  0.00 -1 s
( ) 53329  -98.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 47729.0 m
(The) 57220  0.00 -1 s
( value chosen) 72275  -153.00 32 s
( for a resource identifier is either not included in the range assigned to) 149352  -153.54 32 s
52832.0 50890.0 m
(the) 56280  0.00 -1 s
( client or is already in use. Under normal circumstances, this cannot occur and should) 149352  -248.79 32 s
52832.0 54051.0 m
(be) 55496  0.00 -1 s
( considered a server or CLX) 87284  -21.00 32 s
( library error. ) 103045  -21.67 32 s
52832.0 60328.0 m
(An) 56280  0.00 -1 s
( ) 57246  260.00 32 s
2 sf
(id\036choice\036error) 75423  0.00 -1 s
3 sf
( is a special case of the more general ) 119845  260.00 32 s
2 sf
(resource\036error) 137550  0.00 -1 s
3 sf
( \(see) 143059  260.00 32 s
( page) 149352  259.00 32 s
52832.0 63489.0 m
(16\036189) 60826  0.00 -1 s
( for information on ) 82860  -55.75 32 s
2 sf
(resource\036error) 100565  0.00 -1 s
3 sf
(\).) 102210  0.00 -1 s
2 sf
34544.0 69765.0 m
(implementation\036error) 60871  0.00 -1 s
( ) 61479  -98.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 74484.0 m
(The) 57220  0.00 -1 s
( server does not implement some aspect of the request. A server that generates this) 149352  -75.00 32 s
52832.0 77645.0 m
(error) 58313  0.00 -1 s
( for a core request is deficient. As such, this error is not listed for any of the requests.) 149352  -275.83 32 s
52832.0 80806.0 m
(However,) 63879  0.00 -1 s
( clients should be prepared to receive) 105079  -134.00 32 s
( such errors and either handle or discard) 149352  -134.57 32 s
52832.0 83967.0 m
(them.) 59181  0.00 -1 s
( ) 59854  -33.00 32 s
52832.0 90243.0 m
(An) 56280  0.00 -1 s
( ) 57077  91.00 32 s
2 sf
(implementation\036error) 83404  0.00 -1 s
3 sf
( is a special case of the more general ) 126307  91.22 32 s
2 sf
(resource\036error) 144012  0.00 -1 s
3 sf
( \(see) 149352  91.00 32 s
52832.0 93404.0 m
(page) 58160  0.00 -1 s
( 16\036189 for information on ) 88843  -54.80 32 s
2 sf
(resource\036error) 106548  0.00 -1 s
3 sf
(\).) 108193  0.00 -1 s
2 sf
34544.0 99681.0 m
(length\036error) 49431  0.00 -1 s
( ) 50055  -82.00 32 s
52832.0 h
3 sf
138108.0 h
(Condition) 149397  0.00 -1 s
52832.0 104400.0 m
(The) 57220  0.00 -1 s
( length of a request is shorter or longer than that minimally required to contain the) 149352  -38.87 32 s
52832.0 107561.0 m
(arguments.) 65293  0.00 -1 s
( This) 70990  -26.00 32 s
( usually means an internal CLX error. ) 114221  -26.57 32 s
52832.0 113837.0 m
(A) 54869  0.00 -1 s
( ) 55507  -68.00 32 s
2 sf
(length\036error) 70394  0.00 -1 s
3 sf
( is a special case of the more general ) 111867  -67.67 32 s
2 sf
(resource\036error) 129572  0.00 -1 s
3 sf
( \(see page 16\036189) 149352  -67.67 32 s
52832.0 116998.0 m
(for) 56121  0.00 -1 s
( information on ) 74212  -57.00 32 s
2 sf
(resource\036error) 91917  0.00 -1 s
3 sf
(\).) 93562  0.00 -1 s
2 sf
34544.0 123275.0 m
(lookup\036error) 50219  0.00 -1 s
3 sf
( ) 50823  -102.00 32 s
2 sf
52832.0 h
3 sf
138108.0 h
(Condition) 149397  0.00 -1 s
52832.0 127993.0 m
(CLX) 58475  0.00 -1 s
( has the option of caching different resource types \(see) 120129  -2.00 32 s
( ) 120832  -3.00 32 s
2 sf
(*clx\036cached\036types*) 143558  0.00 -1 s
3 sf
(\) in a) 149352  -2.50 32 s
52832.0 131154.0 m
(hash) 58005  0.00 -1 s
( table by resource ID. When looking up an object in the hash table, if the type of the) 149352  -193.67 32 s
52832.0 134315.0 m
(object) 59728  0.00 -1 s
( is wrong, a ) 73470  -33.00 32 s
2 sf
(lookup\036error) 89145  0.00 -1 s
3 sf
( is signaled. ) 103158  -32.67 32 s
52832.0 140592.0 m
(For) 56751  0.00 -1 s
( example: The cursor with ID 123 is interned in the hash table. An event is received) 149352  -114.81 32 s
52832.0 143753.0 m
(with) 57848  0.00 -1 s
( a field for window 123. When 123 is looked up in the hash table, a cursor is found.) 149352  -154.78 32 s
52832.0 146914.0 m
(Since) 59102  0.00 -1 s
( a window was expected, a ) 89500  -93.00 32 s
2 sf
(lookup\036error) 105175  0.00 -1 s
3 sf
( is signaled. This error indicates a prob\036) 149352  -93.00 32 s
52832.0 150074.0 m
(lem) 57064  0.00 -1 s
( with the extension code being) 90257  -243.00 32 s
( used. The following items are reported along with the) 149352  -243.56 32 s
52832.0 153235.0 m
(error:) 59097  0.00 -1 s
/symbb8 4 declareFont
4 sf
52832.0 159783.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(id) 60107  0.00 -1 s
3 sf
( \037 The resource ID.) 83289  -22.75 32 s
4 sf
52832.0 166330.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(display) 66064  0.00 -1 s
3 sf
( \037 The display being used.) 96926  -35.80 32 s
4 sf
52832.0 172878.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(type) 62613  0.00 -1 s
3 sf
( \037 The resource) 81390  -36.00 32 s
( type.) 87624  -37.00 32 s
4 sf
52832.0 179426.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(object) 64808  0.00 -1 s
3 sf
( \037 The ) 73989  -49.00 32 s
2 sf
(resource) 84332  0.00 -1 s
3 sf
( object.) 92591  -49.00 32 s
52832.0 185702.0 m
(A) 54869  0.00 -1 s
( ) 55318  -257.00 32 s
2 sf
(lookup\036error) 70993  0.00 -1 s
3 sf
( is a special case of) 91416  -257.00 32 s
( the more general ) 110760  -257.50 32 s
2 sf
(x\036error) 119533  0.00 -1 s
3 sf
( \(see page 16\036190 for infor\036) 149352  -257.60 32 s
52832.0 188863.0 m
(mation) 60670  0.00 -1 s
( on) 64141  -57.00 32 s
( ) 64789  -58.00 32 s
2 sf
(x\036error) 73562  0.00 -1 s
3 sf
(\).) 75207  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps8i 1 declareFont
1 sf
20320.0 8195.0 m
(Errors) 26353  0.00 -1 s
/timsps10b 2 declareFont
2 sf
20320.0 208619.0 m
(16\036186) 28314  0.00 -1 s
1 sf
121372.0 h
(CLX Programmer's Reference) 149013  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20862 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps10 3 declareFont
3 sf
52832.0 22578.0 m
(A ) 55832  257.00 32 s
2 sf
(closed\036display) 72765  0.00 -1 s
3 sf
( condition is a special case of the more general ) 128783  257.00 32 s
2 sf
(x\036error) 137556  0.00 -1 s
3 sf
( \(see) 143062  257.00 32 s
( page) 149352  256.00 32 s
52832.0 25739.0 m
(16\036190) 60826  0.00 -1 s
( for information on ) 82919  -41.00 32 s
2 sf
(x\036error) 91692  0.00 -1 s
3 sf
(\).) 93337  0.00 -1 s
2 sf
34544.0 32015.0 m
(colormap\036error) 53348  0.00 -1 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 36734.0 m
(A) 54869  0.00 -1 s
( value for a ) 68215  -33.00 32 s
/timsps10i 5 declareFont
5 sf
(colormap) 79031  0.00 -1 s
3 sf
( argument does not name a defined colormap. ) 131041  -33.00 32 s
52832.0 43011.0 m
(A) 54869  0.00 -1 s
( ) 55900  325.00 32 s
2 sf
(colormap\036error) 74704  0.00 -1 s
3 sf
( is a special case of the more general ) 119713  325.22 32 s
2 sf
(resource\036error) 137418  0.00 -1 s
3 sf
( \(see page) 149352  325.50 32 s
52832.0 46172.0 m
(16\036189) 60826  0.00 -1 s
( for information on ) 82860  -55.75 32 s
2 sf
(resource\036error) 100565  0.00 -1 s
3 sf
(\).) 102210  0.00 -1 s
2 sf
34544.0 52448.0 m
(connection\036failure) 56487  0.00 -1 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 57167.0 m
(Signaled) 62708  0.00 -1 s
( when an X11 server refuses) 95172  83.00 32 s
( a connection. The following items are reported) 149352  82.43 32 s
52832.0 60328.0 m
(along) 59102  0.00 -1 s
( with the error:) 75884  -21.67 32 s
/symbb8 4 declareFont
4 sf
52832.0 66875.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(major\036version) 73900  0.00 -1 s
3 sf
( \037 The major version of the X server code.) 122891  -24.89 32 s
4 sf
52832.0 73423.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(minor\036version) 73900  0.00 -1 s
3 sf
( \037 The minor version of the X server code.) 123049  -24.89 32 s
4 sf
52832.0 79970.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(host) 62616  0.00 -1 s
3 sf
( \037 The host name for the X server.) 102503  -20.00 32 s
4 sf
52832.0 86518.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(display) 66064  0.00 -1 s
( \037 ) 69923  -31.00 32 s
3 sf
(The display on which) 94206  -31.00 32 s
( the error occurred.) 115734  -31.67 32 s
4 sf
52832.0 93066.0 m
(\267) 53872  0.00 -1 s
57912.0 h
5 sf
(reason) 65594  0.00 -1 s
3 sf
( \037 A string indicating why the connection failed.) 121378  -31.88 32 s
52832.0 99342.0 m
(A) 54869  0.00 -1 s
( ) 55361  -214.00 32 s
2 sf
(connection\036failure) 77304  0.00 -1 s
3 sf
( is a special case of the more general) 116968  -214.00 32 s
( ) 117459  -215.00 32 s
2 sf
(x\036error) 126232  0.00 -1 s
3 sf
( \(see page 16\036190 for) 149352  -214.50 32 s
52832.0 102503.0 m
(information) 66154  0.00 -1 s
( on) 69626  -56.00 32 s
( ) 70275  -57.00 32 s
2 sf
(x\036error) 79048  0.00 -1 s
3 sf
(\).) 80693  0.00 -1 s
2 sf
34544.0 108780.0 m
(cursor\036error) 49743  0.00 -1 s
3 sf
( ) 50348  -101.00 32 s
52832.0 h
2 sf
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 113498.0 m
(A) 54869  0.00 -1 s
( value for) 65626  -28.00 32 s
( a ) 68234  -28.50 32 s
5 sf
(cursor) 75603  0.00 -1 s
3 sf
( argument does not name a defined cursor.) 123365  -28.57 32 s
52832.0 119775.0 m
(A) 54869  0.00 -1 s
( ) 55483  -92.00 32 s
2 sf
(cursor\036error) 70682  0.00 -1 s
3 sf
( is a special case of the more general ) 111939  -91.67 32 s
2 sf
(resource\036error) 129644  0.00 -1 s
3 sf
( \(see page 16\036189) 149352  -91.67 32 s
52832.0 122936.0 m
(for) 56121  0.00 -1 s
( information on ) 74212  -57.00 32 s
2 sf
(resource\036error) 91917  0.00 -1 s
3 sf
(\).) 93562  0.00 -1 s
2 sf
34544.0 129213.0 m
(device\036busy) 48653  0.00 -1 s
3 sf
( ) 49287  -72.00 32 s
2 sf
52832.0 h
3 sf
138108.0 h
(Condition) 149397  0.00 -1 s
52832.0 133931.0 m
(Signaled) 62708  0.00 -1 s
( by \() 68185  152.00 32 s
2 sf
(setf) 72414  0.00 -1 s
3 sf
( \() 74212  153.00 32 s
2 sf
(pointer\036mapping) 94592  0.00 -1 s
3 sf
( ) 95450  152.00 32 s
5 sf
(display) 103602  0.00 -1 s
3 sf
(\) ) 105400  153.00 32 s
2 sf
(mapping) 116063  0.00 -1 s
3 sf
(\) when the ) 129137  152.33 32 s
2 sf
(set\036pointer\036map\036) 149352  0.00 -1 s
52832.0 137092.0 m
(ping) 58165  0.00 -1 s
3 sf
( request returns a busy status. A similar condition occurs in ) 122472  -295.91 32 s
2 sf
(set\036modifier\036mapping) 148646  0.00 -1 s
3 sf
(,) 149352  0.00 -1 s
52832.0 140253.0 m
(but) 56438  0.00 -1 s
( in this case, it returns) 81391  37.00 32 s
( a boolean indicating success, rather than signaling an error.) 149352  36.44 32 s
52832.0 143414.0 m
(The) 57220  0.00 -1 s
( ) 57898  -28.00 32 s
2 sf
(device\036busy) 72007  0.00 -1 s
3 sf
( condition) 83345  -28.00 32 s
( returns the display object as part of the error.) 134496  -28.56 32 s
52832.0 149691.0 m
(A) 54869  0.00 -1 s
( ) 55394  -181.00 32 s
2 sf
(device\036busy) 69503  0.00 -1 s
3 sf
( condition is a special case of the more general ) 121141  -181.00 32 s
2 sf
(x\036error) 129914  0.00 -1 s
3 sf
( \(see page 16\036190) 149352  -181.67 32 s
52832.0 152852.0 m
(for) 56121  0.00 -1 s
( information on) 73603  -37.00 32 s
( ) 74271  -38.00 32 s
2 sf
(x\036error) 83044  0.00 -1 s
3 sf
(\).) 84689  0.00 -1 s
2 sf
34544.0 159128.0 m
(drawable\036error) 53193  0.00 -1 s
( ) 53780  -119.00 32 s
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 163847.0 m
(A) 54869  0.00 -1 s
( value for a ) 68219  -32.00 32 s
5 sf
(drawable) 78880  0.00 -1 s
3 sf
( argument does not name a defined window or pixmap. ) 141495  -32.00 32 s
52832.0 170124.0 m
(A) 54869  0.00 -1 s
( ) 55913  338.00 32 s
2 sf
(drawable\036error) 74562  0.00 -1 s
3 sf
( is a special case of the more general ) 119687  338.11 32 s
2 sf
(resource\036error) 137392  0.00 -1 s
3 sf
( \(see page) 149352  338.50 32 s
52832.0 173284.0 m
(16\036189) 60826  0.00 -1 s
( for information on ) 82860  -55.75 32 s
2 sf
(resource\036error) 100565  0.00 -1 s
3 sf
(\).) 102210  0.00 -1 s
2 sf
34544.0 179561.0 m
(font\036error) 46764  0.00 -1 s
( ) 47413  -57.00 32 s
52832.0 h
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 184280.0 m
(A) 54869  0.00 -1 s
( value for a ) 68235  -28.00 32 s
5 sf
(font) 72625  0.00 -1 s
3 sf
( or ) 76331  -28.00 32 s
5 sf
(gcontext) 85891  0.00 -1 s
3 sf
( argument does not name a defined font. ) 131832  -27.63 32 s
52832.0 190556.0 m
(A) 54869  0.00 -1 s
( ) 55417  -158.00 32 s
2 sf
(font\036error) 67637  0.00 -1 s
3 sf
( is a special case of the more general ) 108299  -157.78 32 s
2 sf
(resource\036error) 126004  0.00 -1 s
3 sf
( \(see page 16\036189 for) 149352  -157.50 32 s
52832.0 193717.0 m
(information) 66154  0.00 -1 s
( on ) 70216  -86.00 32 s
2 sf
(resource\036error) 87921  0.00 -1 s
3 sf
(\).) 89566  0.00 -1 s
eop
0.0 0.0 m
270.0 sw
bop
0 223519 172720 223519 172720 0 0 0 clp
/timsps10b 2 declareFont
2 sf
141019.0 208619.0 m
(16\036185) 149013  0.00 -1 s
/timsps8i 1 declareFont
1 sf
20455.0 h
(CLX Programmer's Reference) 48096  0.00 32 s
541.0 sw
0.0 0.0 m
newpath
20320 204555 av
149013 204552 as
[] 0 setdash
dp
/timsps18b 6 declareFont
6 sf
20410.0 39376.0 m
94713.0 39466.0 m
(ERRORS) 115877  0.00 -1 s
116320.0 39376.0 m
117675.0 29893.0 m
2 sf
116862.0 37479.0 m
117675.0 34770.0 m
270.0 sw
0.0 0.0 m
/useNativeFonts false def
/Ops8_icon 0 declareFont
/useNativeFonts true def
0 19 fillpatset
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
121739 20320 av
148832 20320 as
148832 39285 as
121739 39285 as
closepath
fp
[] 0 setdash
dp
0.0 sw
270.0 sw
0.0 sw
270.0 sw
0 13 fillpatset
/drawmode PL_REPLACE def
newpath
0.0 sw
/drawmode PL_SET def
139403 39315 av
140504 36265 as
140504 36265 as
140504 32833 as
140504 32833 as
140504 29783 as
140504 29783 as
140504 26351 as
143442 26351 as
143442 27876 as
146747 27876 as
146747 25588 as
144543 23300 as
139403 23300 as
137200 25588 as
137200 37028 as
139403 39315 as
fp
newpath
139403 39315 av
140504 36265 as
newpath
270.0 sw
140504 36265 av
140504 32833 as
[] 0 setdash
dp
newpath
0.0 sw
140504 32833 av
140504 29783 as
newpath
270.0 sw
140504 29783 av
140504 26351 as
143442 26351 as
143442 27876 as
146747 27876 as
146747 25588 as
144543 23300 as
139403 23300 as
137200 25588 as
137200 37028 as
139403 39315 as
[] 0 setdash
dp
0.0 sw
270.0 sw
0.0 sw
270.0 sw
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
144543 39315 av
139403 39315 as
139403 39315 as
140504 36265 as
140504 36265 as
143442 36265 as
143442 32833 as
140504 32833 as
140504 32833 as
140504 29783 as
140504 29783 as
144543 29783 as
146747 32070 as
146747 37028 as
144543 39315 as
fp
newpath
144543 39315 av
139403 39315 as
[] 0 setdash
dp
newpath
0.0 sw
139403 39315 av
140504 36265 as
newpath
270.0 sw
140504 36265 av
143442 36265 as
143442 32833 as
140504 32833 as
[] 0 setdash
dp
newpath
0.0 sw
140504 32833 av
140504 29783 as
newpath
270.0 sw
140504 29783 av
144543 29783 as
146747 32070 as
146747 37028 as
144543 39315 as
[] 0 setdash
dp
0.0 sw
newpath
136098 23300 av
136098 23300 as
newpath
136098 43891 av
136098 43891 as
newpath
147848 43891 av
147848 43891 as
newpath
147848 23300 av
147848 23300 as
270.0 sw
/drawmode PL_REPLACE def
newpath
/drawmode PL_SET def
135296 39315 av
135296 23300 as
132359 23300 as
129421 26351 as
129421 27876 as
131991 27876 as
131991 39315 as
closepath
fp
[] 0 setdash
dp
0.0 sw
newpath
129054 23300 av
129054 23300 as
newpath
129054 43891 av
129054 43891 as
newpath
136765 43891 av
136765 43891 as
newpath
136765 23300 av
136765 23300 as
149351.0 39376.0 m
6 sf
/timsps10 3 declareFont
3 sf
20320.0 43485.0 m
541.0 sw
0.0 0.0 m
newpath
20455 41861 av
149013 41859 as
[] 0 setdash
dp
149352.0 43485.0 m
/timsps12b 7 declareFont
7 sf
20320.0 46871.0 m
(Introduction) 38756  0.00 -1 s
52832.0 h
2 sf
(16.1) 57771  0.00 -1 s
3 sf
() 57771  0.00 -1 s
59966.0 h
(CLX error conditions are hierarchial. The base error condition is) 149352  1834.33 32 s
52832.0 50032.0 m
2 sf
(x\036error) 61605  0.00 -1 s
3 sf
(,) 62311  0.00 -1 s
( and all other conditions are built on top of ) 111103  -11.70 32 s
2 sf
(x\036error) 119876  0.00 -1 s
3 sf
(. ) 121277  -11.00 32 s
2 sf
(x\036error) 130050  0.00 -1 s
3 sf
( can be built on a) 149352  -11.60 32 s
52832.0 53193.0 m
(lower\036level) 65680  0.00 -1 s
( condition that is implementation dependent \(this is probably) 132894  -181.00 32 s
( the ) 137391  -181.50 32 s
2 sf
(error) 143814  0.00 -1 s
3 sf
( con\036) 149352  -182.00 32 s
52832.0 56354.0 m
(dition\).) 61062  0.00 -1 s
2 sf
34544.0 62631.0 m
(define\036condition) 54139  0.00 -1 s
3 sf
( ) 54810  -35.00 32 s
/timsps10i 5 declareFont
5 sf
(name) 60922  0.00 -1 s
3 sf
( \() 62532  -35.00 32 s
5 sf
(parent\036types) 76638  0.00 -1 s
3 sf
(*\)) 78988  0.00 -1 s
( [\({) 82891  -36.00 32 s
5 sf
(slot\036specifier) 97625  0.00 -1 s
3 sf
(*}\) {) 103356  -35.00 32 s
5 sf
(option) 110568  0.00 -1 s
3 sf
(*}] ) 114943  -36.00 32 s
2 sf
142014.0 h
3 sf
(Macro) 149379  0.00 -1 s
52832.0 67350.0 m
(Any) 57691  0.00 -1 s
( new condition type must be defined with the ) 107724  -179.89 32 s
2 sf
(define\036condition) 127319  0.00 -1 s
3 sf
( macro. A condition) 149352  -179.67 32 s
52832.0 70510.0 m
(type) 57691  0.00 -1 s
( has a name, parent types, report message, and any number of slot items. See the ) 144490  -286.75 32 s
5 sf
(Lisp) 149352  0.00 -1 s
52832.0 73671.0 m
(Reference) 64114  0.00 -1 s
3 sf
( manual for further information regarding) 110825  -45.00 32 s
( ) 111485  -46.00 32 s
2 sf
(define\036condition) 131080  0.00 -1 s
3 sf
(.) 131786  0.00 -1 s
52832.0 79948.0 m
(The) 57220  0.00 -1 s
( following are the predefined error conditions that can occur in CLX.) 134767  -31.64 32 s
2 sf
34544.0 86225.0 m
(access\036error) 49272  0.00 -1 s
52832.0 h
137408.0 h
( ) 138063  -51.00 32 s
3 sf
(Condition) 149352  0.00 -1 s
52832.0 90943.0 m
(An) 56280  0.00 -1 s
( ) 56949  -37.00 32 s
2 sf
(access\036error) 71677  0.00 -1 s
3 sf
( can occur for several) 95817  -37.00 32 s
( reasons:) 105732  -38.00 32 s
/symbb8 4 declareFont
4 sf
52832.0 97491.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(A) 59949  0.00 -1 s
( client attempted to grab a) 87863  -295.00 32 s
( key/button combination already grabbed by another cli\036) 149352  -295.57 32 s
57912.0 100652.0 m
(ent) 61360  0.00 -1 s
4 sf
52832.0 107199.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(A) 59949  0.00 -1 s
( client attempted to free a colormap entry that it did not already allocate) 140569  -25.62 32 s
4 sf
52832.0 113747.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(A) 59949  0.00 -1 s
( client attempted to store into a read\036only colormap entry) 124042  -27.56 32 s
4 sf
52832.0 120294.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(A) 59949  0.00 -1 s
( client attempted) 78234  -262.00 32 s
( to modify the access control list from other than the local \(or oth\036) 149352  -262.54 32 s
57912.0 123455.0 m
(erwise) 65276  0.00 -1 s
( authorized\)) 78796  -35.00 32 s
( host) 84170  -36.00 32 s
4 sf
52832.0 130003.0 m
(\267) 53872  0.00 -1 s
57912.0 h
3 sf
(A) 59949  0.00 -1 s
( client attempted to select an event) 98864  -19.00 32 s
( type that another client has already selected,) 149352  -19.57 32 s
57912.0 133164.0 m
(and,) 62693  0.00 -1 s
( that at most, one client can select at a time) 110970  -23.80 32 s
52832.0 139440.0 m
(An) 56280  0.00 -1 s
( ) 56930  -56.00 32 s
2 sf
(access\036error) 71658  0.00 -1 s
3 sf
( is a special case of the more general ) 113240  -55.56 32 s
2 sf
(request\036error) 129536  0.00 -1 s
3 sf
( \(see page 16\036189) 149352  -55.67 32 s
52832.0 142601.0 m
(for) 56121  0.00 -1 s
( information on) 73585  -46.00 32 s
( ) 74244  -47.00 32 s
2 sf
(request\036error) 90540  0.00 -1 s
3 sf
(\).) 92185  0.00 -1 s
2 sf
34544.0 148878.0 m
(alloc\036error) 47549  0.00 -1 s
52832.0 h
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 153597.0 m
(The) 57220  0.00 -1 s
( server failed to allocate the requested resource or server memory. ) 132148  -26.91 32 s
52832.0 159873.0 m
(An) 56280  0.00 -1 s
( ) 56772  -214.00 32 s
2 sf
(alloc\036error) 69777  0.00 -1 s
3 sf
( is a special case of the more general ) 109933  -214.00 32 s
2 sf
(request\036error) 126229  0.00 -1 s
3 sf
( \(see page 16\036189 for) 149352  -213.75 32 s
52832.0 163034.0 m
(information) 66154  0.00 -1 s
( on ) 70248  -70.00 32 s
2 sf
(request\036error) 86544  0.00 -1 s
3 sf
(\).) 88189  0.00 -1 s
2 sf
34544.0 169311.0 m
(atom\036error) 48017  0.00 -1 s
52832.0 h
138108.0 h
3 sf
(Condition) 149397  0.00 -1 s
52832.0 174030.0 m
(A) 54869  0.00 -1 s
( value for an ) 69638  -30.00 32 s
5 sf
(atom) 75281  0.00 -1 s
3 sf
( argument does not name a defined atom. ) 122304  -29.63 32 s
52832.0 180306.0 m
(An) 56280  0.00 -1 s
( ) 56739  -247.00 32 s
2 sf
(atom\036error) 70212  0.00 -1 s
3 sf
( is a special case) 87876  -247.00 32 s
( of the more general ) 110068  -247.60 32 s
2 sf
(request\036error) 126364  0.00 -1 s
3 sf
( \(see page 16\036189 for) 149352  -247.50 32 s
52832.0 183467.0 m
(information) 66154  0.00 -1 s
( on ) 70248  -70.00 32 s
2 sf
(request\036error) 86544  0.00 -1 s
3 sf
(\).) 88189  0.00 -1 s
2 sf
34544.0 189744.0 m
(closed\036display) 51477  0.00 -1 s
52832.0 h
3 sf
(Condition) 64121  0.00 -1 s
52832.0 194462.0 m
(The) 57220  0.00 -1 s
( ) 57881  -45.00 32 s
2 sf
(closed\036display) 74814  0.00 -1 s
3 sf
( condition) 86135  -45.00 32 s
( is signaled when trying to read or write a closed display) 149352  -45.55 32 s
52832.0 197623.0 m
(\(that) 58003  0.00 -1 s
( is, ) 61817  -93.00 32 s
2 sf
(close\036display) 77181  0.00 -1 s
3 sf
( has been) 87497  -93.00 32 s
( called on the ) 102955  -93.50 32 s
2 sf
(display) 111581  0.00 -1 s
3 sf
( object, or a server\036disconnect oc\036) 149352  -93.60 32 s
52832.0 200784.0 m
(curred\).) 61683  0.00 -1 s
( The ) 67433  -25.00 32 s
2 sf
(closed\036display) 84366  0.00 -1 s
3 sf
( object is reported with the error. ) 121965  -24.71 32 s
eop
initialstate restore
