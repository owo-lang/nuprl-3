-*- Fonts: CPTFONT,CPTFONTI -*-

1Author: Doug Howe

0	1In this file is a transcript of the session in which certain
ML-assisted examinations of Nuprl proofs were done.  The properties that
the examinations are supposed to establish are given in the appendix of
my report "The Computational Behaviour of Girard's Paradox".  Most of
the ML objects relevant to this effort are contained in the file
0proof_postprocessing.ml1.

	The transcript was generated by the ML-dribble utility, which
can be obtained by loading in the file nuprl:sys;ml;ml-dribble (if the
file is not there, then the utility has been incorporated into the prl
system).  Dribbling is started by calling the (lisp) function
start-ml-dribble with a file-name argument, and is ended by calling
end-ml-dribble.  The actual interaction with ML that was generated has
been editted; errors have been removed, but what is left is a sequence
of evaluations which would proceed exactly as shown if redone.  The
lines which are part of the transcript begin with "M> "; everything else
is commentary.


0M> length postponed_membership_goals;;
M> 667 : int
M> length completed_proofs;;
M> 665 : int
M> length partial_results;;
M> 2 : int
M> let [[p1],v1;[p2],v2] = partial_results;;
M> p1 = - : proof
M> v1 = - : (proof list -> proof)
M> p2 = - : proof
M> v2 = - : (proof list -> proof)
M> concl p1;;
M> (ˆz. c(z) & q(z,z2))((ˆw. w)(x)) in U1
M> : term
M> hypotheses p1;;
M> [Z: Type;
M>  q: Z->Z->Type;
M>  c: Z->Type;
M>  dU(i(Z, q, c));
M>  z1: Z;
M>  z2: Z;
M>  c(z1);
M>  c(z2);
M>  q(z1,z2);
M>  x: Z;
M>  (ˆz. c(z) & q(z,z1))(x)]
M> : declaration list 
M> p1=p2;;
M> TRUE : bool
M> let pl,v = (Refine (function_equality_apply 'Z->U1') THEN
M> RealAutotactic) p1;; pl = [] : proof list
M> v = - : (proof list -> proof)
M> let p = v1 [v []];;
M> p = - : proof
M> filter_proofs [p];;
M> [()] : void list
M> Runtime: 5944 ms
M> questionable_subproofs;;
M> [] : proof list
M> additional_subgoals;;
M> [] : proof list
M> 
M> filter_proofs completed_proofs;;
M> [...]
M> : void list
M> Runtime: 501149 ms
M> length questionable_subproofs;;
M> 2 : int
M> map concl questionable_subproofs;;
M> [i(U, Uless, dU) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type )
M> -> Type;
M>  i(U, Uless, dU) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type )
M> -> Type] : term list
M> length additional_subgoals;;
M> 0 : int
M> 
M> () : void
M> additional_subgoals := [];;
M> [] : proof list
M> questionable_subproofs := [];;
M> [] : proof list
M> thms;;
M> [`assumption`;
M>  `Type_`;
M>  `Type__`;
M>  `and_`;
M>  `and_Intro_lemma`;
M>  `and_Elim_lemma_1`;
M>  `and_Elim_lemma_2`;
M>  `assumed_type_`;
M>  `assumed_function_`;
M>  `embeds_`;
M>  `emb_`;
M>  `eq_`;
M>  `U_`;
M>  `i_`;
M>  `trans_`;
M>  `chain_in_`;
M>  `wf_`;
M>  `Uless_`;
M>  `dU_`;
M>  `eq_sym`;
M>  `eq_lemma`;
M>  `embedding_lemma`;
M>  `dU_implies_trans`;
M>  `dU_implies_wf`;
M>  `Uord_trans`;
M>  `Uord_wf`;
M>  `Uord_in_dU`;
M>  `Rb_in_dU`;
M>  `Uord_max`;
M>  `contradiction`]
M> : tok list
M> 
M> filter_proofs (map proof_of_theorem thms);;
M> [...]
M> : void list
M> length additional_subgoals;;
M> 77 : int
M> map concl questionable_subproofs;;
M> [i(U, Uless, dU) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type )
M> -> Type;
M>  i(U, Uless, dU) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type )
M> -> Type; 
M>  U1 in object]
M> : term list
M> reset_for_membership_beating additional_subgoals;;
M> [] : (proof list # (proof list -> proof)) list
M> length postponed_membership_goals;;
M> 77 : int
M> 
M> BeatOnMembershipGoalsWith RealAutotactic;;
M> () : void
M> let [pl,v] = partial_results;;
M> pl = [-] : proof list
M> v = - : (proof list -> proof)
M> let [p] = pl;;
M> p = - : proof
M> concl p;;
M> (ˆz. c(z) & q(z,z2))((ˆw. w)(x)) in term_of(Type_) : term
M> hypotheses p;;
M> [Z: Type;
M>  q: Z->Z->Type;
M>  c: Z->Type;
M>  dU(i(Z, q, c));
M>  z1: Z;
M>  z2: Z;
M>  c(z1);
M>  c(z2);
M>  q(z1,z2);
M>  x: Z;
M>  (ˆz. c(z) & q(z,z1))(x)]
M> : declaration list
M> let ppl,vv = (Refine (function_equality_apply 'Z->term_of(Type_)')
M> THEN RealAutotactic) p;; ppl = [] : proof list
M> vv = - : (proof list -> proof)
M> Runtime: 1577 ms
M> let pp = v [vv ppl];;
M> pp = - : proof
M> let final_proofs_to_check = pp . completed_proofs;;
M> final_proofs_to_check = 
M> [...]
M> : proof list
M> 
M> questionable_subproofs := [];;
M> [] : proof list
M> additional_subgoals := [];;
M> [] : proof list
M> filter_proofs final_proofs_to_check;;
M> [...]
M> : void list
M> length questionable_subproofs;;
M> 7 : int
M> length additional_subgoals;;
M> 0 : int
M> 
M> map (\p. hypotheses p , concl p) questionable_subproofs;;
M> 
M> [
M> 
M>  [wf(U,Uless,dU); y: U; (ˆu. ui(U, Uless, dU)  U)(y)],
M>  i(U, Uless, dU) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type )
M> -> Type; 
M> 
M>  [wf(U,Uless,dU)],
M>  i(U, Uless, dU) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type )
M> -> Type; 
M> 
M>  [P: U->Type;
M>   y:U. P(y) => x:U. P(x) & Uless(x,y);
M>   x: U;
M>   P(x);
M>   A0: Type;
M>   r0: A0->A0->Type;
M>   d0: A0->Type;
M>   xi(A0, r0, d0)  U;
M>   xi(A0, r0, d0)  U;
M>   y: A0;
M>   A1: Type;
M>   r1: A1->A1->Type;
M>   d1: A1->Type;
M>   f1: A1->A0;
M>   P(i(A1, r1, d1));
M>   (f1,y) embeds (A1,r1,d1) in (A0,r0,d0);
M>   u: U;
M>   P(u);
M>   A3: Type;
M>   r3: A3->A3->Type;
M>   d3: A3->Type;
M>   A2: Type;
M>   r2: A2->A2->Type;
M>   d2: A2->Type;
M>   ui(A3, r3, d3)  U;
M>   (i(A1, r1, d1))i(A2, r2, d2)  U;
M>   (A3,r3,d3) < (A2,r2,d2);
M>   (i(A2, r2, d2))(i(A1, r1, d1))  U],
M>  i(A2, r2, d2) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type ) ->
M> Type; 
M>  
M>  [P: U->Type;
M>   y:U. P(y) => x:U. P(x) & Uless(x,y);
M>   x: U;
M>   P(x);
M>   A0: Type;
M>   r0: A0->A0->Type;
M>   d0: A0->Type;
M>   xi(A0, r0, d0)  U;
M>   xi(A0, r0, d0)  U;
M>   u: U;
M>   P(u);
M>   A1: Type;
M>   r1: A1->A1->Type;
M>   d1: A1->Type;
M>   A2: Type;
M>   r2: A2->A2->Type;
M>   d2: A2->Type;
M>   ui(A1, r1, d1)  U;
M>   (i(A0, r0, d0))i(A2, r2, d2)  U;
M>   (A1,r1,d1) < (A2,r2,d2);
M>   (i(A2, r2, d2))(i(A0, r0, d0))  U],
M>  i(A2, r2, d2) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type ) ->
M> Type; 
M> 
M>  [x: U;
M>   y: U;
M>   z: U;
M>   A2: Type;
M>   r2: A2->A2->Type;
M>   d2: A2->Type;
M>   A3: Type;
M>   r3: A3->A3->Type;
M>   d3: A3->Type;
M>   yi(A2, r2, d2)  U;
M>   zi(A3, r3, d3)  U;
M>   (A2,r2,d2) < (A3,r3,d3);
M>   A1: Type;
M>   r1: A1->A1->Type;
M>   d1: A1->Type;
M>   B: Type;
M>   s: B->B->Type;
M>   e: B->Type;
M>   xi(A1, r1, d1)  U;
M>   yi(B, s, e)  U;
M>   (A1,r1,d1) < (B,s,e);
M>   (i(B, s, e))(i(A2, r2, d2))  U],
M>  i(B, s, e) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type ) ->
M> Type; 
M> 
M>  [A1: Type;
M>   r1: A1->A1->Type;
M>   d1: A1->Type;
M>   A: Type;
M>   r: A->A->Type;
M>   d: A->Type;
M>   (i(A1, r1, d1))i(A, r, d)  U;
M>   trans(A,r,d);
M>   wf(A,r,d);
M>   (i(A, r, d))(i(A1, r1, d1))  U],
M>  i(A, r, d) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type ) ->
M> Type; 
M> 
M>  [A1: Type;
M>   r1: A1->A1->Type;
M>   d1: A1->Type;
M>   A: Type;
M>   r: A->A->Type;
M>   d: A->Type;
M>   (i(A1, r1, d1))i(A, r, d)  U;
M>   trans(A,r,d);
M>   wf(A,r,d);
M>   (i(A, r, d))(i(A1, r1, d1))  U],
M>  i(A, r, d) in ( B:Type -> (B->B->Type) -> (B->Type) -> Type ) ->
M> Type] : (declaration list # term) list
